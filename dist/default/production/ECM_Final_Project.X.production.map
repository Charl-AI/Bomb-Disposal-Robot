Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\ECM_Final_Project.X.production.sym \
  --cmf=dist/default/production\ECM_Final_Project.X.production.cmf -z \
  -Q18F4331 -oC:\Users\charl\AppData\Local\Temp\sbl0.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/ECM_Final_Project.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=083h-02FFh -pstack=STACK -ACODE=00h-01FFFh \
  -ACONST=00h-01FFFh -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0300h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\charl\AppData\Local\Temp\sbl0.o \
  dist/default/production\ECM_Final_Project.X.production.o 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\charl\AppData\Local\Temp\sbl0.o
                init                                 3E       3E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\ECM_Final_Project.X.production.o
                intcode                               8        8       36        4       0
                temp                                 39       39        1        1       1
                smallconst                          300      300       32      180       0
                text24                              BE6      BE6       4C      199       0
                text22                              DF6      DF6        E      199       0
                text21                              A38      A38       78      199       0
                text20                              CA8      CA8       30      199       0
                text19                              C72      C72       36      199       0
                text18                              D06      D06       2E      199       0
                text17                              50C      50C      150      199       0
                text16                              DDE      DDE       18      199       0
                text15                              DAC      DAC       1A      199       0
                text14                              C32      C32       40      199       0
                text13                              932      932       84      199       0
                text12                              D34      D34       26      199       0
                text11                              65C      65C      124      199       0
                text10                              780      780       EA      199       0
                text9                               B24      B24       74      199       0
                text8                               AB0      AB0       74      199       0
                text7                               D92      D92       1A      199       0
                text6                               86A      86A       C8      199       0
                text5                               D78      D78       1A      199       0
                text4                               DC6      DC6       18      199       0
                text3                               CD8      CD8       2E      199       0
                text2                               B98      B98       4E      199       0
                text1                               9B6      9B6       82      199       0
                text0                               332      332      1DA      199       0
                cstackCOMRAM                          1        1       29        1       1
                cstackBANK0                          60       60       23       60       1
                bssCOMRAM                            2A       2A        F        1       1
                cinit                               D5A      D5A       1E      199       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8       36         0
                init                                 3E       3E        4         0
                reset_vec                             0        0        4         0
                text24                              BE6      BE6       4C         0
                text22                              DF6      DF6        E         0
                text21                              A38      A38       78         0
                text20                              CA8      CA8       30         0
                text19                              C72      C72       36         0
                text18                              D06      D06       2E         0
                text17                              50C      50C      150         0
                text16                              DDE      DDE       18         0
                text15                              DAC      DAC       1A         0
                text14                              C32      C32       40         0
                text13                              932      932       84         0
                text12                              D34      D34       26         0
                text11                              65C      65C      124         0
                text10                              780      780       EA         0
                text9                               B24      B24       74         0
                text8                               AB0      AB0       74         0
                text7                               D92      D92       1A         0
                text6                               86A      86A       C8         0
                text5                               D78      D78       1A         0
                text4                               DC6      DC6       18         0
                text3                               CD8      CD8       2E         0
                text2                               B98      B98       4E         0
                text1                               9B6      9B6       82         0
                text0                               332      332      1DA         0
                cinit                               D5A      D5A       1E         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       32         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 39       39        1         1
                cstackCOMRAM                          1        1       29         1
                bssCOMRAM                            2A       2A        F         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       23         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000039  00003A         1       1  COMRAM  
                intcode                        000008  00003A  000042         4       0  CODE    
                cstackBANK0                    000060  000023  000083        60       1  BANK0   
                smallconst                     000300  000032  000332       180       0  SMALLCON
                text0                          000332  000AD2  000E04       199       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000083-0000FF               7D
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           00003A-00005F               26
                         000083-0002FF              27D
        CODE             000004-000007                4
                         000042-0002FF              2BE
                         000E04-001FFF             11FC
        COMRAM           00003A-00005F               26
        CONST            000004-000007                4
                         000042-0002FF              2BE
                         000E04-001FFF             11FC
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000E04-001FFF             11FC
        RAM              000083-0002FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000E04-001FFF              100
        STACK            000083-0002FF              27D

                                  Symbol Table

?___awdiv                      cstackCOMRAM 00000E
?___wmul                       cstackCOMRAM 000008
LCD_String@string              cstackCOMRAM 00000C
LCDout@number                  cstackCOMRAM 000009
SendLCD@Byte                   cstackCOMRAM 00000B
SendLCD@type                   cstackCOMRAM 00000A
SetLine@line                   cstackCOMRAM 00000C
_ANSEL0                        (abs)        000FB8
_ANSEL1                        (abs)        000FB9
_BAUDCONbits                   (abs)        000FAA
_CAP1BUFH                      (abs)        000F69
_CAP1BUFL                      (abs)        000F68
_CAP1CON                       (abs)        000F63
_ClearLCD                      text15       000DAC
_DFLTCON                       (abs)        000F60
_E_TOG                         text22       000DF6
_INTCONbits                    (abs)        000FF2
_IPR1bits                      (abs)        000F9F
_InterruptHandlerHigh          intcode      000008
_LATAbits                      (abs)        000F89
_LATB                          (abs)        000F8A
_LATCbits                      (abs)        000F8B
_LATDbits                      (abs)        000F8C
_LCD_String                    text19       000C72
_LCDout                        text21       000A38
_OSCCON                        (abs)        000FD3
_OSCCONbits                    (abs)        000FD3
_PDC0H                         (abs)        000F78
_PDC0L                         (abs)        000F79
_PDC1H                         (abs)        000F76
_PDC1L                         (abs)        000F77
_PIE1bits                      (abs)        000F9D
_PIR1bits                      (abs)        000F9E
_PORTDbits                     (abs)        000F83
_PTCON0                        (abs)        000F7F
_PTCON1                        (abs)        000F7E
_PTPERH                        (abs)        000F7A
_PTPERL                        (abs)        000F7B
_PWMCON0                       (abs)        000F6F
_PWMCON1                       (abs)        000F6E
_RCONbits                      (abs)        000FD0
_RCREG                         (abs)        000FAE
_RCSTAbits                     (abs)        000FAB
_RFID_flag                     bssCOMRAM    00002B
_RFIDbuf                       bssCOMRAM    00002D
_SPBRG                         (abs)        000FAF
_SPBRGH                        (abs)        000FB0
_SendLCD                       text20       000CA8
_SetLine                       text18       000D06
_T5CON                         (abs)        000FB7
_TRISAbits                     (abs)        000F92
_TRISBbits                     (abs)        000F93
_TRISCbits                     (abs)        000F94
_TRISDbits                     (abs)        000F95
_TXSTAbits                     (abs)        000FAC
__CFG_LVP$OFF                  (abs)        000000
__CFG_MCLRE$OFF                (abs)        000000
__CFG_OSC$IRCIO                (abs)        000000
__HRAM                         (abs)        000000
__Habs1                        abs1         000000
__Hbank0                       bank0        000000
__Hbank1                       bank1        000000
__Hbank2                       bank2        000000
__Hbigbss                      bigbss       000000
__Hbigdata                     bigdata      000000
__Hbigram                      bigram       000000
__Hbss                         bss          000000
__HbssCOMRAM                   bssCOMRAM    000000
__Hcinit                       cinit        000000
__Hclrtext                     clrtext      000000
__Hcomram                      comram       000000
__Hconfig                      config       30000E
__Hconst                       const        000000
__HcstackBANK0                 cstackBANK0  000000
__HcstackCOMRAM                cstackCOMRAM 000000
__Hdata                        data         000000
__Heeprom_data                 eeprom_data  000000
__Hfarbss                      farbss       000000
__Hfardata                     fardata      000000
__Hibigdata                    ibigdata     000000
__Hidata                       idata        000000
__Hidloc                       idloc        200008
__Hifardata                    ifardata     000000
__Hinit                        init         000042
__Hintcode                     intcode      00003E
__Hintcode_body                intcode_body 000000
__Hintcodelo                   intcodelo    00003E
__Hintentry                    intentry     000000
__Hintret                      intret       000000
__Hintsave_regs                intsave_regs 000000
__Hirdata                      irdata       000000
__Hmediumconst                 mediumconst  000000
__HnvFARRAM                    nvFARRAM     000000
__Hnvbit                       nvbit        000000
__Hnvrram                      nvrram       000000
__Hparam                       rparam       000000
__Hpowerup                     powerup      00003E
__Hram                         ram          000000
__Hramtop                      ramtop       000300
__Hrbit                        rbit         000000
__Hrbss                        rbss         000000
__Hrdata                       rdata        000000
__Hreset_vec                   reset_vec    000004
__Hrparam                      rparam       000000
__Hsfr                         sfr          000000
__Hsmallconst                  smallconst   000332
__Hspace_0                     (abs)        30000E
__Hspace_1                     (abs)        000083
__Hspace_2                     (abs)        000000
__Hstack                       stack        000000
__Hstruct                      struct       000000
__Htemp                        temp         00003A
__Htext                        text         000000
__Htext0                       text0        000000
__Htext1                       text1        000000
__Htext10                      text10       000000
__Htext11                      text11       000000
__Htext12                      text12       000000
__Htext13                      text13       000000
__Htext14                      text14       000000
__Htext15                      text15       000000
__Htext16                      text16       000000
__Htext17                      text17       000000
__Htext18                      text18       000000
__Htext19                      text19       000000
__Htext2                       text2        000000
__Htext20                      text20       000000
__Htext21                      text21       000000
__Htext22                      text22       000000
__Htext24                      text24       000000
__Htext3                       text3        000000
__Htext4                       text4        000000
__Htext5                       text5        000000
__Htext6                       text6        000000
__Htext7                       text7        000000
__Htext8                       text8        000000
__Htext9                       text9        000000
__LRAM                         (abs)        000001
__Labs1                        abs1         000000
__Lbank0                       bank0        000000
__Lbank1                       bank1        000000
__Lbank2                       bank2        000000
__Lbigbss                      bigbss       000000
__Lbigdata                     bigdata      000000
__Lbigram                      bigram       000000
__Lbss                         bss          000000
__LbssCOMRAM                   bssCOMRAM    000000
__Lcinit                       cinit        000000
__Lclrtext                     clrtext      000000
__Lcomram                      comram       000000
__Lconfig                      config       300000
__Lconst                       const        000000
__LcstackBANK0                 cstackBANK0  000000
__LcstackCOMRAM                cstackCOMRAM 000000
__Ldata                        data         000000
__Leeprom_data                 eeprom_data  000000
__Lfarbss                      farbss       000000
__Lfardata                     fardata      000000
__Libigdata                    ibigdata     000000
__Lidata                       idata        000000
__Lidloc                       idloc        200000
__Lifardata                    ifardata     000000
__Linit                        init         00003E
__Lintcode                     intcode      000008
__Lintcode_body                intcode_body 000000
__Lintcodelo                   intcodelo    00003E
__Lintentry                    intentry     000000
__Lintret                      intret       000000
__Lintsave_regs                intsave_regs 000000
__Lirdata                      irdata       000000
__Lmediumconst                 mediumconst  000000
__LnvFARRAM                    nvFARRAM     000000
__Lnvbit                       nvbit        000000
__Lnvrram                      nvrram       000000
__Lparam                       rparam       000000
__Lpowerup                     powerup      00003E
__Lram                         ram          000000
__Lramtop                      ramtop       000300
__Lrbit                        rbit         000000
__Lrbss                        rbss         000000
__Lrdata                       rdata        000000
__Lreset_vec                   reset_vec    000000
__Lrparam                      rparam       000000
__Lsfr                         sfr          000000
__Lsmallconst                  smallconst   000300
__Lspace_0                     (abs)        000000
__Lspace_1                     (abs)        000000
__Lspace_2                     (abs)        000000
__Lstack                       stack        000000
__Lstruct                      struct       000000
__Ltemp                        temp         000039
__Ltext                        text         000000
__Ltext0                       text0        000000
__Ltext1                       text1        000000
__Ltext10                      text10       000000
__Ltext11                      text11       000000
__Ltext12                      text12       000000
__Ltext13                      text13       000000
__Ltext14                      text14       000000
__Ltext15                      text15       000000
__Ltext16                      text16       000000
__Ltext17                      text17       000000
__Ltext18                      text18       000000
__Ltext19                      text19       000000
__Ltext2                       text2        000000
__Ltext20                      text20       000000
__Ltext21                      text21       000000
__Ltext22                      text22       000000
__Ltext24                      text24       000000
__Ltext3                       text3        000000
__Ltext4                       text4        000000
__Ltext5                       text5        000000
__Ltext6                       text6        000000
__Ltext7                       text7        000000
__Ltext8                       text8        000000
__Ltext9                       text9        000000
__S0                           (abs)        30000E
__S1                           (abs)        000083
__S2                           (abs)        000000
___awdiv                       text13       000932
___awdiv@counter               cstackCOMRAM 000012
___awdiv@dividend              cstackCOMRAM 00000E
___awdiv@divisor               cstackCOMRAM 000010
___awdiv@quotient              cstackCOMRAM 000014
___awdiv@sign                  cstackCOMRAM 000013
___inthi_sp                    stack        000000
___intlo_sp                    stack        000000
___param_bank                  (abs)        000000
___rparam_used                 (abs)        000001
___sp                          stack        000000
___wmul                        text12       000D34
___wmul@multiplicand           cstackCOMRAM 00000A
___wmul@multiplier             cstackCOMRAM 000008
___wmul@product                cstackCOMRAM 00000C
__accesstop                    (abs)        000060
__activetblptr                 (abs)        000001
__end_of_ClearLCD              text15       000DC6
__end_of_E_TOG                 text22       000E04
__end_of_InterruptHandlerHigh  intcode      00003E
__end_of_LCD_String            text19       000CA8
__end_of_LCDout                text21       000AB0
__end_of_SendLCD               text20       000CD8
__end_of_SetLine               text18       000D34
__end_of___awdiv               text13       0009B6
__end_of___wmul                text12       000D5A
__end_of__initialization       cinit        000D66
__end_of_check_RFID            text17       00065C
__end_of_classify_data         text16       000DF6
__end_of_display_RFID          text14       000C72
__end_of_initPWM               text7        000DAC
__end_of_init_LCD              text6        000932
__end_of_init_RFID             text5        000D92
__end_of_init_motor_struct     text10       00086A
__end_of_init_sensor           text4        000DDE
__end_of_main                  text0        00050C
__end_of_moveBackward          text9        000B98
__end_of_moveForward           text8        000B24
__end_of_processRFID           text24       000C32
__end_of_setMotorPWM           text11       000780
__end_of_setup                 text3        000D06
__end_of_stop                  text2        000BE6
__end_of_turnRight             text1        000A38
__initialization               cinit        000D5A
__mediumconst                  mediumconst  000000
__pbssCOMRAM                   bssCOMRAM    00002A
__pcinit                       cinit        000D5A
__pcstackBANK0                 cstackBANK0  000060
__pcstackCOMRAM                cstackCOMRAM 000001
__pintcode                     intcode      000008
__psmallconst                  smallconst   000300
__ptext0                       text0        000332
__ptext1                       text1        0009B6
__ptext10                      text10       000780
__ptext11                      text11       00065C
__ptext12                      text12       000D34
__ptext13                      text13       000932
__ptext14                      text14       000C32
__ptext15                      text15       000DAC
__ptext16                      text16       000DDE
__ptext17                      text17       00050C
__ptext18                      text18       000D06
__ptext19                      text19       000C72
__ptext2                       text2        000B98
__ptext20                      text20       000CA8
__ptext21                      text21       000A38
__ptext22                      text22       000DF6
__ptext24                      text24       000BE6
__ptext3                       text3        000CD8
__ptext4                       text4        000DC6
__ptext5                       text5        000D78
__ptext6                       text6        00086A
__ptext7                       text7        000D92
__ptext8                       text8        000AB0
__ptext9                       text9        000B24
__ramtop                       ramtop       000300
__size_of_ClearLCD             (abs)        000000
__size_of_E_TOG                (abs)        000000
__size_of_InterruptHandlerHigh (abs)        000000
__size_of_LCD_String           (abs)        000000
__size_of_LCDout               (abs)        000000
__size_of_SendLCD              (abs)        000000
__size_of_SetLine              (abs)        000000
__size_of___awdiv              (abs)        000000
__size_of___wmul               (abs)        000000
__size_of_check_RFID           (abs)        000000
__size_of_classify_data        (abs)        000000
__size_of_display_RFID         (abs)        000000
__size_of_initPWM              (abs)        000000
__size_of_init_LCD             (abs)        000000
__size_of_init_RFID            (abs)        000000
__size_of_init_motor_struct    (abs)        000000
__size_of_init_sensor          (abs)        000000
__size_of_main                 (abs)        000000
__size_of_moveBackward         (abs)        000000
__size_of_moveForward          (abs)        000000
__size_of_processRFID          (abs)        000000
__size_of_setMotorPWM          (abs)        000000
__size_of_setup                (abs)        000000
__size_of_stop                 (abs)        000000
__size_of_turnRight            (abs)        000000
__smallconst                   smallconst   000300
_check_RFID                    text17       00050C
_classify_data                 text16       000DDE
_display_RFID                  text14       000C32
_initPWM                       text7        000D92
_init_LCD                      text6        00086A
_init_RFID                     text5        000D78
_init_motor_struct             text10       000780
_init_sensor                   text4        000DC6
_main                          text0        000332
_moveBackward                  text9        000B24
_moveForward                   text8        000AB0
_processRFID                   text24       000BE6
_robot_mode                    bssCOMRAM    00002C
_setMotorPWM                   text11       00065C
_setup                         text3        000CD8
_stop                          text2        000B98
_turnRight                     text1        0009B6
btemp                          temp         000039
check_RFID@byte1               cstackCOMRAM 00001E
check_RFID@byte2               cstackCOMRAM 00001F
check_RFID@byte3               cstackCOMRAM 000020
check_RFID@byte4               cstackCOMRAM 000021
check_RFID@byte5               cstackCOMRAM 000022
check_RFID@checksum            cstackCOMRAM 000023
check_RFID@dataBuf             cstackCOMRAM 00000E
check_RFID@hexBuf              cstackCOMRAM 000012
check_RFID@i                   cstackCOMRAM 000024
classify_data@raw_data         cstackCOMRAM 000008
display_RFID@dataBuf           cstackCOMRAM 00000D
display_RFID@i                 cstackCOMRAM 00000F
end_of_initialization          cinit        000D66
initPWM@PWMperiod              cstackCOMRAM 000008
init_motor_struct@mL           cstackCOMRAM 00001F
init_motor_struct@mR           cstackCOMRAM 000021
int$flags                      temp         000039
intlevel0                      text         000000
intlevel1                      text         000000
intlevel2                      text         000000
intlevel3                      text         000000
main@beacon_location           cstackBANK0  00006C
main@i                         cstackBANK0  000068
main@i_502                     cstackBANK0  00006D
main@motorL                    cstackBANK0  000071
main@motorR                    cstackBANK0  00007A
main@movementMicros            cstackBANK0  000064
main@moving_speed              cstackBANK0  00006F
main@raw_data                  cstackBANK0  000062
main@searching_speed           cstackBANK0  000060
moveBackward@i                 cstackCOMRAM 000026
moveBackward@mL                cstackCOMRAM 00001F
moveBackward@mR                cstackCOMRAM 000021
moveBackward@max_power         cstackCOMRAM 000023
moveForward@i                  cstackCOMRAM 000026
moveForward@mL                 cstackCOMRAM 00001F
moveForward@mR                 cstackCOMRAM 000021
moveForward@max_power          cstackCOMRAM 000023
processRFID@RFIDbuf            cstackCOMRAM 000001
processRFID@i                  cstackCOMRAM 000004
processRFID@latestChar         cstackCOMRAM 000003
processRFID@position_in_buf    bssCOMRAM    00002A
setMotorPWM@PWMduty            cstackCOMRAM 00001D
setMotorPWM@m                  cstackCOMRAM 000016
stackhi                        (abs)        0002FF
stacklo                        (abs)        000083
start                          init         00003E
start_initialization           cinit        000D5A
stop@i                         cstackCOMRAM 000025
stop@initial_speed             cstackCOMRAM 000023
stop@mL                        cstackCOMRAM 00001F
stop@mR                        cstackCOMRAM 000021
ttemp5                         temp         00003A
ttemp6                         temp         00003D
ttemp7                         temp         000041
turnRight@i                    cstackCOMRAM 000026
turnRight@mL                   cstackCOMRAM 00001F
turnRight@mR                   cstackCOMRAM 000021
turnRight@max_power            cstackCOMRAM 000023
wtemp8                         temp         00003A


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 77 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   13[BANK0 ] int 
  i               4    8[BANK0 ] unsigned long 
  raw_data        2    2[BANK0 ] unsigned int 
  beacon_locat    1   12[BANK0 ] unsigned char 
  motorR          9   26[BANK0 ] struct DC_motor
  motorL          9   17[BANK0 ] struct DC_motor
  movementMicr    4    4[BANK0 ] unsigned long 
  moving_speed    2   15[BANK0 ] int 
  searching_sp    2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0      35       0       0
      Temps:          2       0       0       0
      Totals:         2      35       0       0
Total ram usage:       37 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_ClearLCD
		_LCD_String
		_check_RFID
		_classify_data
		_display_RFID
		_init_motor_struct
		_moveBackward
		_moveForward
		_setup
		_stop
		_turnRight
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _turnRight *****************
 Defined at:
		line 52 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   30[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   32[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  max_power       2   34[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2   37[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 40 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   30[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   32[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  initial_spee    2   34[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2   36[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 38 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_initPWM
		_init_LCD
		_init_RFID
		_init_sensor
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init_sensor *****************
 Defined at:
		line 14 in file "signal_processing.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _init_RFID *****************
 Defined at:
		line 13 in file "RFID.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _init_LCD *****************
 Defined at:
		line 56 in file "LCDIO.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDout
		_SendLCD
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _initPWM *****************
 Defined at:
		line 5 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  PWMperiod       2    7[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _moveForward *****************
 Defined at:
		line 69 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   30[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   32[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  max_power       2   34[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2   37[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _moveBackward *****************
 Defined at:
		line 83 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   30[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   32[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  max_power       2   34[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2   37[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init_motor_struct *****************
 Defined at:
		line 96 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   30[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   32[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 18 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  m               2   21[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), main@motorL(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2   28[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          5       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_stop
		_turnRight
		_moveForward
		_moveBackward
		_init_motor_struct
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    7[COMRAM] unsigned int 
  multiplicand    2    9[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   11[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    7[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   13[COMRAM] int 
  divisor         2   15[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   19[COMRAM] int 
  sign            1   18[COMRAM] unsigned char 
  counter         1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   13[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function _display_RFID *****************
 Defined at:
		line 109 in file "RFID.c"
 Parameters:    Size  Location     Type
  dataBuf         2   12[COMRAM] PTR volatile unsigned ch
		 -> RFIDbuf(12), 
 Auto vars:     Size  Location     Type
  i               2   14[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ClearLCD
		_SendLCD
		_SetLine
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ClearLCD *****************
 Defined at:
		line 131 in file "LCDIO.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_SendLCD
 This function is called by:
		_main
		_display_RFID
 This function uses a non-reentrant model


 *************** function _classify_data *****************
 Defined at:
		line 30 in file "signal_processing.c"
 Parameters:    Size  Location     Type
  raw_data        2    7[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _check_RFID *****************
 Defined at:
		line 72 in file "RFID.c"
 Parameters:    Size  Location     Type
  dataBuf         2   13[COMRAM] PTR volatile unsigned ch
		 -> RFIDbuf(12), 
 Auto vars:     Size  Location     Type
  i               2   35[COMRAM] int 
  hexBuf         12   17[COMRAM] unsigned char [12]
  checksum        1   34[COMRAM] unsigned char 
  byte5           1   33[COMRAM] unsigned char 
  byte4           1   32[COMRAM] unsigned char 
  byte3           1   31[COMRAM] unsigned char 
  byte2           1   30[COMRAM] unsigned char 
  byte1           1   29[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:        20       0       0       0
      Temps:          2       0       0       0
      Totals:        24       0       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_String
		_SetLine
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SetLine *****************
 Defined at:
		line 107 in file "LCDIO.c"
 Parameters:    Size  Location     Type
  line            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  line            1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_SendLCD
 This function is called by:
		_check_RFID
		_display_RFID
 This function uses a non-reentrant model


 *************** function _LCD_String *****************
 Defined at:
		line 119 in file "LCDIO.c"
 Parameters:    Size  Location     Type
  string          2   11[COMRAM] PTR unsigned char 
		 -> STR_3(16), STR_2(16), STR_1(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_SendLCD
 This function is called by:
		_main
		_check_RFID
 This function uses a non-reentrant model


 *************** function _SendLCD *****************
 Defined at:
		line 44 in file "LCDIO.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1    9[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCDout
 This function is called by:
		_init_LCD
		_SetLine
		_LCD_String
		_ClearLCD
		_display_RFID
 This function uses a non-reentrant model


 *************** function _LCDout *****************
 Defined at:
		line 31 in file "LCDIO.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_E_TOG
 This function is called by:
		_SendLCD
		_init_LCD
 This function uses a non-reentrant model


 *************** function _E_TOG *****************
 Defined at:
		line 23 in file "LCDIO.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_LCDout
 This function uses a non-reentrant model


 *************** function _InterruptHandlerHigh *****************
 Defined at:
		line 59 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  throwaway       1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_processRFID
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _processRFID *****************
 Defined at:
		line 34 in file "RFID.c"
 Parameters:    Size  Location     Type
  RFIDbuf         2    0[COMRAM] PTR volatile unsigned ch
		 -> RFIDbuf(12), 
  latestChar      1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_InterruptHandlerHigh
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
dc_motor.c
		_moveForward   		CODE           	0AB0	0000	117
		_stop          		CODE           	0B98	0000	79
		_moveBackward  		CODE           	0B24	0000	117
		_turnRight     		CODE           	09B6	0000	131
		_setMotorPWM   		CODE           	065C	0000	293
		_init_motor_struct		CODE           	0780	0000	235
		_initPWM       		CODE           	0D92	0000	27

dc_motor.c estimated size: 999

signal_processing.c
		_init_sensor   		CODE           	0DC6	0000	25
		_classify_data 		CODE           	0DDE	0000	25

signal_processing.c estimated size: 50

RFID.c
		_processRFID   		CODE           	0BE6	0000	77
		_display_RFID  		CODE           	0C32	0000	65
		_check_RFID    		CODE           	050C	0000	337
		_init_RFID     		CODE           	0D78	0000	27

RFID.c estimated size: 506

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	0932	0000	133

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c estimated size: 133

shared
		__initialization		CODE           	0D5A	0000	13

shared estimated size: 13

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c
		___wmul        		CODE           	0D34	0000	39

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c estimated size: 39

LCDIO.c
		_SetLine       		CODE           	0D06	0000	47
		_LCD_String    		CODE           	0C72	0000	55
		_SendLCD       		CODE           	0CA8	0000	49
		_E_TOG         		CODE           	0DF6	0000	15
		_init_LCD      		CODE           	086A	0000	201
		_ClearLCD      		CODE           	0DAC	0000	27
		_LCDout        		CODE           	0A38	0000	121

LCDIO.c estimated size: 515

main.c
		_main          		CODE           	0332	0000	475
		_InterruptHandlerHigh		CODE           	0008	0000	55
		_setup         		CODE           	0CD8	0000	47

main.c estimated size: 577

