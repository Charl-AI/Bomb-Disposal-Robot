Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\ECM_Final_Project.X.production.sym \
  --cmf=dist/default/production\ECM_Final_Project.X.production.cmf -z \
  -Q18F4331 -oC:\Users\charl\AppData\Local\Temp\s7d8.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/ECM_Final_Project.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0B4h-02FFh -pstack=STACK -ACODE=00h-01FFFh \
  -ACONST=00h-01FFFh -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo=018h,powerup,init -pramtop=0300h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\charl\AppData\Local\Temp\s7d8.o \
  dist/default/production\ECM_Final_Project.X.production.o 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\charl\AppData\Local\Temp\s7d8.o
                init                                 A6       A6        4        C       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\ECM_Final_Project.X.production.o
                intcodelo                            18       18       8E        C       0
                intcode                               8        8        6        4       0
                temp                                 50       50        1        1       1
                smallconst                          300      300       96      180       0
                text31                             100C     100C       4C      1CB       0
                intcode_body                       1148     1148       36      1CB       0
                text28                              CAC      CAC       84      1CB       0
                text27                             1206     1206       26      1CB       0
                text26                              63A      63A      124      1CB       0
                text25                              860      860       EA      1CB       0
                text24                             128E     128E        E      1CB       0
                text23                              F38      F38       78      1CB       0
                text22                             117E     117E       30      1CB       0
                text21                             1260     1260       1A      1CB       0
                text20                             1112     1112       36      1CB       0
                text19                             1058     1058       44      1CB       0
                text18                              EB6      EB6       82      1CB       0
                text17                              A12      A12       C0      1CB       0
                text16                              E34      E34       82      1CB       0
                text15                              FB0      FB0       5C      1CB       0
                text14                              DB2      DB2       82      1CB       0
                text13                              396      396      154      1CB       0
                text12                              D30      D30       82      1CB       0
                text11                              C24      C24       88      1CB       0
                text10                             1246     1246       1A      1CB       0
                text9                               94A      94A       C8      1CB       0
                text8                              122C     122C       1A      1CB       0
                text7                              127A     127A       14      1CB       0
                text6                              10DC     10DC       36      1CB       0
                text5                              11AE     11AE       2E      1CB       0
                text4                               4EA      4EA      150      1CB       0
                text3                              109C     109C       40      1CB       0
                text2                               B8C      B8C       98      1CB       0
                text1                               AD2      AD2       BA      1CB       0
                text0                               75E      75E      102      1CB       0
                cstackCOMRAM                          1        1       3F        1       1
                cstackBANK0                          9E       9E       16       60       1
                bssBANK0                             60       60       3E       60       1
                bssCOMRAM                            40       40       10        1       1
                cinit                              11DC     11DC       2A      1CB       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcodelo                            18       18       8E         0
                intcode                               8        8        6         0
                init                                 A6       A6        4         0
                reset_vec                             0        0        4         0
                text31                             100C     100C       4C         0
                intcode_body                       1148     1148       36         0
                text28                              CAC      CAC       84         0
                text27                             1206     1206       26         0
                text26                              63A      63A      124         0
                text25                              860      860       EA         0
                text24                             128E     128E        E         0
                text23                              F38      F38       78         0
                text22                             117E     117E       30         0
                text21                             1260     1260       1A         0
                text20                             1112     1112       36         0
                text19                             1058     1058       44         0
                text18                              EB6      EB6       82         0
                text17                              A12      A12       C0         0
                text16                              E34      E34       82         0
                text15                              FB0      FB0       5C         0
                text14                              DB2      DB2       82         0
                text13                              396      396      154         0
                text12                              D30      D30       82         0
                text11                              C24      C24       88         0
                text10                             1246     1246       1A         0
                text9                               94A      94A       C8         0
                text8                              122C     122C       1A         0
                text7                              127A     127A       14         0
                text6                              10DC     10DC       36         0
                text5                              11AE     11AE       2E         0
                text4                               4EA      4EA      150         0
                text3                              109C     109C       40         0
                text2                               B8C      B8C       98         0
                text1                               AD2      AD2       BA         0
                text0                               75E      75E      102         0
                cinit                              11DC     11DC       2A         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       96         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 50       50        1         1
                cstackCOMRAM                          1        1       3F         1
                bssCOMRAM                            40       40       10         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          9E       9E       16         1
                bssBANK0                             60       60       3E         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000050  000051         1       1  COMRAM  
                intcode                        000008  000006  00000E         4       0  CODE    
                intcodelo                      000018  000092  0000AA         C       0  CODE    
                bssBANK0                       000060  000054  0000B4        60       1  BANK0   
                smallconst                     000300  000096  000396       180       0  SMALLCON
                text13                         000396  000F06  00129C       1CB       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000B4-0000FF               4C
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           000051-00005F                F
                         0000B4-0002FF              24C
        CODE             000004-000007                4
                         00000E-000017                A
                         0000AA-0002FF              256
                         00129C-001FFF              D64
        COMRAM           000051-00005F                F
        CONST            000004-000007                4
                         00000E-000017                A
                         0000AA-0002FF              256
                         00129C-001FFF              D64
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      00129C-001FFF              D64
        RAM              0000B4-0002FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       00129C-001FFF              100
        STACK            0000B4-0002FF              24C

                                  Symbol Table

?___awdiv                      cstackCOMRAM 000015
?___wmul                       cstackCOMRAM 00000F
LCD_String@string              cstackCOMRAM 000013
LCDout@number                  cstackCOMRAM 000010
SendLCD@Byte                   cstackCOMRAM 000012
SendLCD@type                   cstackCOMRAM 000011
SetLine@line                   cstackCOMRAM 000013
_ANSEL0                        (abs)        000FB8
_ANSEL1                        (abs)        000FB9
_BAUDCONbits                   (abs)        000FAA
_CAP1BUFH                      (abs)        000F69
_CAP1BUFL                      (abs)        000F68
_CAP1CON                       (abs)        000F63
_ClearLCD                      text21       001260
_E_TOG                         text24       00128E
_INTCON2bits                   (abs)        000FF1
_INTCONbits                    (abs)        000FF2
_IPR1bits                      (abs)        000F9F
_InterruptHandlerHigh          intcode      000008
_InterruptHandlerLow           intcodelo    000018
_LATAbits                      (abs)        000F89
_LATB                          (abs)        000F8A
_LATCbits                      (abs)        000F8B
_LATDbits                      (abs)        000F8C
_LCD_String                    text20       001112
_LCDout                        text23       000F38
_OSCCON                        (abs)        000FD3
_OSCCONbits                    (abs)        000FD3
_PDC0H                         (abs)        000F78
_PDC0L                         (abs)        000F79
_PDC1H                         (abs)        000F76
_PDC1L                         (abs)        000F77
_PIE1bits                      (abs)        000F9D
_PIR1bits                      (abs)        000F9E
_PORTDbits                     (abs)        000F83
_PTCON0                        (abs)        000F7F
_PTCON1                        (abs)        000F7E
_PTPERH                        (abs)        000F7A
_PTPERL                        (abs)        000F7B
_PWMCON0                       (abs)        000F6F
_PWMCON1                       (abs)        000F6E
_RCONbits                      (abs)        000FD0
_RCREG                         (abs)        000FAE
_RCSTAbits                     (abs)        000FAB
_RFID_flag                     bssBANK0     00009D
_RFIDbuf                       bssCOMRAM    000044
_SPBRG                         (abs)        000FAF
_SPBRGH                        (abs)        000FB0
_SendLCD                       text22       00117E
_SetLine                       text5        0011AE
_T0CON                         (abs)        000FD5
_T5CON                         (abs)        000FB7
_TRISAbits                     (abs)        000F92
_TRISBbits                     (abs)        000F93
_TRISCbits                     (abs)        000F94
_TRISDbits                     (abs)        000F95
_TXSTAbits                     (abs)        000FAC
__CFG_LVP$OFF                  (abs)        000000
__CFG_MCLRE$OFF                (abs)        000000
__CFG_OSC$IRCIO                (abs)        000000
__HRAM                         (abs)        000000
__Habs1                        abs1         000000
__Hbank0                       bank0        000000
__Hbank1                       bank1        000000
__Hbank2                       bank2        000000
__Hbigbss                      bigbss       000000
__Hbigdata                     bigdata      000000
__Hbigram                      bigram       000000
__Hbss                         bss          000000
__HbssBANK0                    bssBANK0     000000
__HbssCOMRAM                   bssCOMRAM    000000
__Hcinit                       cinit        000000
__Hclrtext                     clrtext      000000
__Hcomram                      comram       000000
__Hconfig                      config       30000E
__Hconst                       const        000000
__HcstackBANK0                 cstackBANK0  000000
__HcstackCOMRAM                cstackCOMRAM 000000
__Hdata                        data         000000
__Heeprom_data                 eeprom_data  000000
__Hfarbss                      farbss       000000
__Hfardata                     fardata      000000
__Hibigdata                    ibigdata     000000
__Hidata                       idata        000000
__Hidloc                       idloc        200008
__Hifardata                    ifardata     000000
__Hinit                        init         0000AA
__Hintcode                     intcode      00000E
__Hintcode_body                intcode_body 000000
__Hintcodelo                   intcodelo    0000A6
__Hintentry                    intentry     000000
__Hintret                      intret       000000
__Hintsave_regs                intsave_regs 000000
__Hirdata                      irdata       000000
__Hmediumconst                 mediumconst  000000
__HnvFARRAM                    nvFARRAM     000000
__Hnvbit                       nvbit        000000
__Hnvrram                      nvrram       000000
__Hparam                       rparam       000000
__Hpowerup                     powerup      0000A6
__Hram                         ram          000000
__Hramtop                      ramtop       000300
__Hrbit                        rbit         000000
__Hrbss                        rbss         000000
__Hrdata                       rdata        000000
__Hreset_vec                   reset_vec    000004
__Hrparam                      rparam       000000
__Hsfr                         sfr          000000
__Hsmallconst                  smallconst   000396
__Hspace_0                     (abs)        30000E
__Hspace_1                     (abs)        0000B4
__Hspace_2                     (abs)        000000
__Hstack                       stack        000000
__Hstruct                      struct       000000
__Htemp                        temp         000051
__Htext                        text         000000
__Htext0                       text0        000000
__Htext1                       text1        000000
__Htext10                      text10       000000
__Htext11                      text11       000000
__Htext12                      text12       000000
__Htext13                      text13       000000
__Htext14                      text14       000000
__Htext15                      text15       000000
__Htext16                      text16       000000
__Htext17                      text17       000000
__Htext18                      text18       000000
__Htext19                      text19       000000
__Htext2                       text2        000000
__Htext20                      text20       000000
__Htext21                      text21       000000
__Htext22                      text22       000000
__Htext23                      text23       000000
__Htext24                      text24       000000
__Htext25                      text25       000000
__Htext26                      text26       000000
__Htext27                      text27       000000
__Htext28                      text28       000000
__Htext3                       text3        000000
__Htext31                      text31       000000
__Htext4                       text4        000000
__Htext5                       text5        000000
__Htext6                       text6        000000
__Htext7                       text7        000000
__Htext8                       text8        000000
__Htext9                       text9        000000
__LRAM                         (abs)        000001
__Labs1                        abs1         000000
__Lbank0                       bank0        000000
__Lbank1                       bank1        000000
__Lbank2                       bank2        000000
__Lbigbss                      bigbss       000000
__Lbigdata                     bigdata      000000
__Lbigram                      bigram       000000
__Lbss                         bss          000000
__LbssBANK0                    bssBANK0     000000
__LbssCOMRAM                   bssCOMRAM    000000
__Lcinit                       cinit        000000
__Lclrtext                     clrtext      000000
__Lcomram                      comram       000000
__Lconfig                      config       300000
__Lconst                       const        000000
__LcstackBANK0                 cstackBANK0  000000
__LcstackCOMRAM                cstackCOMRAM 000000
__Ldata                        data         000000
__Leeprom_data                 eeprom_data  000000
__Lfarbss                      farbss       000000
__Lfardata                     fardata      000000
__Libigdata                    ibigdata     000000
__Lidata                       idata        000000
__Lidloc                       idloc        200000
__Lifardata                    ifardata     000000
__Linit                        init         0000A6
__Lintcode                     intcode      000008
__Lintcode_body                intcode_body 000000
__Lintcodelo                   intcodelo    000018
__Lintentry                    intentry     000000
__Lintret                      intret       000000
__Lintsave_regs                intsave_regs 000000
__Lirdata                      irdata       000000
__Lmediumconst                 mediumconst  000000
__LnvFARRAM                    nvFARRAM     000000
__Lnvbit                       nvbit        000000
__Lnvrram                      nvrram       000000
__Lparam                       rparam       000000
__Lpowerup                     powerup      0000A6
__Lram                         ram          000000
__Lramtop                      ramtop       000300
__Lrbit                        rbit         000000
__Lrbss                        rbss         000000
__Lrdata                       rdata        000000
__Lreset_vec                   reset_vec    000000
__Lrparam                      rparam       000000
__Lsfr                         sfr          000000
__Lsmallconst                  smallconst   000300
__Lspace_0                     (abs)        000000
__Lspace_1                     (abs)        000000
__Lspace_2                     (abs)        000000
__Lstack                       stack        000000
__Lstruct                      struct       000000
__Ltemp                        temp         000050
__Ltext                        text         000000
__Ltext0                       text0        000000
__Ltext1                       text1        000000
__Ltext10                      text10       000000
__Ltext11                      text11       000000
__Ltext12                      text12       000000
__Ltext13                      text13       000000
__Ltext14                      text14       000000
__Ltext15                      text15       000000
__Ltext16                      text16       000000
__Ltext17                      text17       000000
__Ltext18                      text18       000000
__Ltext19                      text19       000000
__Ltext2                       text2        000000
__Ltext20                      text20       000000
__Ltext21                      text21       000000
__Ltext22                      text22       000000
__Ltext23                      text23       000000
__Ltext24                      text24       000000
__Ltext25                      text25       000000
__Ltext26                      text26       000000
__Ltext27                      text27       000000
__Ltext28                      text28       000000
__Ltext3                       text3        000000
__Ltext31                      text31       000000
__Ltext4                       text4        000000
__Ltext5                       text5        000000
__Ltext6                       text6        000000
__Ltext7                       text7        000000
__Ltext8                       text8        000000
__Ltext9                       text9        000000
__S0                           (abs)        30000E
__S1                           (abs)        0000B4
__S2                           (abs)        000000
___awdiv                       text28       000CAC
___awdiv@counter               cstackCOMRAM 000019
___awdiv@dividend              cstackCOMRAM 000015
___awdiv@divisor               cstackCOMRAM 000017
___awdiv@quotient              cstackCOMRAM 00001B
___awdiv@sign                  cstackCOMRAM 00001A
___inthi_sp                    stack        000000
___intlo_sp                    stack        000000
___param_bank                  (abs)        000000
___rparam_used                 (abs)        000001
___sp                          stack        000000
___wmul                        text27       001206
___wmul@multiplicand           cstackCOMRAM 000011
___wmul@multiplier             cstackCOMRAM 00000F
___wmul@product                cstackCOMRAM 000013
__accesstop                    (abs)        000060
__activetblptr                 (abs)        000001
__end_of_ClearLCD              text21       00127A
__end_of_E_TOG                 text24       00129C
__end_of_InterruptHandlerHigh  intcode_body 00117E
__end_of_InterruptHandlerLow   intcodelo    0000A6
__end_of_LCD_String            text20       001148
__end_of_LCDout                text23       000FB0
__end_of_SendLCD               text22       0011AE
__end_of_SetLine               text5        0011DC
__end_of___awdiv               text28       000D30
__end_of___wmul                text27       00122C
__end_of__initialization       cinit        0011F4
__end_of_check_RFID            text4        00063A
__end_of_classify_data         text19       00109C
__end_of_display_RFID          text3        0010DC
__end_of_initPWM               text10       001260
__end_of_init_LCD              text9        000A12
__end_of_init_RFID             text8        001246
__end_of_init_motor_struct     text25       00094A
__end_of_init_sensor           text7        00128E
__end_of_main                  text0        000860
__end_of_moveBackward          text16       000EB6
__end_of_moveForward           text18       000F38
__end_of_moveToBeacon          text17       000AD2
__end_of_processRFID           text31       001058
__end_of_returnHome            text13       0004EA
__end_of_scanForBeacon         text11       000CAC
__end_of_setMotorPWM           text26       00075E
__end_of_setup                 text6        001112
__end_of_stop                  text15       00100C
__end_of_stopAndDisplay        text2        000C24
__end_of_turnLeft              text12       000DB2
__end_of_turnRight             text14       000E34
__end_of_waitForInput          text1        000B8C
__initialization               cinit        0011DC
__mediumconst                  mediumconst  000000
__pbssBANK0                    bssBANK0     000060
__pbssCOMRAM                   bssCOMRAM    000040
__pcinit                       cinit        0011DC
__pcstackBANK0                 cstackBANK0  00009E
__pcstackCOMRAM                cstackCOMRAM 000001
__pintcode                     intcode      000008
__pintcode_body                intcode_body 001148
__pintcodelo                   intcodelo    000018
__psmallconst                  smallconst   000300
__ptext0                       text0        00075E
__ptext1                       text1        000AD2
__ptext10                      text10       001246
__ptext11                      text11       000C24
__ptext12                      text12       000D30
__ptext13                      text13       000396
__ptext14                      text14       000DB2
__ptext15                      text15       000FB0
__ptext16                      text16       000E34
__ptext17                      text17       000A12
__ptext18                      text18       000EB6
__ptext19                      text19       001058
__ptext2                       text2        000B8C
__ptext20                      text20       001112
__ptext21                      text21       001260
__ptext22                      text22       00117E
__ptext23                      text23       000F38
__ptext24                      text24       00128E
__ptext25                      text25       000860
__ptext26                      text26       00063A
__ptext27                      text27       001206
__ptext28                      text28       000CAC
__ptext3                       text3        00109C
__ptext31                      text31       00100C
__ptext4                       text4        0004EA
__ptext5                       text5        0011AE
__ptext6                       text6        0010DC
__ptext7                       text7        00127A
__ptext8                       text8        00122C
__ptext9                       text9        00094A
__ramtop                       ramtop       000300
__size_of_ClearLCD             (abs)        000000
__size_of_E_TOG                (abs)        000000
__size_of_InterruptHandlerHigh (abs)        000000
__size_of_InterruptHandlerLow  (abs)        000000
__size_of_LCD_String           (abs)        000000
__size_of_LCDout               (abs)        000000
__size_of_SendLCD              (abs)        000000
__size_of_SetLine              (abs)        000000
__size_of___awdiv              (abs)        000000
__size_of___wmul               (abs)        000000
__size_of_check_RFID           (abs)        000000
__size_of_classify_data        (abs)        000000
__size_of_display_RFID         (abs)        000000
__size_of_initPWM              (abs)        000000
__size_of_init_LCD             (abs)        000000
__size_of_init_RFID            (abs)        000000
__size_of_init_motor_struct    (abs)        000000
__size_of_init_sensor          (abs)        000000
__size_of_main                 (abs)        000000
__size_of_moveBackward         (abs)        000000
__size_of_moveForward          (abs)        000000
__size_of_moveToBeacon         (abs)        000000
__size_of_processRFID          (abs)        000000
__size_of_returnHome           (abs)        000000
__size_of_scanForBeacon        (abs)        000000
__size_of_setMotorPWM          (abs)        000000
__size_of_setup                (abs)        000000
__size_of_stop                 (abs)        000000
__size_of_stopAndDisplay       (abs)        000000
__size_of_turnLeft             (abs)        000000
__size_of_turnRight            (abs)        000000
__size_of_waitForInput         (abs)        000000
__smallconst                   smallconst   000300
_check_RFID                    text4        0004EA
_classify_data                 text19       001058
_display_RFID                  text3        00109C
_initPWM                       text10       001246
_init_LCD                      text9        00094A
_init_RFID                     text8        00122C
_init_motor_struct             text25       000860
_init_sensor                   text7        00127A
_main                          text0        00075E
_moveBackward                  text16       000E34
_moveForward                   text18       000EB6
_moveToBeacon                  text17       000A12
_processRFID                   text31       00100C
_returnHome                    text13       000396
_robot_mode                    bssCOMRAM    000043
_scanForBeacon                 text11       000C24
_setMotorPWM                   text26       00063A
_setup                         text6        0010DC
_stop                          text15       000FB0
_stopAndDisplay                text2        000B8C
_travel_moves                  bssBANK0     000060
_turnLeft                      text12       000D30
_turnRight                     text14       000DB2
_waitForInput                  text1        000AD2
btemp                          temp         000050
check_RFID@byte1               cstackCOMRAM 000025
check_RFID@byte2               cstackCOMRAM 000026
check_RFID@byte3               cstackCOMRAM 000027
check_RFID@byte4               cstackCOMRAM 000028
check_RFID@byte5               cstackCOMRAM 000029
check_RFID@checksum            cstackCOMRAM 00002A
check_RFID@dataBuf             cstackCOMRAM 000015
check_RFID@hexBuf              cstackCOMRAM 000019
check_RFID@i                   cstackCOMRAM 00002B
classify_data@filtered         cstackCOMRAM 000013
classify_data@raw_data         cstackCOMRAM 00000F
classify_data@smoothed         bssCOMRAM    000040
display_RFID@dataBuf           cstackCOMRAM 000014
display_RFID@i                 cstackCOMRAM 000016
end_of_initialization          cinit        0011F4
initPWM@PWMperiod              cstackCOMRAM 00000F
init_motor_struct@mL           cstackCOMRAM 000026
init_motor_struct@mR           cstackCOMRAM 000028
int$flags                      temp         000050
int_func                       intcode_body 001148
intlevel0                      text         000000
intlevel1                      text         000000
intlevel2                      text         000000
intlevel3                      text         000000
main@motorL                    cstackBANK0  0000A2
main@motorR                    cstackBANK0  0000AB
main@moving_speed              cstackBANK0  0000A0
main@searching_speed           cstackBANK0  00009E
moveBackward@i                 cstackCOMRAM 00002D
moveBackward@mL                cstackCOMRAM 000026
moveBackward@mR                cstackCOMRAM 000028
moveBackward@max_power         cstackCOMRAM 00002A
moveForward@i                  cstackCOMRAM 00002D
moveForward@mL                 cstackCOMRAM 000026
moveForward@mR                 cstackCOMRAM 000028
moveForward@max_power          cstackCOMRAM 00002A
moveToBeacon@beacon_location   cstackCOMRAM 00003D
moveToBeacon@count             cstackCOMRAM 00003E
moveToBeacon@exit_flag         cstackCOMRAM 000037
moveToBeacon@mL                cstackCOMRAM 00002F
moveToBeacon@mR                cstackCOMRAM 000031
moveToBeacon@move              cstackCOMRAM 000035
moveToBeacon@raw_data          cstackCOMRAM 00003B
moveToBeacon@speed             cstackCOMRAM 000033
processRFID@RFIDbuf            cstackCOMRAM 000001
processRFID@i                  cstackCOMRAM 000004
processRFID@latestChar         cstackCOMRAM 000003
processRFID@position_in_buf    bssCOMRAM    000042
returnHome@mL                  cstackCOMRAM 00002F
returnHome@mR                  cstackCOMRAM 000031
returnHome@move                cstackCOMRAM 000037
returnHome@move_speed          cstackCOMRAM 000033
returnHome@search_speed        cstackCOMRAM 000035
scanForBeacon@beacon_location  cstackCOMRAM 00003B
scanForBeacon@mL               cstackCOMRAM 00002F
scanForBeacon@mR               cstackCOMRAM 000031
scanForBeacon@move             cstackCOMRAM 000035
scanForBeacon@raw_data         cstackCOMRAM 000039
scanForBeacon@speed            cstackCOMRAM 000033
setMotorPWM@PWMduty            cstackCOMRAM 000024
setMotorPWM@m                  cstackCOMRAM 00001D
stackhi                        (abs)        0002FF
stacklo                        (abs)        0000B4
start                          init         0000A6
start_initialization           cinit        0011DC
stop@i                         cstackCOMRAM 00002D
stop@initial_speed             cstackCOMRAM 00002A
stop@mL                        cstackCOMRAM 000026
stop@mR                        cstackCOMRAM 000028
stopAndDisplay@RFID_buffer     cstackCOMRAM 000035
stopAndDisplay@i               cstackCOMRAM 000039
stopAndDisplay@mL              cstackCOMRAM 00002F
stopAndDisplay@mR              cstackCOMRAM 000031
stopAndDisplay@speed           cstackCOMRAM 000033
ttemp5                         temp         000051
ttemp6                         temp         000054
ttemp7                         temp         000058
turnLeft@i                     cstackCOMRAM 00002D
turnLeft@mL                    cstackCOMRAM 000026
turnLeft@mR                    cstackCOMRAM 000028
turnLeft@max_power             cstackCOMRAM 00002A
turnRight@i                    cstackCOMRAM 00002D
turnRight@mL                   cstackCOMRAM 000026
turnRight@mR                   cstackCOMRAM 000028
turnRight@max_power            cstackCOMRAM 00002A
waitForInput@i                 cstackCOMRAM 00001A
waitForInput@i_1391            cstackCOMRAM 00001C
waitForInput@raw_data          cstackCOMRAM 000018
wtemp8                         temp         000051


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 117 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  motorR          9   13[BANK0 ] struct DC_motor
  motorL          9    4[BANK0 ] struct DC_motor
  moving_speed    2    2[BANK0 ] int 
  searching_sp    2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0      22       0       0
      Temps:          0       0       0       0
      Totals:         0      22       0       0
Total ram usage:       22 bytes
 Hardware stack levels required when called:    9
 This function calls:
		_LCD_String
		_init_motor_struct
		_moveToBeacon
		_returnHome
		_scanForBeacon
		_setup
		_stopAndDisplay
		_waitForInput
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _waitForInput *****************
 Defined at:
		line 149 in file "subroutines.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  raw_data        2   23[COMRAM] unsigned int 
  throwaway       1    0        unsigned char 
  i               2   27[COMRAM] int 
  i               2   25[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         7       0       0       0
      Temps:          2       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ClearLCD
		_LCD_String
		_SetLine
		_classify_data
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stopAndDisplay *****************
 Defined at:
		line 117 in file "subroutines.c"
 Parameters:    Size  Location     Type
  mL              2   46[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   48[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  speed           2   50[COMRAM] int 
  RFID_buffer     2   52[COMRAM] PTR volatile unsigned ch
		 -> RFIDbuf(12), 
 Auto vars:     Size  Location     Type
  i               2   56[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         8       0       0       0
      Locals:         2       0       0       0
      Temps:          2       0       0       0
      Totals:        12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ClearLCD
		_LCD_String
		_check_RFID
		_display_RFID
		_stop
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _display_RFID *****************
 Defined at:
		line 107 in file "RFID.c"
 Parameters:    Size  Location     Type
  dataBuf         2   19[COMRAM] PTR volatile unsigned ch
		 -> RFIDbuf(12), 
 Auto vars:     Size  Location     Type
  i               2   21[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ClearLCD
		_SendLCD
		_SetLine
 This function is called by:
		_stopAndDisplay
 This function uses a non-reentrant model


 *************** function _check_RFID *****************
 Defined at:
		line 70 in file "RFID.c"
 Parameters:    Size  Location     Type
  dataBuf         2   20[COMRAM] PTR volatile unsigned ch
		 -> RFIDbuf(12), 
 Auto vars:     Size  Location     Type
  i               2   42[COMRAM] int 
  hexBuf         12   24[COMRAM] unsigned char [12]
  checksum        1   41[COMRAM] unsigned char 
  byte5           1   40[COMRAM] unsigned char 
  byte4           1   39[COMRAM] unsigned char 
  byte3           1   38[COMRAM] unsigned char 
  byte2           1   37[COMRAM] unsigned char 
  byte1           1   36[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:        20       0       0       0
      Temps:          2       0       0       0
      Totals:        24       0       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_LCD_String
		_SetLine
 This function is called by:
		_stopAndDisplay
 This function uses a non-reentrant model


 *************** function _SetLine *****************
 Defined at:
		line 107 in file "LCDIO.c"
 Parameters:    Size  Location     Type
  line            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  line            1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_SendLCD
 This function is called by:
		_check_RFID
		_display_RFID
		_waitForInput
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 46 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_initPWM
		_init_LCD
		_init_RFID
		_init_sensor
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init_sensor *****************
 Defined at:
		line 17 in file "signal_processing.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _init_RFID *****************
 Defined at:
		line 13 in file "RFID.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _init_LCD *****************
 Defined at:
		line 56 in file "LCDIO.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCDout
		_SendLCD
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _initPWM *****************
 Defined at:
		line 5 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  PWMperiod       2   14[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _scanForBeacon *****************
 Defined at:
		line 23 in file "subroutines.c"
 Parameters:    Size  Location     Type
  mL              2   46[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   48[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  speed           2   50[COMRAM] int 
  move            2   52[COMRAM] PTR struct Movements
		 -> travel_moves(61), 
 Auto vars:     Size  Location     Type
  raw_data        2   56[COMRAM] unsigned int 
  beacon_locat    1   58[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         8       0       0       0
      Locals:         3       0       0       0
      Temps:          2       0       0       0
      Totals:        13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ClearLCD
		_LCD_String
		_classify_data
		_turnLeft
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnLeft *****************
 Defined at:
		line 53 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   37[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   39[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  max_power       2   41[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2   44[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_setMotorPWM
 This function is called by:
		_scanForBeacon
 This function uses a non-reentrant model


 *************** function _returnHome *****************
 Defined at:
		line 92 in file "subroutines.c"
 Parameters:    Size  Location     Type
  mL              2   46[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   48[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  move_speed      2   50[COMRAM] int 
  search_speed    2   52[COMRAM] int 
  move            2   54[COMRAM] PTR struct Movements
		 -> travel_moves(61), 
 Auto vars:     Size  Location     Type
  i               2    0        int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:        10       0       0       0
      Locals:         2       0       0       0
      Temps:          5       0       0       0
      Totals:        17       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ClearLCD
		_LCD_String
		_moveBackward
		_stop
		_turnRight
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnRight *****************
 Defined at:
		line 69 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   37[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   39[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  max_power       2   41[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2   44[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_setMotorPWM
 This function is called by:
		_returnHome
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 40 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   37[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   39[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  initial_spee    2   41[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2   44[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_setMotorPWM
 This function is called by:
		_returnHome
		_stopAndDisplay
 This function uses a non-reentrant model


 *************** function _moveBackward *****************
 Defined at:
		line 101 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   37[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   39[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  max_power       2   41[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2   44[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_setMotorPWM
 This function is called by:
		_returnHome
 This function uses a non-reentrant model


 *************** function _moveToBeacon *****************
 Defined at:
		line 51 in file "subroutines.c"
 Parameters:    Size  Location     Type
  mL              2   46[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   48[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  speed           2   50[COMRAM] int 
  move            2   52[COMRAM] PTR struct Movements
		 -> travel_moves(61), 
  exit_flag       2   54[COMRAM] PTR volatile unsigned ch
		 -> NULL(0), RFID_flag(1), 
 Auto vars:     Size  Location     Type
  raw_data        2   58[COMRAM] unsigned int 
  beacon_locat    1   60[COMRAM] unsigned char 
  count           2   61[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:        10       0       0       0
      Locals:         5       0       0       0
      Temps:          2       0       0       0
      Totals:        17       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ClearLCD
		_LCD_String
		_classify_data
		_moveForward
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _moveForward *****************
 Defined at:
		line 86 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   37[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   39[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  max_power       2   41[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2   44[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_setMotorPWM
 This function is called by:
		_moveToBeacon
 This function uses a non-reentrant model


 *************** function _classify_data *****************
 Defined at:
		line 33 in file "signal_processing.c"
 Parameters:    Size  Location     Type
  raw_data        2   14[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  filtered        2   18[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_scanForBeacon
		_moveToBeacon
		_waitForInput
 This function uses a non-reentrant model


 *************** function _LCD_String *****************
 Defined at:
		line 119 in file "LCDIO.c"
 Parameters:    Size  Location     Type
  string          2   18[COMRAM] PTR unsigned char 
		 -> STR_10(16), STR_9(16), STR_8(13), STR_7(16), 
		 -> STR_6(15), STR_5(15), STR_4(10), STR_3(16), 
		 -> STR_2(16), STR_1(15), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_SendLCD
 This function is called by:
		_main
		_check_RFID
		_scanForBeacon
		_moveToBeacon
		_returnHome
		_stopAndDisplay
		_waitForInput
 This function uses a non-reentrant model


 *************** function _ClearLCD *****************
 Defined at:
		line 131 in file "LCDIO.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_SendLCD
 This function is called by:
		_display_RFID
		_scanForBeacon
		_moveToBeacon
		_returnHome
		_stopAndDisplay
		_waitForInput
 This function uses a non-reentrant model


 *************** function _SendLCD *****************
 Defined at:
		line 44 in file "LCDIO.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDout
 This function is called by:
		_init_LCD
		_SetLine
		_LCD_String
		_ClearLCD
		_display_RFID
 This function uses a non-reentrant model


 *************** function _LCDout *****************
 Defined at:
		line 31 in file "LCDIO.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_E_TOG
 This function is called by:
		_SendLCD
		_init_LCD
 This function uses a non-reentrant model


 *************** function _E_TOG *****************
 Defined at:
		line 23 in file "LCDIO.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_LCDout
 This function uses a non-reentrant model


 *************** function _init_motor_struct *****************
 Defined at:
		line 115 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   37[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   39[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 18 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  m               2   28[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), main@motorL(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2   35[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          5       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_stop
		_turnLeft
		_turnRight
		_moveForward
		_moveBackward
		_init_motor_struct
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   14[COMRAM] unsigned int 
  multiplicand    2   16[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   18[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   14[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   20[COMRAM] int 
  divisor         2   22[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   26[COMRAM] int 
  sign            1   25[COMRAM] unsigned char 
  counter         1   24[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   20[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function _InterruptHandlerLow *****************
 Defined at:
		line 94 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          7       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _InterruptHandlerHigh *****************
 Defined at:
		line 76 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  throwaway       1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_processRFID
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _processRFID *****************
 Defined at:
		line 34 in file "RFID.c"
 Parameters:    Size  Location     Type
  RFIDbuf         2    0[COMRAM] PTR volatile unsigned ch
		 -> RFIDbuf(12), 
  latestChar      1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_InterruptHandlerHigh
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
dc_motor.c
		_moveForward   		CODE           	0EB6	0000	131
		_turnLeft      		CODE           	0D30	0000	131
		_stop          		CODE           	0FB0	0000	93
		_moveBackward  		CODE           	0E34	0000	131
		_turnRight     		CODE           	0DB2	0000	131
		_setMotorPWM   		CODE           	063A	0000	293
		_init_motor_struct		CODE           	0860	0000	235
		_initPWM       		CODE           	1246	0000	27

dc_motor.c estimated size: 1172

signal_processing.c
		_init_sensor   		CODE           	127A	0000	21
		_classify_data 		CODE           	1058	0000	69

signal_processing.c estimated size: 90

RFID.c
		_processRFID   		CODE           	100C	0000	77
		_display_RFID  		CODE           	109C	0000	65
		_check_RFID    		CODE           	04EA	0000	337
		_init_RFID     		CODE           	122C	0000	27

RFID.c estimated size: 506

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	0CAC	0000	133

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c estimated size: 133

subroutines.c
		_stopAndDisplay		CODE           	0B8C	0000	153
		_moveToBeacon  		CODE           	0A12	0000	193
		_returnHome    		CODE           	0396	0000	341
		_waitForInput  		CODE           	0AD2	0000	187
		_scanForBeacon 		CODE           	0C24	0000	137

subroutines.c estimated size: 1011

shared
		__initialization		CODE           	11DC	0000	25

shared estimated size: 25

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c
		___wmul        		CODE           	1206	0000	39

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c estimated size: 39

LCDIO.c
		_SetLine       		CODE           	11AE	0000	47
		_LCD_String    		CODE           	1112	0000	55
		_SendLCD       		CODE           	117E	0000	49
		_E_TOG         		CODE           	128E	0000	15
		_init_LCD      		CODE           	094A	0000	201
		_ClearLCD      		CODE           	1260	0000	27
		_LCDout        		CODE           	0F38	0000	121

LCDIO.c estimated size: 515

main.c
		_main          		CODE           	075E	0000	259
		_InterruptHandlerLow		CODE           	0018	0000	143
		_InterruptHandlerHigh		CODE           	0008	0000	61
		_setup         		CODE           	10DC	0000	55

main.c estimated size: 518

