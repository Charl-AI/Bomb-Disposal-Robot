

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Feb 21 15:05:00 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 2.05
    33                           ; Generated 20/12/2018 GMT
    34                           ; 
    35                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4331 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _PIE1bits	set	3997
    67  0000                     _RCSTAbits	set	4011
    68  0000                     _TXSTAbits	set	4012
    69  0000                     _BAUDCONbits	set	4010
    70  0000                     _SPBRGH	set	4016
    71  0000                     _SPBRG	set	4015
    72  0000                     _TRISAbits	set	3986
    73  0000                     _TRISDbits	set	3989
    74  0000                     _TRISCbits	set	3988
    75  0000                     _LATAbits	set	3977
    76  0000                     _LATDbits	set	3980
    77  0000                     _LATCbits	set	3979
    78  0000                     _LATB	set	3978
    79  0000                     _PTPERH	set	3962
    80  0000                     _PTPERL	set	3963
    81  0000                     _PWMCON1	set	3950
    82  0000                     _PWMCON0	set	3951
    83  0000                     _PTCON1	set	3966
    84  0000                     _PTCON0	set	3967
    85  0000                     _RCREG	set	4014
    86  0000                     _PIR1bits	set	3998
    87  0000                     _RCONbits	set	4048
    88  0000                     _INTCONbits	set	4082
    89  0000                     _OSCCONbits	set	4051
    90  0000                     _OSCCON	set	4051
    91                           
    92                           	psect	smallconst
    93  000300                     __psmallconst:
    94                           	opt callstack 0
    95  000300  00                 	db	0
    96  000301                     STR_2:
    97  000301  43                 	db	67	;'C'
    98  000302  48                 	db	72	;'H'
    99  000303  45                 	db	69	;'E'
   100  000304  43                 	db	67	;'C'
   101  000305  4B                 	db	75	;'K'
   102  000306  53                 	db	83	;'S'
   103  000307  55                 	db	85	;'U'
   104  000308  4D                 	db	77	;'M'
   105  000309  20                 	db	32
   106  00030A  46                 	db	70	;'F'
   107  00030B  41                 	db	65	;'A'
   108  00030C  49                 	db	73	;'I'
   109  00030D  4C                 	db	76	;'L'
   110  00030E  45                 	db	69	;'E'
   111  00030F  44                 	db	68	;'D'
   112  000310  00                 	db	0
   113  000311                     STR_1:
   114  000311  43                 	db	67	;'C'
   115  000312  48                 	db	72	;'H'
   116  000313  45                 	db	69	;'E'
   117  000314  43                 	db	67	;'C'
   118  000315  4B                 	db	75	;'K'
   119  000316  53                 	db	83	;'S'
   120  000317  55                 	db	85	;'U'
   121  000318  4D                 	db	77	;'M'
   122  000319  20                 	db	32
   123  00031A  50                 	db	80	;'P'
   124  00031B  41                 	db	65	;'A'
   125  00031C  53                 	db	83	;'S'
   126  00031D  53                 	db	83	;'S'
   127  00031E  45                 	db	69	;'E'
   128  00031F  44                 	db	68	;'D'
   129  000320  00                 	db	0
   130                           
   131                           ; #config settings
   132  000321  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           	psect	cinit
   135  000804                     __pcinit:
   136                           	opt callstack 0
   137  000804                     start_initialization:
   138                           	opt callstack 0
   139  000804                     __initialization:
   140                           	opt callstack 0
   141                           
   142                           ; Clear objects allocated to COMRAM (14 bytes)
   143  000804  EE00  F029         	lfsr	0,__pbssCOMRAM
   144  000808  0E0E               	movlw	14
   145  00080A                     clear_0:
   146  00080A  6AEE               	clrf	postinc0,c
   147  00080C  06E8               	decf	wreg,f,c
   148  00080E  E1FD               	bnz	clear_0
   149  000810                     end_of_initialization:
   150                           	opt callstack 0
   151  000810                     __end_of__initialization:
   152                           	opt callstack 0
   153  000810  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   154  000812  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   155  000814  0E00               	movlw	low (__Lsmallconst shr (0+16))
   156  000816  6EF8               	movwf	tblptru,c
   157  000818  0E03               	movlw	high __Lsmallconst
   158  00081A  6EF7               	movwf	tblptrh,c
   159  00081C  0100               	movlb	0
   160  00081E  EF11  F004         	goto	_main	;jump to C main() function
   161                           
   162                           	psect	bssCOMRAM
   163  000029                     __pbssCOMRAM:
   164                           	opt callstack 0
   165  000029                     processRFID@position_in_buf:
   166                           	opt callstack 0
   167  000029                     	ds	1
   168  00002A                     _robot_mode:
   169                           	opt callstack 0
   170  00002A                     	ds	1
   171  00002B                     _RFIDbuf:
   172                           	opt callstack 0
   173  00002B                     	ds	12
   174                           
   175                           	psect	cstackBANK0
   176  000060                     __pcstackBANK0:
   177                           	opt callstack 0
   178  000060                     ??_LCDout:
   179                           
   180                           ; 1 bytes @ 0x0
   181  000060                     	ds	1
   182  000061                     LCDout@number:
   183                           	opt callstack 0
   184                           
   185                           ; 1 bytes @ 0x1
   186  000061                     	ds	1
   187  000062                     SendLCD@type:
   188                           	opt callstack 0
   189                           
   190                           ; 1 bytes @ 0x2
   191  000062                     	ds	1
   192  000063                     SendLCD@Byte:
   193                           	opt callstack 0
   194                           
   195                           ; 1 bytes @ 0x3
   196  000063                     	ds	1
   197  000064                     ??_LCD_Init:
   198                           
   199                           ; 1 bytes @ 0x4
   200  000064                     	ds	1
   201                           
   202                           	psect	cstackCOMRAM
   203  000001                     __pcstackCOMRAM:
   204                           	opt callstack 0
   205  000001                     ??i2_LCDout:
   206                           
   207                           ; 1 bytes @ 0x0
   208  000001                     	ds	1
   209  000002                     i2LCDout@number:
   210                           	opt callstack 0
   211                           
   212                           ; 1 bytes @ 0x1
   213  000002                     	ds	1
   214  000003                     i2SendLCD@type:
   215                           	opt callstack 0
   216                           
   217                           ; 1 bytes @ 0x2
   218  000003                     	ds	1
   219  000004                     i2SendLCD@Byte:
   220                           	opt callstack 0
   221                           
   222                           ; 1 bytes @ 0x3
   223  000004                     	ds	1
   224  000005                     ??_ClearLCD:
   225  000005                     SetLine@line:
   226                           	opt callstack 0
   227  000005                     LCD_String@string:
   228                           	opt callstack 0
   229                           
   230                           ; 2 bytes @ 0x4
   231  000005                     	ds	1
   232  000006                     processRFID@RFIDbuf:
   233                           	opt callstack 0
   234                           
   235                           ; 2 bytes @ 0x5
   236  000006                     	ds	1
   237  000007                     check_RFID@dataBuf:
   238                           	opt callstack 0
   239                           
   240                           ; 2 bytes @ 0x6
   241  000007                     	ds	1
   242  000008                     processRFID@latestChar:
   243                           	opt callstack 0
   244                           
   245                           ; 1 bytes @ 0x7
   246  000008                     	ds	1
   247  000009                     ??_check_RFID:
   248  000009                     processRFID@i:
   249                           	opt callstack 0
   250                           
   251                           ; 2 bytes @ 0x8
   252  000009                     	ds	2
   253  00000B                     processRFID@i_941:
   254                           	opt callstack 0
   255  00000B                     check_RFID@hexBuf:
   256                           	opt callstack 0
   257                           
   258                           ; 12 bytes @ 0xA
   259  00000B                     	ds	12
   260  000017                     check_RFID@byte1:
   261                           	opt callstack 0
   262                           
   263                           ; 1 bytes @ 0x16
   264  000017                     	ds	1
   265  000018                     check_RFID@byte2:
   266                           	opt callstack 0
   267                           
   268                           ; 1 bytes @ 0x17
   269  000018                     	ds	1
   270  000019                     check_RFID@byte3:
   271                           	opt callstack 0
   272                           
   273                           ; 1 bytes @ 0x18
   274  000019                     	ds	1
   275  00001A                     check_RFID@byte4:
   276                           	opt callstack 0
   277                           
   278                           ; 1 bytes @ 0x19
   279  00001A                     	ds	1
   280  00001B                     check_RFID@byte5:
   281                           	opt callstack 0
   282                           
   283                           ; 1 bytes @ 0x1A
   284  00001B                     	ds	1
   285  00001C                     check_RFID@checksum:
   286                           	opt callstack 0
   287                           
   288                           ; 1 bytes @ 0x1B
   289  00001C                     	ds	1
   290  00001D                     check_RFID@i:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x1C
   294  00001D                     	ds	2
   295  00001F                     ??_InterruptHandlerHigh:
   296                           
   297                           ; 1 bytes @ 0x1E
   298  00001F                     	ds	8
   299  000027                     InterruptHandlerHigh@RFID_flag:
   300                           	opt callstack 0
   301                           
   302                           ; 1 bytes @ 0x26
   303  000027                     	ds	1
   304  000028                     ??_InterruptHandlerLow:
   305                           
   306                           ; 1 bytes @ 0x27
   307  000028                     	ds	1
   308  000029                     
   309                           ; 1 bytes @ 0x28
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 78 in file "main.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   329 ;;      Params:         0       0       0       0
   330 ;;      Locals:         0       0       0       0
   331 ;;      Temps:          0       0       0       0
   332 ;;      Totals:         0       0       0       0
   333 ;;Total ram usage:        0 bytes
   334 ;; Hardware stack levels required when called:   12
   335 ;; This function calls:
   336 ;;		_setup
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text0
   343  000822                     __ptext0:
   344                           	opt callstack 0
   345  000822                     _main:
   346                           	opt callstack 19
   347                           
   348                           ;main.c: 81:   setup();
   349                           
   350                           ;incstack = 0
   351  000822  EC2B  F004         	call	_setup	;wreg free
   352  000826                     l1405:
   353                           
   354                           ;main.c: 88:       while(robot_mode == 0)
   355  000826  502A               	movf	_robot_mode,w,c	;volatile
   356  000828  B4D8               	btfsc	status,2,c
   357  00082A  D7FD               	goto	l1405
   358  00082C                     u800:
   359                           
   360                           ;main.c: 94:       while(robot_mode == 1)
   361  00082C  042A               	decf	_robot_mode,w,c	;volatile
   362  00082E  B4D8               	btfsc	status,2,c
   363  000830  D7FD               	goto	u800
   364  000832                     u810:
   365                           
   366                           ;main.c: 100:       while(robot_mode == 2)
   367  000832  0E02               	movlw	2
   368  000834  182A               	xorwf	_robot_mode,w,c	;volatile
   369  000836  A4D8               	btfss	status,2,c
   370  000838  D7F6               	goto	l1405
   371  00083A  D7FB               	goto	u810
   372  00083C                     __end_of_main:
   373                           	opt callstack 0
   374                           
   375 ;; *************** function _setup *****************
   376 ;; Defined at:
   377 ;;		line 35 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   391 ;;      Params:         0       0       0       0
   392 ;;      Locals:         0       0       0       0
   393 ;;      Temps:          0       0       0       0
   394 ;;      Totals:         0       0       0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels used:    1
   397 ;; Hardware stack levels required when called:   11
   398 ;; This function calls:
   399 ;;		_LCD_Init
   400 ;;		_init_RFID
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text1
   407  000856                     __ptext1:
   408                           	opt callstack 0
   409  000856                     _setup:
   410                           	opt callstack 19
   411                           
   412                           ;main.c: 38:     OSCCON = 0x72;
   413                           
   414                           ;incstack = 0
   415  000856  0E72               	movlw	114
   416  000858  6ED3               	movwf	4051,c	;volatile
   417  00085A                     l27:
   418  00085A  A4D3               	btfss	4051,2,c	;volatile
   419  00085C  D7FE               	goto	l27
   420                           
   421                           ;main.c: 40:     INTCONbits.GIEH = 1;
   422  00085E  8EF2               	bsf	4082,7,c	;volatile
   423                           
   424                           ;main.c: 41:     INTCONbits.GIEL = 1;
   425  000860  8CF2               	bsf	4082,6,c	;volatile
   426                           
   427                           ;main.c: 42:     RCONbits.IPEN=1;
   428  000862  8ED0               	bsf	4048,7,c	;volatile
   429                           
   430                           ;main.c: 44:     LCD_Init();
   431  000864  EC39  F002         	call	_LCD_Init	;wreg free
   432                           
   433                           ;main.c: 45:     init_RFID();
   434  000868  EC37  F004         	call	_init_RFID	;wreg free
   435  00086C  0012               	return		;funcret
   436  00086E                     __end_of_setup:
   437                           	opt callstack 0
   438                           
   439 ;; *************** function _init_RFID *****************
   440 ;; Defined at:
   441 ;;		line 12 in file "RFID.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   455 ;;      Params:         0       0       0       0
   456 ;;      Locals:         0       0       0       0
   457 ;;      Temps:          0       0       0       0
   458 ;;      Totals:         0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used:    1
   461 ;; Hardware stack levels required when called:    7
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_setup
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text2
   470  00086E                     __ptext2:
   471                           	opt callstack 0
   472  00086E                     _init_RFID:
   473                           	opt callstack 22
   474                           
   475                           ;RFID.c: 15:     TRISCbits.RC7 = 1;
   476                           
   477                           ;incstack = 0
   478  00086E  8E94               	bsf	3988,7,c	;volatile
   479                           
   480                           ;RFID.c: 18:     SPBRG = 203;
   481  000870  0ECB               	movlw	203
   482  000872  6EAF               	movwf	4015,c	;volatile
   483                           
   484                           ;RFID.c: 19:     SPBRGH = 0;
   485  000874  0E00               	movlw	0
   486  000876  6EB0               	movwf	4016,c	;volatile
   487                           
   488                           ;RFID.c: 21:     BAUDCONbits.BRG16=1;
   489  000878  86AA               	bsf	4010,3,c	;volatile
   490                           
   491                           ;RFID.c: 22:     TXSTAbits.BRGH = 1;
   492  00087A  84AC               	bsf	4012,2,c	;volatile
   493                           
   494                           ;RFID.c: 23:     RCSTAbits.CREN = 1;
   495  00087C  88AB               	bsf	4011,4,c	;volatile
   496                           
   497                           ;RFID.c: 24:     RCSTAbits.SPEN = 1;
   498  00087E  8EAB               	bsf	4011,7,c	;volatile
   499                           
   500                           ;RFID.c: 25:     TXSTAbits.TXEN = 1;
   501  000880  8AAC               	bsf	4012,5,c	;volatile
   502                           
   503                           ;RFID.c: 27:     PIE1bits.RC1IE = 1;
   504  000882  8A9D               	bsf	3997,5,c	;volatile
   505  000884  0012               	return		;funcret
   506  000886                     __end_of_init_RFID:
   507                           	opt callstack 0
   508                           
   509 ;; *************** function _LCD_Init *****************
   510 ;; Defined at:
   511 ;;		line 56 in file "LCDIO.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2, status,0, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   525 ;;      Params:         0       0       0       0
   526 ;;      Locals:         0       0       0       0
   527 ;;      Temps:          0       1       0       0
   528 ;;      Totals:         0       1       0       0
   529 ;;Total ram usage:        1 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; Hardware stack levels required when called:   10
   532 ;; This function calls:
   533 ;;		_LCDout
   534 ;;		_SendLCD
   535 ;; This function is called by:
   536 ;;		_setup
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text3
   541  000472                     __ptext3:
   542                           	opt callstack 0
   543  000472                     _LCD_Init:
   544                           	opt callstack 19
   545                           
   546                           ;LCDIO.c: 59:  TRISCbits.RC0 = 0;
   547                           
   548                           ;incstack = 0
   549  000472  9094               	bcf	3988,0,c	;volatile
   550                           
   551                           ;LCDIO.c: 60:  TRISCbits.RC1 = 0;
   552  000474  9294               	bcf	3988,1,c	;volatile
   553                           
   554                           ;LCDIO.c: 61:  TRISCbits.RC2 = 0;
   555  000476  9494               	bcf	3988,2,c	;volatile
   556                           
   557                           ;LCDIO.c: 62:  TRISDbits.RD0 = 0;
   558  000478  9095               	bcf	3989,0,c	;volatile
   559                           
   560                           ;LCDIO.c: 63:  TRISDbits.RD1 = 0;
   561  00047A  9295               	bcf	3989,1,c	;volatile
   562                           
   563                           ;LCDIO.c: 64:  TRISAbits.RA6 = 0;
   564  00047C  9C92               	bcf	3986,6,c	;volatile
   565                           
   566                           ;LCDIO.c: 67:  LATDbits.LATD0 = 0;
   567  00047E  908C               	bcf	3980,0,c	;volatile
   568                           
   569                           ;LCDIO.c: 68:  LATDbits.LATD1 = 0;
   570  000480  928C               	bcf	3980,1,c	;volatile
   571                           
   572                           ;LCDIO.c: 69:  LATCbits.LATC2 = 0;
   573  000482  948B               	bcf	3979,2,c	;volatile
   574                           
   575                           ;LCDIO.c: 70:  LATCbits.LATC1 = 0;
   576  000484  928B               	bcf	3979,1,c	;volatile
   577                           
   578                           ;LCDIO.c: 71:  LATCbits.LATC0 = 0;
   579  000486  908B               	bcf	3979,0,c	;volatile
   580                           
   581                           ;LCDIO.c: 72:  LATAbits.LATA6 = 0;
   582  000488  9C89               	bcf	3977,6,c	;volatile
   583                           
   584                           ;LCDIO.c: 75:  _delay((unsigned long)((15)*(8000000/4000.0)));
   585  00048A  0E27               	movlw	39
   586  00048C  0100               	movlb	0	; () banked
   587  00048E  6F64               	movwf	??_LCD_Init& (0+255),b
   588  000490  0EF5               	movlw	245
   589  000492                     u837:
   590  000492  2EE8               	decfsz	wreg,f,c
   591  000494  D7FE               	bra	u837
   592  000496  2F64               	decfsz	??_LCD_Init& (0+255),f,b
   593  000498  D7FC               	bra	u837
   594                           
   595                           ;LCDIO.c: 76:  LCDout(0b0011);
   596  00049A  0E03               	movlw	3
   597  00049C  ECEA  F002         	call	_LCDout
   598                           
   599                           ;LCDIO.c: 77:  _delay((unsigned long)((5)*(8000000/4000.0)));
   600  0004A0  0E0D               	movlw	13
   601  0004A2  0100               	movlb	0	; () banked
   602  0004A4  6F64               	movwf	??_LCD_Init& (0+255),b
   603  0004A6  0EFB               	movlw	251
   604  0004A8                     u847:
   605  0004A8  2EE8               	decfsz	wreg,f,c
   606  0004AA  D7FE               	bra	u847
   607  0004AC  2F64               	decfsz	??_LCD_Init& (0+255),f,b
   608  0004AE  D7FC               	bra	u847
   609  0004B0  D000               	nop2	
   610                           
   611                           ;LCDIO.c: 78:  LCDout(0b0011);
   612  0004B2  0E03               	movlw	3
   613  0004B4  ECEA  F002         	call	_LCDout
   614                           
   615                           ;LCDIO.c: 79:  _delay((unsigned long)((200)*(8000000/4000000.0)));
   616  0004B8  0E85               	movlw	133
   617  0004BA                     u857:
   618  0004BA  2EE8               	decfsz	wreg,f,c
   619  0004BC  D7FE               	bra	u857
   620  0004BE  F000               	nop	
   621                           
   622                           ;LCDIO.c: 80:  LCDout(0b0011);
   623  0004C0  0E03               	movlw	3
   624  0004C2  ECEA  F002         	call	_LCDout
   625                           
   626                           ;LCDIO.c: 81:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   627  0004C6  0E21               	movlw	33
   628  0004C8                     u867:
   629  0004C8  2EE8               	decfsz	wreg,f,c
   630  0004CA  D7FE               	bra	u867
   631  0004CC  F000               	nop	
   632                           
   633                           ;LCDIO.c: 82:  LCDout(0b0010);
   634  0004CE  0E02               	movlw	2
   635  0004D0  ECEA  F002         	call	_LCDout
   636                           
   637                           ;LCDIO.c: 83:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   638  0004D4  0E21               	movlw	33
   639  0004D6                     u877:
   640  0004D6  2EE8               	decfsz	wreg,f,c
   641  0004D8  D7FE               	bra	u877
   642  0004DA  F000               	nop	
   643                           
   644                           ;LCDIO.c: 86:  SendLCD(0b00101000,0);
   645  0004DC  0E00               	movlw	0
   646  0004DE  0100               	movlb	0	; () banked
   647  0004E0  6F62               	movwf	SendLCD@type& (0+255),b
   648  0004E2  0E28               	movlw	40
   649  0004E4  EC9C  F003         	call	_SendLCD
   650                           
   651                           ;LCDIO.c: 87:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   652  0004E8  0E21               	movlw	33
   653  0004EA                     u887:
   654  0004EA  2EE8               	decfsz	wreg,f,c
   655  0004EC  D7FE               	bra	u887
   656  0004EE  F000               	nop	
   657                           
   658                           ;LCDIO.c: 90:  SendLCD(0b00001000,0);
   659  0004F0  0E00               	movlw	0
   660  0004F2  0100               	movlb	0	; () banked
   661  0004F4  6F62               	movwf	SendLCD@type& (0+255),b
   662  0004F6  0E08               	movlw	8
   663  0004F8  EC9C  F003         	call	_SendLCD
   664                           
   665                           ;LCDIO.c: 91:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   666  0004FC  0E21               	movlw	33
   667  0004FE                     u897:
   668  0004FE  2EE8               	decfsz	wreg,f,c
   669  000500  D7FE               	bra	u897
   670  000502  F000               	nop	
   671                           
   672                           ;LCDIO.c: 94:  SendLCD(0b00000001,0);
   673  000504  0E00               	movlw	0
   674  000506  0100               	movlb	0	; () banked
   675  000508  6F62               	movwf	SendLCD@type& (0+255),b
   676  00050A  0E01               	movlw	1
   677  00050C  EC9C  F003         	call	_SendLCD
   678                           
   679                           ;LCDIO.c: 95:  _delay((unsigned long)((5)*(8000000/4000.0)));
   680  000510  0E0D               	movlw	13
   681  000512  0100               	movlb	0	; () banked
   682  000514  6F64               	movwf	??_LCD_Init& (0+255),b
   683  000516  0EFB               	movlw	251
   684  000518                     u907:
   685  000518  2EE8               	decfsz	wreg,f,c
   686  00051A  D7FE               	bra	u907
   687  00051C  2F64               	decfsz	??_LCD_Init& (0+255),f,b
   688  00051E  D7FC               	bra	u907
   689  000520  D000               	nop2	
   690                           
   691                           ;LCDIO.c: 98:  SendLCD(0b00000110,0);
   692  000522  0E00               	movlw	0
   693  000524  0100               	movlb	0	; () banked
   694  000526  6F62               	movwf	SendLCD@type& (0+255),b
   695  000528  0E06               	movlw	6
   696  00052A  EC9C  F003         	call	_SendLCD
   697                           
   698                           ;LCDIO.c: 99:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   699  00052E  0E21               	movlw	33
   700  000530                     u917:
   701  000530  2EE8               	decfsz	wreg,f,c
   702  000532  D7FE               	bra	u917
   703  000534  F000               	nop	
   704                           
   705                           ;LCDIO.c: 102:  SendLCD(0b00001100,0);
   706  000536  0E00               	movlw	0
   707  000538  0100               	movlb	0	; () banked
   708  00053A  6F62               	movwf	SendLCD@type& (0+255),b
   709  00053C  0E0C               	movlw	12
   710  00053E  EC9C  F003         	call	_SendLCD
   711                           
   712                           ;LCDIO.c: 103:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   713  000542  0E21               	movlw	33
   714  000544                     u927:
   715  000544  2EE8               	decfsz	wreg,f,c
   716  000546  D7FE               	bra	u927
   717  000548  F000               	nop	
   718  00054A  0012               	return		;funcret
   719  00054C                     __end_of_LCD_Init:
   720                           	opt callstack 0
   721                           
   722 ;; *************** function _SendLCD *****************
   723 ;; Defined at:
   724 ;;		line 44 in file "LCDIO.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  Byte            1    wreg     unsigned char 
   727 ;;  type            1    2[BANK0 ] unsigned char 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  Byte            1    3[BANK0 ] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   739 ;;      Params:         0       1       0       0
   740 ;;      Locals:         0       1       0       0
   741 ;;      Temps:          0       0       0       0
   742 ;;      Totals:         0       2       0       0
   743 ;;Total ram usage:        2 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    9
   746 ;; This function calls:
   747 ;;		_LCDout
   748 ;; This function is called by:
   749 ;;		_LCD_Init
   750 ;;		_ShiftLeft
   751 ;;		_ShiftRight
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text4
   756  000738                     __ptext4:
   757                           	opt callstack 0
   758  000738                     _SendLCD:
   759                           	opt callstack 19
   760                           
   761                           ;incstack = 0
   762                           ;SendLCD@Byte stored from wreg
   763  000738  0100               	movlb	0	; () banked
   764  00073A  6F63               	movwf	SendLCD@Byte& (0+255),b
   765                           
   766                           ;LCDIO.c: 47:  LATAbits.LATA6 = type;
   767  00073C  0100               	movlb	0	; () banked
   768  00073E  B162               	btfsc	SendLCD@type& (0+255),0,b
   769  000740  D002               	bra	u785
   770  000742  9C89               	bcf	3977,6,c	;volatile
   771  000744  D001               	bra	u786
   772  000746                     u785:
   773  000746  8C89               	bsf	3977,6,c	;volatile
   774  000748                     u786:
   775                           
   776                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
   777  000748  0100               	movlb	0	; () banked
   778  00074A  3963               	swapf	SendLCD@Byte& (0+255),w,b
   779  00074C  0B0F               	andlw	15
   780  00074E  0B0F               	andlw	15
   781  000750  ECEA  F002         	call	_LCDout
   782                           
   783                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
   784  000754  0E06               	movlw	6
   785  000756                     u937:
   786  000756  2EE8               	decfsz	wreg,f,c
   787  000758  D7FE               	bra	u937
   788  00075A  D000               	nop2	
   789                           
   790                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
   791  00075C  0100               	movlb	0	; () banked
   792  00075E  5163               	movf	SendLCD@Byte& (0+255),w,b
   793  000760  0B0F               	andlw	15
   794  000762  ECEA  F002         	call	_LCDout
   795                           
   796                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   797  000766  0E21               	movlw	33
   798  000768                     u947:
   799  000768  2EE8               	decfsz	wreg,f,c
   800  00076A  D7FE               	bra	u947
   801  00076C  F000               	nop	
   802  00076E  0012               	return		;funcret
   803  000770                     __end_of_SendLCD:
   804                           	opt callstack 0
   805                           
   806 ;; *************** function _LCDout *****************
   807 ;; Defined at:
   808 ;;		line 31 in file "LCDIO.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  number          1    wreg     unsigned char 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  number          1    1[BANK0 ] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   822 ;;      Params:         0       0       0       0
   823 ;;      Locals:         0       1       0       0
   824 ;;      Temps:          0       1       0       0
   825 ;;      Totals:         0       2       0       0
   826 ;;Total ram usage:        2 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    8
   829 ;; This function calls:
   830 ;;		_E_TOG
   831 ;; This function is called by:
   832 ;;		_SendLCD
   833 ;;		_LCD_Init
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text5
   838  0005D4                     __ptext5:
   839                           	opt callstack 0
   840  0005D4                     _LCDout:
   841                           	opt callstack 19
   842                           
   843                           ;incstack = 0
   844                           ;LCDout@number stored from wreg
   845  0005D4  0100               	movlb	0	; () banked
   846  0005D6  6F61               	movwf	LCDout@number& (0+255),b
   847                           
   848                           ;LCDIO.c: 33:  LATCbits.LATC1 = (0b0001 & number);
   849  0005D8  C061  F060         	movff	LCDout@number,??_LCDout
   850  0005DC  0E01               	movlw	1
   851  0005DE  0100               	movlb	0	; () banked
   852  0005E0  1760               	andwf	??_LCDout& (0+255),f,b
   853  0005E2  4760               	rlncf	??_LCDout& (0+255),f,b
   854  0005E4  508B               	movf	3979,w,c	;volatile
   855  0005E6  1960               	xorwf	??_LCDout& (0+255),w,b
   856  0005E8  0BFD               	andlw	-3
   857  0005EA  1960               	xorwf	??_LCDout& (0+255),w,b
   858  0005EC  6E8B               	movwf	3979,c	;volatile
   859                           
   860                           ;LCDIO.c: 34:  LATCbits.LATC2 = (0b0010 & number) >> 1;
   861  0005EE  C061  F060         	movff	LCDout@number,??_LCDout
   862  0005F2  90D8               	bcf	status,0,c
   863  0005F4  3360               	rrcf	??_LCDout& (0+255),f,b
   864  0005F6  0E01               	movlw	1
   865  0005F8  1760               	andwf	??_LCDout& (0+255),f,b
   866  0005FA  4760               	rlncf	??_LCDout& (0+255),f,b
   867  0005FC  4760               	rlncf	??_LCDout& (0+255),f,b
   868  0005FE  508B               	movf	3979,w,c	;volatile
   869  000600  1960               	xorwf	??_LCDout& (0+255),w,b
   870  000602  0BFB               	andlw	-5
   871  000604  1960               	xorwf	??_LCDout& (0+255),w,b
   872  000606  6E8B               	movwf	3979,c	;volatile
   873                           
   874                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
   875  000608  C061  F060         	movff	LCDout@number,??_LCDout
   876  00060C  90D8               	bcf	status,0,c
   877  00060E  3360               	rrcf	??_LCDout& (0+255),f,b
   878  000610  90D8               	bcf	status,0,c
   879  000612  3360               	rrcf	??_LCDout& (0+255),f,b
   880  000614  0E01               	movlw	1
   881  000616  1760               	andwf	??_LCDout& (0+255),f,b
   882  000618  508C               	movf	3980,w,c	;volatile
   883  00061A  1960               	xorwf	??_LCDout& (0+255),w,b
   884  00061C  0BFE               	andlw	-2
   885  00061E  1960               	xorwf	??_LCDout& (0+255),w,b
   886  000620  6E8C               	movwf	3980,c	;volatile
   887                           
   888                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
   889  000622  C061  F060         	movff	LCDout@number,??_LCDout
   890  000626  90D8               	bcf	status,0,c
   891  000628  3360               	rrcf	??_LCDout& (0+255),f,b
   892  00062A  90D8               	bcf	status,0,c
   893  00062C  3360               	rrcf	??_LCDout& (0+255),f,b
   894  00062E  90D8               	bcf	status,0,c
   895  000630  3360               	rrcf	??_LCDout& (0+255),f,b
   896  000632  0E01               	movlw	1
   897  000634  1760               	andwf	??_LCDout& (0+255),f,b
   898  000636  4760               	rlncf	??_LCDout& (0+255),f,b
   899  000638  508C               	movf	3980,w,c	;volatile
   900  00063A  1960               	xorwf	??_LCDout& (0+255),w,b
   901  00063C  0BFD               	andlw	-3
   902  00063E  1960               	xorwf	??_LCDout& (0+255),w,b
   903  000640  6E8C               	movwf	3980,c	;volatile
   904                           
   905                           ; BSR set to: 0
   906                           ;LCDIO.c: 39:  E_TOG();
   907  000642  EC43  F004         	call	_E_TOG	;wreg free
   908                           
   909                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
   910  000646  0E03               	movlw	3
   911  000648                     u957:
   912  000648  2EE8               	decfsz	wreg,f,c
   913  00064A  D7FE               	bra	u957
   914  00064C  F000               	nop	
   915  00064E  0012               	return		;funcret
   916  000650                     __end_of_LCDout:
   917                           	opt callstack 0
   918                           
   919 ;; *************** function _E_TOG *****************
   920 ;; Defined at:
   921 ;;		line 23 in file "LCDIO.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   935 ;;      Params:         0       0       0       0
   936 ;;      Locals:         0       0       0       0
   937 ;;      Temps:          0       0       0       0
   938 ;;      Totals:         0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    7
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_LCDout
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text6
   950  000886                     __ptext6:
   951                           	opt callstack 0
   952  000886                     _E_TOG:
   953                           	opt callstack 19
   954                           
   955                           ;LCDIO.c: 25: LATCbits.LATC0 = 1;
   956                           
   957                           ;incstack = 0
   958  000886  808B               	bsf	3979,0,c	;volatile
   959                           
   960                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
   961  000888  0E03               	movlw	3
   962  00088A                     u967:
   963  00088A  2EE8               	decfsz	wreg,f,c
   964  00088C  D7FE               	bra	u967
   965  00088E  F000               	nop	
   966                           
   967                           ;LCDIO.c: 27: LATCbits.LATC0 = 0;
   968  000890  908B               	bcf	3979,0,c	;volatile
   969  000892  0012               	return		;funcret
   970  000894                     __end_of_E_TOG:
   971                           	opt callstack 0
   972                           
   973 ;; *************** function _InterruptHandlerLow *****************
   974 ;; Defined at:
   975 ;;		line 72 in file "main.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		None
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   989 ;;      Params:         0       0       0       0
   990 ;;      Locals:         0       0       0       0
   991 ;;      Temps:          1       0       0       0
   992 ;;      Totals:         1       0       0       0
   993 ;;Total ram usage:        1 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    6
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		Interrupt level 1
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	intcodelo
  1004  000018                     __pintcodelo:
  1005                           	opt callstack 0
  1006  000018                     _InterruptHandlerLow:
  1007                           	opt callstack 19
  1008                           
  1009                           ;incstack = 0
  1010  000018  8037               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1011  00001A  CFE0 F028          	movff	bsr,??_InterruptHandlerLow
  1012  00001E  C028  FFE0         	movff	??_InterruptHandlerLow,bsr
  1013  000022  9037               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1014  000024  0010               	retfie	
  1015  000026                     __end_of_InterruptHandlerLow:
  1016                           	opt callstack 0
  1017                           
  1018 ;; *************** function _InterruptHandlerHigh *****************
  1019 ;; Defined at:
  1020 ;;		line 49 in file "main.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  RFID_flag       1   38[COMRAM] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1034 ;;      Params:         0       0       0       0
  1035 ;;      Locals:         1       0       0       0
  1036 ;;      Temps:          8       0       0       0
  1037 ;;      Totals:         9       0       0       0
  1038 ;;Total ram usage:        9 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    5
  1041 ;; This function calls:
  1042 ;;		_check_RFID
  1043 ;;		_processRFID
  1044 ;; This function is called by:
  1045 ;;		Interrupt level 2
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	intcode
  1050  000008                     __pintcode:
  1051                           	opt callstack 0
  1052  000008                     _InterruptHandlerHigh:
  1053                           	opt callstack 19
  1054                           
  1055                           ;incstack = 0
  1056  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1057  00000A  EF64  F003         	goto	int_func
  1058                           
  1059                           	psect	intcode_body
  1060  0006C8                     __pintcode_body:
  1061                           	opt callstack 19
  1062  0006C8                     int_func:
  1063                           	opt callstack 19
  1064  0006C8  CFE1 F01F          	movff	fsr1l,??_InterruptHandlerHigh
  1065  0006CC  CFE2 F020          	movff	fsr1h,??_InterruptHandlerHigh+1
  1066  0006D0  CFD9 F021          	movff	fsr2l,??_InterruptHandlerHigh+2
  1067  0006D4  CFDA F022          	movff	fsr2h,??_InterruptHandlerHigh+3
  1068  0006D8  CFF6 F023          	movff	tblptrl,??_InterruptHandlerHigh+4
  1069  0006DC  CFF7 F024          	movff	tblptrh,??_InterruptHandlerHigh+5
  1070  0006E0  CFF8 F025          	movff	tblptru,??_InterruptHandlerHigh+6
  1071  0006E4  CFF5 F026          	movff	tablat,??_InterruptHandlerHigh+7
  1072                           
  1073                           ;main.c: 52:     if(PIR1bits.RCIF)
  1074  0006E8  AA9E               	btfss	3998,5,c	;volatile
  1075  0006EA  D014               	goto	i2l37
  1076                           
  1077                           ;main.c: 53:     {;main.c: 56:         char RFID_flag = processRFID(RFIDbuf, RCREG);
  1078  0006EC  0E2B               	movlw	low _RFIDbuf
  1079  0006EE  6E06               	movwf	processRFID@RFIDbuf,c
  1080  0006F0  0E00               	movlw	high _RFIDbuf
  1081  0006F2  6E07               	movwf	processRFID@RFIDbuf+1,c
  1082  0006F4  CFAE F008          	movff	4014,processRFID@latestChar	;volatile
  1083  0006F8  ECA6  F002         	call	_processRFID	;wreg free
  1084  0006FC  6E27               	movwf	InterruptHandlerHigh@RFID_flag,c
  1085                           
  1086                           ;main.c: 60:         if(RFID_flag == 1)
  1087  0006FE  0427               	decf	InterruptHandlerHigh@RFID_flag,w,c
  1088  000700  A4D8               	btfss	status,2,c
  1089  000702  D008               	goto	i2l37
  1090                           
  1091                           ;main.c: 61:         {;main.c: 62:             check_RFID(RFIDbuf);
  1092  000704  0E2B               	movlw	low _RFIDbuf
  1093  000706  6E07               	movwf	check_RFID@dataBuf,c
  1094  000708  0E00               	movlw	high _RFIDbuf
  1095  00070A  6E08               	movwf	check_RFID@dataBuf+1,c
  1096  00070C  EC91  F001         	call	_check_RFID	;wreg free
  1097                           
  1098                           ;main.c: 63:             robot_mode = 1;
  1099  000710  0E01               	movlw	1
  1100  000712  6E2A               	movwf	_robot_mode,c	;volatile
  1101  000714                     i2l37:
  1102  000714  C026  FFF5         	movff	??_InterruptHandlerHigh+7,tablat
  1103  000718  C025  FFF8         	movff	??_InterruptHandlerHigh+6,tblptru
  1104  00071C  C024  FFF7         	movff	??_InterruptHandlerHigh+5,tblptrh
  1105  000720  C023  FFF6         	movff	??_InterruptHandlerHigh+4,tblptrl
  1106  000724  C022  FFDA         	movff	??_InterruptHandlerHigh+3,fsr2h
  1107  000728  C021  FFD9         	movff	??_InterruptHandlerHigh+2,fsr2l
  1108  00072C  C020  FFE2         	movff	??_InterruptHandlerHigh+1,fsr1h
  1109  000730  C01F  FFE1         	movff	??_InterruptHandlerHigh,fsr1l
  1110  000734  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1111  000736  0011               	retfie		f
  1112  000738                     __end_of_InterruptHandlerHigh:
  1113                           	opt callstack 0
  1114                           
  1115 ;; *************** function _processRFID *****************
  1116 ;; Defined at:
  1117 ;;		line 32 in file "RFID.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  RFIDbuf         2    5[COMRAM] PTR unsigned char 
  1120 ;;		 -> RFIDbuf(12), 
  1121 ;;  latestChar      1    7[COMRAM] unsigned char 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  i               1   10[COMRAM] unsigned char 
  1124 ;;  i               2    8[COMRAM] int 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      unsigned char 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1134 ;;      Params:         3       0       0       0
  1135 ;;      Locals:         3       0       0       0
  1136 ;;      Temps:          0       0       0       0
  1137 ;;      Totals:         6       0       0       0
  1138 ;;Total ram usage:        6 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    4
  1141 ;; This function calls:
  1142 ;;		_ClearLCD
  1143 ;;		_SetLine
  1144 ;;		i2_SendLCD
  1145 ;; This function is called by:
  1146 ;;		_InterruptHandlerHigh
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text9
  1151  00054C                     __ptext9:
  1152                           	opt callstack 0
  1153  00054C                     _processRFID:
  1154                           	opt callstack 19
  1155                           
  1156                           ;RFID.c: 32: char processRFID(char RFIDbuf[], char latestChar);RFID.c: 33: {;RFID.c: 37:
      +                               static char position_in_buf;;RFID.c: 40:     if(latestChar == 0x03)
  1157                           
  1158                           ;incstack = 0
  1159  00054C  0E03               	movlw	3
  1160  00054E  1808               	xorwf	processRFID@latestChar,w,c
  1161  000550  A4D8               	btfss	status,2,c
  1162  000552  D020               	goto	i2l1267
  1163                           
  1164                           ;RFID.c: 41:     {;RFID.c: 42:         ClearLCD();
  1165  000554  EC1E  F004         	call	_ClearLCD	;wreg free
  1166                           
  1167                           ;RFID.c: 43:         SetLine(1);
  1168  000558  0E01               	movlw	1
  1169  00055A  ECEB  F003         	call	_SetLine
  1170                           
  1171                           ;RFID.c: 44:         for(int i=0;i<10;i++)
  1172  00055E  0E00               	movlw	0
  1173  000560  6E0A               	movwf	processRFID@i+1,c
  1174  000562  0E00               	movlw	0
  1175  000564  6E09               	movwf	processRFID@i,c
  1176  000566                     i2l1255:
  1177                           
  1178                           ;RFID.c: 45:         {;RFID.c: 46:             SendLCD(RFIDbuf[i],1);
  1179  000566  0E01               	movlw	1
  1180  000568  6E03               	movwf	i2SendLCD@type,c
  1181  00056A  5009               	movf	processRFID@i,w,c
  1182  00056C  2406               	addwf	processRFID@RFIDbuf,w,c
  1183  00056E  6ED9               	movwf	fsr2l,c
  1184  000570  500A               	movf	processRFID@i+1,w,c
  1185  000572  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  1186  000574  6EDA               	movwf	fsr2h,c
  1187  000576  50DF               	movf	indf2,w,c
  1188  000578  ECD3  F003         	call	i2_SendLCD
  1189                           
  1190                           ;RFID.c: 47:         }
  1191  00057C  4A09               	infsnz	processRFID@i,f,c
  1192  00057E  2A0A               	incf	processRFID@i+1,f,c
  1193  000580  BE0A               	btfsc	processRFID@i+1,7,c
  1194  000582  D7F1               	goto	i2l1255
  1195  000584  500A               	movf	processRFID@i+1,w,c
  1196  000586  E104               	bnz	i2u50_40
  1197  000588  0E0A               	movlw	10
  1198  00058A  5C09               	subwf	processRFID@i,w,c
  1199  00058C  A0D8               	btfss	status,0,c
  1200  00058E  D7EB               	goto	i2l1255
  1201  000590                     i2u50_40:
  1202                           
  1203                           ;RFID.c: 49:         return 1;
  1204  000590  0E01               	movlw	1
  1205  000592  0012               	return	
  1206  000594                     i2l1267:
  1207                           
  1208                           ;RFID.c: 52:     {;RFID.c: 55:        if(latestChar == 0x02)
  1209  000594  0E02               	movlw	2
  1210  000596  1808               	xorwf	processRFID@latestChar,w,c
  1211  000598  A4D8               	btfss	status,2,c
  1212  00059A  D012               	goto	i2l1287
  1213                           
  1214                           ;RFID.c: 56:         {;RFID.c: 57:            position_in_buf = 0;
  1215  00059C  0E00               	movlw	0
  1216  00059E  6E29               	movwf	processRFID@position_in_buf,c
  1217                           
  1218                           ;RFID.c: 58:            for(char i=0 ;i<12 ;i++)
  1219  0005A0  0E00               	movlw	0
  1220  0005A2  6E0B               	movwf	processRFID@i_941,c
  1221  0005A4                     i2l1275:
  1222                           
  1223                           ;RFID.c: 59:            {;RFID.c: 60:                RFIDbuf[i] = 0;
  1224  0005A4  500B               	movf	processRFID@i_941,w,c
  1225  0005A6  2406               	addwf	processRFID@RFIDbuf,w,c
  1226  0005A8  6ED9               	movwf	fsr2l,c
  1227  0005AA  0E00               	movlw	0
  1228  0005AC  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  1229  0005AE  6EDA               	movwf	fsr2h,c
  1230  0005B0  0E00               	movlw	0
  1231  0005B2  6EDF               	movwf	indf2,c
  1232                           
  1233                           ;RFID.c: 61:            }
  1234  0005B4  2A0B               	incf	processRFID@i_941,f,c
  1235  0005B6  0E0B               	movlw	11
  1236  0005B8  640B               	cpfsgt	processRFID@i_941,c
  1237  0005BA  D7F4               	goto	i2l1275
  1238  0005BC                     i2u52_40:
  1239                           
  1240                           ;RFID.c: 63:            return 0;
  1241  0005BC  0E00               	movlw	0
  1242  0005BE  0012               	return	
  1243  0005C0                     i2l1287:
  1244                           
  1245                           ;RFID.c: 67:         {;RFID.c: 68:             RFIDbuf[position_in_buf] = latestChar;
  1246  0005C0  5029               	movf	processRFID@position_in_buf,w,c
  1247  0005C2  2406               	addwf	processRFID@RFIDbuf,w,c
  1248  0005C4  6ED9               	movwf	fsr2l,c
  1249  0005C6  0E00               	movlw	0
  1250  0005C8  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  1251  0005CA  6EDA               	movwf	fsr2h,c
  1252  0005CC  C008  FFDF         	movff	processRFID@latestChar,indf2
  1253                           
  1254                           ;RFID.c: 69:             position_in_buf++;
  1255  0005D0  2A29               	incf	processRFID@position_in_buf,f,c
  1256  0005D2  D7F4               	goto	i2u52_40
  1257  0005D4                     __end_of_processRFID:
  1258                           	opt callstack 0
  1259                           
  1260 ;; *************** function _ClearLCD *****************
  1261 ;; Defined at:
  1262 ;;		line 137 in file "LCDIO.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1276 ;;      Params:         0       0       0       0
  1277 ;;      Locals:         0       0       0       0
  1278 ;;      Temps:          1       0       0       0
  1279 ;;      Totals:         1       0       0       0
  1280 ;;Total ram usage:        1 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    3
  1283 ;; This function calls:
  1284 ;;		i2_SendLCD
  1285 ;; This function is called by:
  1286 ;;		_processRFID
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text10
  1291  00083C                     __ptext10:
  1292                           	opt callstack 0
  1293  00083C                     _ClearLCD:
  1294                           	opt callstack 19
  1295                           
  1296                           ;LCDIO.c: 138:     SendLCD(0b00000001,0);
  1297                           
  1298                           ;incstack = 0
  1299  00083C  0E00               	movlw	0
  1300  00083E  6E03               	movwf	i2SendLCD@type,c
  1301  000840  0E01               	movlw	1
  1302  000842  ECD3  F003         	call	i2_SendLCD
  1303                           
  1304                           ;LCDIO.c: 139:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1305  000846  0E0D               	movlw	13
  1306  000848  6E05               	movwf	??_ClearLCD& (0+255),c
  1307  00084A  0EFC               	movlw	252
  1308  00084C                     i2u97_47:
  1309  00084C  2EE8               	decfsz	wreg,f,c
  1310  00084E  D7FE               	bra	i2u97_47
  1311  000850  2E05               	decfsz	??_ClearLCD& (0+255),f,c
  1312  000852  D7FC               	bra	i2u97_47
  1313  000854  0012               	return		;funcret
  1314  000856                     __end_of_ClearLCD:
  1315                           	opt callstack 0
  1316                           
  1317 ;; *************** function _check_RFID *****************
  1318 ;; Defined at:
  1319 ;;		line 77 in file "RFID.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  dataBuf         2    6[COMRAM] PTR unsigned char 
  1322 ;;		 -> RFIDbuf(12), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  i               2   28[COMRAM] int 
  1325 ;;  hexBuf         12   10[COMRAM] unsigned char [12]
  1326 ;;  checksum        1   27[COMRAM] unsigned char 
  1327 ;;  byte5           1   26[COMRAM] unsigned char 
  1328 ;;  byte4           1   25[COMRAM] unsigned char 
  1329 ;;  byte3           1   24[COMRAM] unsigned char 
  1330 ;;  byte2           1   23[COMRAM] unsigned char 
  1331 ;;  byte1           1   22[COMRAM] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1341 ;;      Params:         2       0       0       0
  1342 ;;      Locals:        20       0       0       0
  1343 ;;      Temps:          2       0       0       0
  1344 ;;      Totals:        24       0       0       0
  1345 ;;Total ram usage:       24 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    4
  1348 ;; This function calls:
  1349 ;;		_LCD_String
  1350 ;;		_SetLine
  1351 ;; This function is called by:
  1352 ;;		_InterruptHandlerHigh
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text11
  1357  000322                     __ptext11:
  1358                           	opt callstack 0
  1359  000322                     _check_RFID:
  1360                           	opt callstack 19
  1361                           
  1362                           ;RFID.c: 77: void check_RFID(char dataBuf[]);RFID.c: 78: {;RFID.c: 80:     char hexBuf[1
      +                          2];;RFID.c: 82:     for(int i=0; i<12;i++)
  1363                           
  1364                           ;incstack = 0
  1365  000322  0E00               	movlw	0
  1366  000324  6E1E               	movwf	check_RFID@i+1,c
  1367  000326  0E00               	movlw	0
  1368  000328  6E1D               	movwf	check_RFID@i,c
  1369  00032A                     i2l1301:
  1370                           
  1371                           ;RFID.c: 83:     {;RFID.c: 84:         if ((dataBuf[i] >= '0') && (dataBuf[i] <= '9'))
  1372  00032A  501D               	movf	check_RFID@i,w,c
  1373  00032C  2407               	addwf	check_RFID@dataBuf,w,c
  1374  00032E  6ED9               	movwf	fsr2l,c
  1375  000330  501E               	movf	check_RFID@i+1,w,c
  1376  000332  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1377  000334  6EDA               	movwf	fsr2h,c
  1378  000336  0E2F               	movlw	47
  1379  000338  64DF               	cpfsgt	indf2,c
  1380  00033A  D018               	goto	i2l1307
  1381  00033C  501D               	movf	check_RFID@i,w,c
  1382  00033E  2407               	addwf	check_RFID@dataBuf,w,c
  1383  000340  6ED9               	movwf	fsr2l,c
  1384  000342  501E               	movf	check_RFID@i+1,w,c
  1385  000344  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1386  000346  6EDA               	movwf	fsr2h,c
  1387  000348  0E3A               	movlw	58
  1388  00034A  60DF               	cpfslt	indf2,c
  1389  00034C  D00F               	goto	i2l1307
  1390                           
  1391                           ;RFID.c: 85:         {;RFID.c: 86:             hexBuf[i] = dataBuf[i] - '0';
  1392  00034E  0E0B               	movlw	low check_RFID@hexBuf
  1393  000350  241D               	addwf	check_RFID@i,w,c
  1394  000352  6ED9               	movwf	fsr2l,c
  1395  000354  0E00               	movlw	high check_RFID@hexBuf
  1396  000356  201E               	addwfc	check_RFID@i+1,w,c
  1397  000358  6EDA               	movwf	fsr2h,c
  1398  00035A  501D               	movf	check_RFID@i,w,c
  1399  00035C  2407               	addwf	check_RFID@dataBuf,w,c
  1400  00035E  6EE1               	movwf	fsr1l,c
  1401  000360  501E               	movf	check_RFID@i+1,w,c
  1402  000362  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1403  000364  6EE2               	movwf	fsr1h,c
  1404  000366  50E7               	movf	indf1,w,c
  1405  000368  0FD0               	addlw	208
  1406  00036A  D020               	goto	L1
  1407  00036C                     i2l1307:
  1408  00036C  501D               	movf	check_RFID@i,w,c
  1409  00036E  2407               	addwf	check_RFID@dataBuf,w,c
  1410  000370  6ED9               	movwf	fsr2l,c
  1411  000372  501E               	movf	check_RFID@i+1,w,c
  1412  000374  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1413  000376  6EDA               	movwf	fsr2h,c
  1414  000378  0E40               	movlw	64
  1415  00037A  64DF               	cpfsgt	indf2,c
  1416  00037C  D018               	goto	i2l1313
  1417  00037E  501D               	movf	check_RFID@i,w,c
  1418  000380  2407               	addwf	check_RFID@dataBuf,w,c
  1419  000382  6ED9               	movwf	fsr2l,c
  1420  000384  501E               	movf	check_RFID@i+1,w,c
  1421  000386  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1422  000388  6EDA               	movwf	fsr2h,c
  1423  00038A  0E47               	movlw	71
  1424  00038C  60DF               	cpfslt	indf2,c
  1425  00038E  D00F               	goto	i2l1313
  1426                           
  1427                           ;RFID.c: 88:         {;RFID.c: 89:             hexBuf[i] = 10 + dataBuf[i] - 'A';
  1428  000390  0E0B               	movlw	low check_RFID@hexBuf
  1429  000392  241D               	addwf	check_RFID@i,w,c
  1430  000394  6ED9               	movwf	fsr2l,c
  1431  000396  0E00               	movlw	high check_RFID@hexBuf
  1432  000398  201E               	addwfc	check_RFID@i+1,w,c
  1433  00039A  6EDA               	movwf	fsr2h,c
  1434  00039C  501D               	movf	check_RFID@i,w,c
  1435  00039E  2407               	addwf	check_RFID@dataBuf,w,c
  1436  0003A0  6EE1               	movwf	fsr1l,c
  1437  0003A2  501E               	movf	check_RFID@i+1,w,c
  1438  0003A4  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1439  0003A6  6EE2               	movwf	fsr1h,c
  1440  0003A8  50E7               	movf	indf1,w,c
  1441  0003AA  0FC9               	addlw	201
  1442  0003AC                     L1:
  1443  0003AC  6EDF               	movwf	indf2,c
  1444  0003AE                     i2l1313:
  1445                           
  1446                           ;RFID.c: 91:     }
  1447  0003AE  4A1D               	infsnz	check_RFID@i,f,c
  1448  0003B0  2A1E               	incf	check_RFID@i+1,f,c
  1449  0003B2  BE1E               	btfsc	check_RFID@i+1,7,c
  1450  0003B4  D7BA               	goto	i2l1301
  1451  0003B6  501E               	movf	check_RFID@i+1,w,c
  1452  0003B8  E104               	bnz	i2u57_40
  1453  0003BA  0E0C               	movlw	12
  1454  0003BC  5C1D               	subwf	check_RFID@i,w,c
  1455  0003BE  A0D8               	btfss	status,0,c
  1456  0003C0  D7B4               	goto	i2l1301
  1457  0003C2                     i2u57_40:
  1458                           
  1459                           ;RFID.c: 93:     char byte1 = 0x00 | (hexBuf[0] < 1) | hexBuf[1];
  1460  0003C2  500B               	movf	check_RFID@hexBuf,w,c
  1461  0003C4  A4D8               	btfss	status,2,c
  1462  0003C6  D002               	goto	i2u58_40
  1463  0003C8  0E01               	movlw	1
  1464  0003CA  D001               	goto	i2u59_40
  1465  0003CC                     i2u58_40:
  1466  0003CC  0E00               	movlw	0
  1467  0003CE                     i2u59_40:
  1468  0003CE  100C               	iorwf	check_RFID@hexBuf+1,w,c
  1469  0003D0  6E17               	movwf	check_RFID@byte1,c
  1470                           
  1471                           ;RFID.c: 94:     char byte2 = 0x00 | (hexBuf[2] < 1) | hexBuf[3];
  1472  0003D2  500D               	movf	check_RFID@hexBuf+2,w,c
  1473  0003D4  A4D8               	btfss	status,2,c
  1474  0003D6  D002               	goto	i2u60_40
  1475  0003D8  0E01               	movlw	1
  1476  0003DA  D001               	goto	i2u61_40
  1477  0003DC                     i2u60_40:
  1478  0003DC  0E00               	movlw	0
  1479  0003DE                     i2u61_40:
  1480  0003DE  100E               	iorwf	check_RFID@hexBuf+3,w,c
  1481  0003E0  6E18               	movwf	check_RFID@byte2,c
  1482                           
  1483                           ;RFID.c: 95:     char byte3 = 0x00 | (hexBuf[4] < 1) | hexBuf[5];
  1484  0003E2  500F               	movf	check_RFID@hexBuf+4,w,c
  1485  0003E4  A4D8               	btfss	status,2,c
  1486  0003E6  D002               	goto	i2u62_40
  1487  0003E8  0E01               	movlw	1
  1488  0003EA  D001               	goto	i2u63_40
  1489  0003EC                     i2u62_40:
  1490  0003EC  0E00               	movlw	0
  1491  0003EE                     i2u63_40:
  1492  0003EE  1010               	iorwf	check_RFID@hexBuf+5,w,c
  1493  0003F0  6E19               	movwf	check_RFID@byte3,c
  1494                           
  1495                           ;RFID.c: 96:     char byte4 = 0x00 | (hexBuf[6] < 1) | hexBuf[7];
  1496  0003F2  5011               	movf	check_RFID@hexBuf+6,w,c
  1497  0003F4  A4D8               	btfss	status,2,c
  1498  0003F6  D002               	goto	i2u64_40
  1499  0003F8  0E01               	movlw	1
  1500  0003FA  D001               	goto	i2u65_40
  1501  0003FC                     i2u64_40:
  1502  0003FC  0E00               	movlw	0
  1503  0003FE                     i2u65_40:
  1504  0003FE  1012               	iorwf	check_RFID@hexBuf+7,w,c
  1505  000400  6E1A               	movwf	check_RFID@byte4,c
  1506                           
  1507                           ;RFID.c: 97:     char byte5 = 0x00 | (hexBuf[8] < 1) | hexBuf[9];
  1508  000402  5013               	movf	check_RFID@hexBuf+8,w,c
  1509  000404  A4D8               	btfss	status,2,c
  1510  000406  D002               	goto	i2u66_40
  1511  000408  0E01               	movlw	1
  1512  00040A  D001               	goto	i2u67_40
  1513  00040C                     i2u66_40:
  1514  00040C  0E00               	movlw	0
  1515  00040E                     i2u67_40:
  1516  00040E  1014               	iorwf	check_RFID@hexBuf+9,w,c
  1517  000410  6E1B               	movwf	check_RFID@byte5,c
  1518                           
  1519                           ;RFID.c: 98:     char checksum = 0x00 | (hexBuf[10] < 1) | hexBuf[11];
  1520  000412  5015               	movf	check_RFID@hexBuf+10,w,c
  1521  000414  A4D8               	btfss	status,2,c
  1522  000416  D002               	goto	i2u68_40
  1523  000418  0E01               	movlw	1
  1524  00041A  D001               	goto	i2u69_40
  1525  00041C                     i2u68_40:
  1526  00041C  0E00               	movlw	0
  1527  00041E                     i2u69_40:
  1528  00041E  1016               	iorwf	check_RFID@hexBuf+11,w,c
  1529  000420  6E1C               	movwf	check_RFID@checksum,c
  1530                           
  1531                           ;RFID.c: 101:     if(byte1^byte2^byte3^byte4^byte5 == checksum)
  1532  000422  5017               	movf	check_RFID@byte1,w,c
  1533  000424  1818               	xorwf	check_RFID@byte2,w,c
  1534  000426  1819               	xorwf	check_RFID@byte3,w,c
  1535  000428  181A               	xorwf	check_RFID@byte4,w,c
  1536  00042A  6E09               	movwf	??_check_RFID& (0+255),c
  1537  00042C  6A0A               	clrf	(??_check_RFID+1)& (0+255),c
  1538  00042E  501C               	movf	check_RFID@checksum,w,c
  1539  000430  181B               	xorwf	check_RFID@byte5,w,c
  1540  000432  A4D8               	btfss	status,2,c
  1541  000434  D002               	goto	i2u70_40
  1542  000436  0E01               	movlw	1
  1543  000438  D001               	goto	i2u71_40
  1544  00043A                     i2u70_40:
  1545  00043A  0E00               	movlw	0
  1546  00043C                     i2u71_40:
  1547  00043C  1A09               	xorwf	??_check_RFID,f,c
  1548  00043E  0E00               	movlw	0
  1549  000440  1A0A               	xorwf	??_check_RFID+1,f,c
  1550  000442  5009               	movf	??_check_RFID,w,c
  1551  000444  100A               	iorwf	??_check_RFID+1,w,c
  1552  000446  B4D8               	btfsc	status,2,c
  1553  000448  D00A               	goto	i2l1323
  1554                           
  1555                           ;RFID.c: 102:     {;RFID.c: 104:         SetLine(2);
  1556  00044A  0E02               	movlw	2
  1557  00044C  ECEB  F003         	call	_SetLine
  1558                           
  1559                           ;RFID.c: 105:         LCD_String("CHECKSUM PASSED");
  1560  000450  0E11               	movlw	low STR_1
  1561  000452  6E05               	movwf	LCD_String@string,c
  1562  000454  0E03               	movlw	high STR_1
  1563  000456  6E06               	movwf	LCD_String@string+1,c
  1564  000458  ECB8  F003         	call	_LCD_String	;wreg free
  1565                           
  1566                           ;RFID.c: 106:     }
  1567  00045C  0012               	return	
  1568  00045E                     i2l1323:
  1569                           
  1570                           ;RFID.c: 109:         SetLine(2);
  1571  00045E  0E02               	movlw	2
  1572  000460  ECEB  F003         	call	_SetLine
  1573                           
  1574                           ;RFID.c: 110:         LCD_String("CHECKSUM FAILED");
  1575  000464  0E01               	movlw	low STR_2
  1576  000466  6E05               	movwf	LCD_String@string,c
  1577  000468  0E03               	movlw	high STR_2
  1578  00046A  6E06               	movwf	LCD_String@string+1,c
  1579  00046C  ECB8  F003         	call	_LCD_String	;wreg free
  1580  000470  0012               	return		;funcret
  1581  000472                     __end_of_check_RFID:
  1582                           	opt callstack 0
  1583                           
  1584 ;; *************** function _SetLine *****************
  1585 ;; Defined at:
  1586 ;;		line 107 in file "LCDIO.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  line            1    wreg     unsigned char 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  line            1    4[COMRAM] unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1600 ;;      Params:         0       0       0       0
  1601 ;;      Locals:         1       0       0       0
  1602 ;;      Temps:          0       0       0       0
  1603 ;;      Totals:         1       0       0       0
  1604 ;;Total ram usage:        1 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    3
  1607 ;; This function calls:
  1608 ;;		i2_SendLCD
  1609 ;; This function is called by:
  1610 ;;		_processRFID
  1611 ;;		_check_RFID
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text12
  1616  0007D6                     __ptext12:
  1617                           	opt callstack 0
  1618  0007D6                     _SetLine:
  1619                           	opt callstack 19
  1620                           
  1621                           ;incstack = 0
  1622                           ;SetLine@line stored from wreg
  1623  0007D6  6E05               	movwf	SetLine@line,c
  1624                           
  1625                           ;LCDIO.c: 109:     if(line == 1){
  1626  0007D8  0405               	decf	SetLine@line,w,c
  1627  0007DA  A4D8               	btfss	status,2,c
  1628  0007DC  D005               	goto	i2l1219
  1629                           
  1630                           ;LCDIO.c: 110:         SendLCD(0x80,0);
  1631  0007DE  0E00               	movlw	0
  1632  0007E0  6E03               	movwf	i2SendLCD@type,c
  1633  0007E2  0E80               	movlw	128
  1634  0007E4  ECD3  F003         	call	i2_SendLCD
  1635  0007E8                     i2l1219:
  1636                           
  1637                           ;LCDIO.c: 113:     if(line == 2){
  1638  0007E8  0E02               	movlw	2
  1639  0007EA  1805               	xorwf	SetLine@line,w,c
  1640  0007EC  A4D8               	btfss	status,2,c
  1641  0007EE  D005               	goto	i2l1223
  1642                           
  1643                           ;LCDIO.c: 114:         SendLCD(0xC0,0);
  1644  0007F0  0E00               	movlw	0
  1645  0007F2  6E03               	movwf	i2SendLCD@type,c
  1646  0007F4  0EC0               	movlw	192
  1647  0007F6  ECD3  F003         	call	i2_SendLCD
  1648  0007FA                     i2l1223:
  1649                           
  1650                           ;LCDIO.c: 116:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1651  0007FA  0E21               	movlw	33
  1652  0007FC                     i2u98_47:
  1653  0007FC  2EE8               	decfsz	wreg,f,c
  1654  0007FE  D7FE               	bra	i2u98_47
  1655  000800  F000               	nop	
  1656  000802  0012               	return		;funcret
  1657  000804                     __end_of_SetLine:
  1658                           	opt callstack 0
  1659                           
  1660 ;; *************** function _LCD_String *****************
  1661 ;; Defined at:
  1662 ;;		line 119 in file "LCDIO.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  string          2    4[COMRAM] PTR unsigned char 
  1665 ;;		 -> STR_2(16), STR_1(16), 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1677 ;;      Params:         2       0       0       0
  1678 ;;      Locals:         0       0       0       0
  1679 ;;      Temps:          0       0       0       0
  1680 ;;      Totals:         2       0       0       0
  1681 ;;Total ram usage:        2 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    3
  1684 ;; This function calls:
  1685 ;;		i2_SendLCD
  1686 ;; This function is called by:
  1687 ;;		_check_RFID
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text13
  1692  000770                     __ptext13:
  1693                           	opt callstack 0
  1694  000770                     _LCD_String:
  1695                           	opt callstack 19
  1696                           
  1697                           ;LCDIO.c: 121: while(*string != 0){
  1698                           
  1699                           ;incstack = 0
  1700  000770  D010               	goto	i2l1233
  1701  000772                     i2l1227:
  1702                           
  1703                           ;LCDIO.c: 124: SendLCD(*string++,1);
  1704  000772  0E01               	movlw	1
  1705  000774  6E03               	movwf	i2SendLCD@type,c
  1706  000776  C005  FFF6         	movff	LCD_String@string,tblptrl
  1707  00077A  C006  FFF7         	movff	LCD_String@string+1,tblptrh
  1708  00077E                     	if	0	;tblptru may be non-zero
  1709  00077E                     	endif
  1710  00077E                     	if	0	;tblptru may be non-zero
  1711  00077E                     	endif
  1712  00077E  0008               	tblrd		*
  1713  000780  50F5               	movf	tablat,w,c
  1714  000782  ECD3  F003         	call	i2_SendLCD
  1715  000786  4A05               	infsnz	LCD_String@string,f,c
  1716  000788  2A06               	incf	LCD_String@string+1,f,c
  1717                           
  1718                           ;LCDIO.c: 125:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1719  00078A  0E21               	movlw	33
  1720  00078C                     i2u99_47:
  1721  00078C  2EE8               	decfsz	wreg,f,c
  1722  00078E  D7FE               	bra	i2u99_47
  1723  000790  F000               	nop	
  1724  000792                     i2l1233:
  1725                           
  1726                           ;LCDIO.c: 121: while(*string != 0){
  1727  000792  C005  FFF6         	movff	LCD_String@string,tblptrl
  1728  000796  C006  FFF7         	movff	LCD_String@string+1,tblptrh
  1729  00079A                     	if	0	;tblptru may be non-zero
  1730  00079A                     	endif
  1731  00079A                     	if	0	;tblptru may be non-zero
  1732  00079A                     	endif
  1733  00079A  0008               	tblrd		*
  1734  00079C  50F5               	movf	tablat,w,c
  1735  00079E  0900               	iorlw	0
  1736  0007A0  B4D8               	btfsc	status,2,c
  1737  0007A2  0012               	return	
  1738  0007A4  D7E6               	goto	i2l1227
  1739  0007A6                     __end_of_LCD_String:
  1740                           	opt callstack 0
  1741                           
  1742 ;; *************** function i2_SendLCD *****************
  1743 ;; Defined at:
  1744 ;;		line 44 in file "LCDIO.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  Byte            1    wreg     unsigned char 
  1747 ;;  type            1    2[COMRAM] unsigned char 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  Byte            1    3[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1759 ;;      Params:         1       0       0       0
  1760 ;;      Locals:         1       0       0       0
  1761 ;;      Temps:          0       0       0       0
  1762 ;;      Totals:         2       0       0       0
  1763 ;;Total ram usage:        2 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    2
  1766 ;; This function calls:
  1767 ;;		i2_LCDout
  1768 ;; This function is called by:
  1769 ;;		_SetLine
  1770 ;;		_LCD_String
  1771 ;;		_ClearLCD
  1772 ;;		_processRFID
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text14
  1777  0007A6                     __ptext14:
  1778                           	opt callstack 0
  1779  0007A6                     i2_SendLCD:
  1780                           	opt callstack 20
  1781                           
  1782                           ;incstack = 0
  1783                           ;i2SendLCD@Byte stored from wreg
  1784  0007A6  6E04               	movwf	i2SendLCD@Byte,c
  1785                           
  1786                           ;LCDIO.c: 47:  LATAbits.LATA6 = type;
  1787  0007A8  B003               	btfsc	i2SendLCD@type,0,c
  1788  0007AA  D002               	bra	i2u44_45
  1789  0007AC  9C89               	bcf	3977,6,c	;volatile
  1790  0007AE  D001               	bra	i2u44_46
  1791  0007B0                     i2u44_45:
  1792  0007B0  8C89               	bsf	3977,6,c	;volatile
  1793  0007B2                     i2u44_46:
  1794                           
  1795                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
  1796  0007B2  3804               	swapf	i2SendLCD@Byte,w,c
  1797  0007B4  0B0F               	andlw	15
  1798  0007B6  0B0F               	andlw	15
  1799  0007B8  EC28  F003         	call	i2_LCDout
  1800                           
  1801                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
  1802  0007BC  0E06               	movlw	6
  1803  0007BE                     i2u100_47:
  1804  0007BE  2EE8               	decfsz	wreg,f,c
  1805  0007C0  D7FE               	bra	i2u100_47
  1806  0007C2  D000               	nop2	
  1807                           
  1808                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
  1809  0007C4  5004               	movf	i2SendLCD@Byte,w,c
  1810  0007C6  0B0F               	andlw	15
  1811  0007C8  EC28  F003         	call	i2_LCDout
  1812                           
  1813                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1814  0007CC  0E21               	movlw	33
  1815  0007CE                     i2u101_47:
  1816  0007CE  2EE8               	decfsz	wreg,f,c
  1817  0007D0  D7FE               	bra	i2u101_47
  1818  0007D2  F000               	nop	
  1819  0007D4  0012               	return		;funcret
  1820  0007D6                     __end_ofi2_SendLCD:
  1821                           	opt callstack 0
  1822                           
  1823 ;; *************** function i2_LCDout *****************
  1824 ;; Defined at:
  1825 ;;		line 31 in file "LCDIO.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  number          1    wreg     unsigned char 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  number          1    1[COMRAM] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1839 ;;      Params:         0       0       0       0
  1840 ;;      Locals:         1       0       0       0
  1841 ;;      Temps:          1       0       0       0
  1842 ;;      Totals:         2       0       0       0
  1843 ;;Total ram usage:        2 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    1
  1846 ;; This function calls:
  1847 ;;		i2_E_TOG
  1848 ;; This function is called by:
  1849 ;;		i2_SendLCD
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text15
  1854  000650                     __ptext15:
  1855                           	opt callstack 0
  1856  000650                     i2_LCDout:
  1857                           	opt callstack 20
  1858                           
  1859                           ;incstack = 0
  1860                           ;i2LCDout@number stored from wreg
  1861  000650  6E02               	movwf	i2LCDout@number,c
  1862                           
  1863                           ;LCDIO.c: 33:  LATCbits.LATC1 = (0b0001 & number);
  1864  000652  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  1865  000656  0E01               	movlw	1
  1866  000658  1601               	andwf	??i2_LCDout,f,c
  1867  00065A  4601               	rlncf	??i2_LCDout,f,c
  1868  00065C  508B               	movf	3979,w,c	;volatile
  1869  00065E  1801               	xorwf	??i2_LCDout,w,c
  1870  000660  0BFD               	andlw	-3
  1871  000662  1801               	xorwf	??i2_LCDout,w,c
  1872  000664  6E8B               	movwf	3979,c	;volatile
  1873                           
  1874                           ;LCDIO.c: 34:  LATCbits.LATC2 = (0b0010 & number) >> 1;
  1875  000666  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  1876  00066A  90D8               	bcf	status,0,c
  1877  00066C  3201               	rrcf	??i2_LCDout,f,c
  1878  00066E  0E01               	movlw	1
  1879  000670  1601               	andwf	??i2_LCDout,f,c
  1880  000672  4601               	rlncf	??i2_LCDout,f,c
  1881  000674  4601               	rlncf	??i2_LCDout,f,c
  1882  000676  508B               	movf	3979,w,c	;volatile
  1883  000678  1801               	xorwf	??i2_LCDout,w,c
  1884  00067A  0BFB               	andlw	-5
  1885  00067C  1801               	xorwf	??i2_LCDout,w,c
  1886  00067E  6E8B               	movwf	3979,c	;volatile
  1887                           
  1888                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
  1889  000680  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  1890  000684  90D8               	bcf	status,0,c
  1891  000686  3201               	rrcf	??i2_LCDout,f,c
  1892  000688  90D8               	bcf	status,0,c
  1893  00068A  3201               	rrcf	??i2_LCDout,f,c
  1894  00068C  0E01               	movlw	1
  1895  00068E  1601               	andwf	??i2_LCDout,f,c
  1896  000690  508C               	movf	3980,w,c	;volatile
  1897  000692  1801               	xorwf	??i2_LCDout,w,c
  1898  000694  0BFE               	andlw	-2
  1899  000696  1801               	xorwf	??i2_LCDout,w,c
  1900  000698  6E8C               	movwf	3980,c	;volatile
  1901                           
  1902                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
  1903  00069A  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  1904  00069E  90D8               	bcf	status,0,c
  1905  0006A0  3201               	rrcf	??i2_LCDout,f,c
  1906  0006A2  90D8               	bcf	status,0,c
  1907  0006A4  3201               	rrcf	??i2_LCDout,f,c
  1908  0006A6  90D8               	bcf	status,0,c
  1909  0006A8  3201               	rrcf	??i2_LCDout,f,c
  1910  0006AA  0E01               	movlw	1
  1911  0006AC  1601               	andwf	??i2_LCDout,f,c
  1912  0006AE  4601               	rlncf	??i2_LCDout,f,c
  1913  0006B0  508C               	movf	3980,w,c	;volatile
  1914  0006B2  1801               	xorwf	??i2_LCDout,w,c
  1915  0006B4  0BFD               	andlw	-3
  1916  0006B6  1801               	xorwf	??i2_LCDout,w,c
  1917  0006B8  6E8C               	movwf	3980,c	;volatile
  1918                           
  1919                           ;LCDIO.c: 39:  E_TOG();
  1920  0006BA  EC4A  F004         	call	i2_E_TOG	;wreg free
  1921                           
  1922                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1923  0006BE  0E03               	movlw	3
  1924  0006C0                     i2u102_47:
  1925  0006C0  2EE8               	decfsz	wreg,f,c
  1926  0006C2  D7FE               	bra	i2u102_47
  1927  0006C4  F000               	nop	
  1928  0006C6  0012               	return		;funcret
  1929  0006C8                     __end_ofi2_LCDout:
  1930                           	opt callstack 0
  1931                           
  1932 ;; *************** function i2_E_TOG *****************
  1933 ;; Defined at:
  1934 ;;		line 23 in file "LCDIO.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1948 ;;      Params:         0       0       0       0
  1949 ;;      Locals:         0       0       0       0
  1950 ;;      Temps:          0       0       0       0
  1951 ;;      Totals:         0       0       0       0
  1952 ;;Total ram usage:        0 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		i2_LCDout
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text16
  1962  000894                     __ptext16:
  1963                           	opt callstack 0
  1964  000894                     i2_E_TOG:
  1965                           	opt callstack 20
  1966                           
  1967                           ;LCDIO.c: 25: LATCbits.LATC0 = 1;
  1968                           
  1969                           ;incstack = 0
  1970  000894  808B               	bsf	3979,0,c	;volatile
  1971                           
  1972                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1973  000896  0E03               	movlw	3
  1974  000898                     i2u103_47:
  1975  000898  2EE8               	decfsz	wreg,f,c
  1976  00089A  D7FE               	bra	i2u103_47
  1977  00089C  F000               	nop	
  1978                           
  1979                           ;LCDIO.c: 27: LATCbits.LATC0 = 0;
  1980  00089E  908B               	bcf	3979,0,c	;volatile
  1981  0008A0  0012               	return		;funcret
  1982  0008A2                     __end_ofi2_E_TOG:
  1983                           	opt callstack 0
  1984                           
  1985                           	psect	rparam
  1986  0000                     
  1987                           	psect	temp
  1988  000037                     btemp:
  1989                           	opt callstack 0
  1990  000037                     	ds	1
  1991  0000                     int$flags	set	btemp
  1992  0000                     wtemp8	set	btemp+1
  1993  0000                     ttemp5	set	btemp+1
  1994  0000                     ttemp6	set	btemp+4
  1995  0000                     ttemp7	set	btemp+8
  1996                           tosu	equ	0xFFF
  1997                           tosh	equ	0xFFE
  1998                           tosl	equ	0xFFD
  1999                           stkptr	equ	0xFFC
  2000                           pclatu	equ	0xFFB
  2001                           pclath	equ	0xFFA
  2002                           pcl	equ	0xFF9
  2003                           tblptru	equ	0xFF8
  2004                           tblptrh	equ	0xFF7
  2005                           tblptrl	equ	0xFF6
  2006                           tablat	equ	0xFF5
  2007                           prodh	equ	0xFF4
  2008                           prodl	equ	0xFF3
  2009                           indf0	equ	0xFEF
  2010                           postinc0	equ	0xFEE
  2011                           postdec0	equ	0xFED
  2012                           preinc0	equ	0xFEC
  2013                           plusw0	equ	0xFEB
  2014                           fsr0h	equ	0xFEA
  2015                           fsr0l	equ	0xFE9
  2016                           wreg	equ	0xFE8
  2017                           indf1	equ	0xFE7
  2018                           postinc1	equ	0xFE6
  2019                           postdec1	equ	0xFE5
  2020                           preinc1	equ	0xFE4
  2021                           plusw1	equ	0xFE3
  2022                           fsr1h	equ	0xFE2
  2023                           fsr1l	equ	0xFE1
  2024                           bsr	equ	0xFE0
  2025                           indf2	equ	0xFDF
  2026                           postinc2	equ	0xFDE
  2027                           postdec2	equ	0xFDD
  2028                           preinc2	equ	0xFDC
  2029                           plusw2	equ	0xFDB
  2030                           fsr2h	equ	0xFDA
  2031                           fsr2l	equ	0xFD9
  2032                           status	equ	0xFD8


Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      54
    BANK0           160      5       5
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    check_RFID@dataBuf	PTR unsigned char  size(2) Largest target is 12
		 -> RFIDbuf(COMRAM[12]), 

    processRFID@RFIDbuf	PTR unsigned char  size(2) Largest target is 12
		 -> RFIDbuf(COMRAM[12]), 

    LCD_String@string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[16]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    S290DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S290DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_check_RFID
    _processRFID->_ClearLCD
    _processRFID->_SetLine
    _ClearLCD->i2_SendLCD
    _check_RFID->_LCD_String
    _SetLine->i2_SendLCD
    _LCD_String->i2_SendLCD
    i2_SendLCD->i2_LCDout

Critical Paths under _main in BANK0

    _setup->_LCD_Init
    _LCD_Init->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1174
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1174
                           _LCD_Init
                          _init_RFID
 ---------------------------------------------------------------------------------
 (2) _init_RFID                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0    1174
                                              4 BANK0      1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (3) _SendLCD                                              2     1      1    1086
                                              2 BANK0      2     1      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (4) _LCDout                                               2     2      0      88
                                              0 BANK0      2     2      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (5) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                  1     1      0       0
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptHandlerHigh                                 9     9      0    3039
                                             30 COMRAM     9     9      0
                         _check_RFID
                        _processRFID
 ---------------------------------------------------------------------------------
 (8) _processRFID                                          6     3      3    1316
                                              5 COMRAM     6     3      3
                           _ClearLCD
                            _SetLine
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) _ClearLCD                                             1     1      0     284
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (8) _check_RFID                                          24    22      2    1700
                                              6 COMRAM    24    22      2
                         _LCD_String
                            _SetLine
 ---------------------------------------------------------------------------------
 (9) _SetLine                                              1     1      0     328
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) _LCD_String                                           2     0      2     481
                                              4 COMRAM     2     0      2
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) i2_SendLCD                                            2     1      1     284
                                              2 COMRAM     2     1      1
                           i2_LCDout
 ---------------------------------------------------------------------------------
 (10) i2_LCDout                                            2     2      0      88
                                              0 COMRAM     2     2      0
                            i2_E_TOG
 ---------------------------------------------------------------------------------
 (11) i2_E_TOG                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _LCD_Init
       _LCDout
         _E_TOG
       _SendLCD
         _LCDout
           _E_TOG
     _init_RFID

 _InterruptHandlerLow (ROOT)

 _InterruptHandlerHigh (ROOT)
   _check_RFID
     _LCD_String
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     _SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
   _processRFID
     _ClearLCD
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     _SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_SendLCD
       i2_LCDout
         i2_E_TOG

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      36       1       57.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       3        0.0%
DATA                 0      0      3B      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Feb 21 15:05:00 2020

                           l27 085A                             bsr 000FE0                    ?_LCD_String 0005  
                          u800 082C                            u810 0832                            u907 0518  
                          u917 0530                            u837 0492                            u927 0544  
                          u847 04A8                            u937 0756                            u785 0746  
                          u857 04BA                            u786 0748                            u947 0768  
                          u867 04C8                            u957 0648                            u877 04D6  
                          u967 088A                            u887 04EA                            u897 04FE  
                          wreg 000FE8                   processRFID@i 0009                   __CFG_LVP$OFF 000000  
                         l1405 0826                           STR_1 0311                           STR_2 0301  
                         _LATB 000F8A                           i2l37 0714                __end_ofi2_E_TOG 08A2  
                         _main 0822                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf1 000FE7                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 0037                           start 0026  
                 ___param_bank 000000                __end_of_SendLCD 0770                __end_of_SetLine 0804  
             __end_of_LCD_Init 054C                          ?_main 0001                          _RCREG 000FAE  
                        _E_TOG 0886               __end_ofi2_LCDout 06C8                          _SPBRG 000FAF  
                        _setup 0856             __size_ofi2_SendLCD 0030                          tablat 000FF5  
           processRFID@RFIDbuf 0006                          ttemp5 0038                          ttemp6 003B  
                        ttemp7 003F                          status 000FD8                          wtemp8 0038  
          __size_of_LCD_String 0036               __end_of_ClearLCD 0856                 __CFG_MCLRE$OFF 000000  
              __initialization 0804                   __end_of_main 083C                 __CFG_OSC$IRCIO 000000  
             LCD_String@string 0005                         ??_main 0029                  __activetblptr 000001  
                       ?_E_TOG 0001                      ??i2_E_TOG 0001                         ?_setup 0001  
                       i2l1301 032A                         i2l1223 07FA                         i2l1233 0792  
                       i2l1313 03AE                         i2l1227 0772                         i2l1219 07E8  
                       i2l1323 045E                         i2l1307 036C                         i2l1255 0566  
                       i2l1275 05A4                         i2l1267 0594                         i2l1287 05C0  
                       _LCDout 05D4                    SendLCD@Byte 0063                         _OSCCON 000FD3  
                       _PTCON0 000F7F                         _PTCON1 000F7E                         _SPBRGH 000FB0  
                       _PTPERH 000F7A                         _PTPERL 000F7B                    SendLCD@type 0062  
                    ??_SendLCD 0029                      ??_SetLine 0005                         clear_0 080A  
            __end_ofi2_SendLCD 07D6                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                   ?_processRFID 0006  
                   __accesstop 0060        __end_of__initialization 0810                      ?_LCD_Init 0001  
                ___rparam_used 000001                    SetLine@line 0005                  __end_of_E_TOG 0894  
                    ?i2_LCDout 0001                 __pcstackCOMRAM 0001                  __end_of_setup 086E  
                 ??_LCD_String 0007                        ??_E_TOG 0029  __size_of_InterruptHandlerHigh 0730  
                    ?_ClearLCD 0001    __end_of_InterruptHandlerLow 0026                     _check_RFID 0322  
                      ??_setup 0029                        ?_LCDout 0001             __size_of_init_RFID 0018  
                   ??_LCD_Init 0064             __end_of_LCD_String 07A6                     ??i2_LCDout 0001  
                   ??_ClearLCD 0005                        _RFIDbuf 002B                        i2_E_TOG 0894  
                      i2u50_40 0590                        i2u60_40 03DC                        i2u52_40 05BC  
                      i2u44_45 07B0                        i2u44_46 07B2                        i2u61_40 03DE  
                      i2u70_40 043A                        i2u62_40 03EC                        i2u71_40 043C  
                      i2u63_40 03EE                        i2u64_40 03FC                        i2u65_40 03FE  
                      i2u57_40 03C2                        i2u66_40 040C                        i2u58_40 03CC  
                      i2u67_40 040E                        i2u59_40 03CE                        i2u68_40 041C  
                      i2u69_40 041E                        i2u97_47 084C                        i2u98_47 07FC  
                      i2u99_47 078C                        _PWMCON0 000F6F                        _PWMCON1 000F6E  
              __size_of_LCDout 007C                        _SendLCD 0738                        __Hparam 0000  
                      _SetLine 07D6                        __Lparam 0000          processRFID@latestChar 0008  
                 __psmallconst 0300                        __pcinit 0804                        __ramtop 0300  
                      __ptext0 0822                        __ptext1 0856                        __ptext2 086E  
                      __ptext3 0472                        __ptext4 0738                        __ptext5 05D4  
                      __ptext6 0886                        __ptext9 054C              __end_of_init_RFID 0886  
             check_RFID@hexBuf 000B                   LCDout@number 0061                    ?_check_RFID 0007  
               __pintcode_body 06C8           end_of_initialization 0810           __size_of_processRFID 0088  
                      int_func 06C8                      _RCSTAbits 000FAB                        postinc0 000FEE  
                   _robot_mode 002A                      i2_SendLCD 07A6                      _TRISAbits 000F92  
                    _TRISCbits 000F94                      _TRISDbits 000F95                 __end_of_LCDout 0650  
                    _TXSTAbits 000FAC              __size_of_LCD_Init 00DA               processRFID@i_941 000B  
            __size_ofi2_LCDout 0078            __size_of_check_RFID 0150                    _BAUDCONbits 000FAA  
                   ?i2_SendLCD 0003            start_initialization 0804              __size_of_ClearLCD 001A  
                     ??_LCDout 0060  InterruptHandlerHigh@RFID_flag 0027   __end_of_InterruptHandlerHigh 0738  
                  __pbssCOMRAM 0029                  __pcstackBANK0 0060                       ?i2_E_TOG 0001  
               i2LCDout@number 0002   __size_of_InterruptHandlerLow 000E                       ?_SendLCD 0062  
                     ?_SetLine 0001                      __pintcode 0008             check_RFID@checksum 001C  
                  __pintcodelo 0018                    __smallconst 0300                 __size_of_E_TOG 000E  
                  ??i2_SendLCD 0004                      _init_RFID 086E                   ??_check_RFID 0009  
               __size_of_setup 0018                check_RFID@byte1 0017                check_RFID@byte2 0018  
              check_RFID@byte3 0019                check_RFID@byte4 001A                check_RFID@byte5 001B  
                     _LCD_Init 0472                       _LATAbits 000F89                       _LATCbits 000F8B  
                     _LATDbits 000F8C                       _PIE1bits 000F9D                       i2u100_47 07BE  
                     i2u101_47 07CE                       i2u102_47 06C0                       i2u103_47 0898  
                     _PIR1bits 000F9E                       i2_LCDout 0650                       _RCONbits 000FD0  
           __end_of_check_RFID 0472           _InterruptHandlerHigh 0008                       _ClearLCD 083C  
                   ?_init_RFID 0001               __size_ofi2_E_TOG 000E                  ??_processRFID 0009  
                i2SendLCD@Byte 0004                  i2SendLCD@type 0003                    check_RFID@i 001D  
                     __Hrparam 0000               __size_of_SendLCD 0038                       __Lrparam 0000  
             __size_of_SetLine 002E                   __Lsmallconst 0300          ?_InterruptHandlerHigh 0001  
            check_RFID@dataBuf 0007                       __ptext10 083C                       __ptext11 0322  
                     __ptext12 07D6                       __ptext13 0770                       __ptext14 07A6  
                     __ptext15 0650                       __ptext16 0894                  __size_of_main 001A  
          __end_of_processRFID 05D4                       int$flags 0037            _InterruptHandlerLow 0018  
                   _LCD_String 0770                     _INTCONbits 000FF2                    ??_init_RFID 0029  
                     intlevel1 0000                       intlevel2 0000           ?_InterruptHandlerLow 0001  
                   _OSCCONbits 000FD3     processRFID@position_in_buf 0029         ??_InterruptHandlerHigh 001F  
                  _processRFID 054C          ??_InterruptHandlerLow 0028  
