

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Feb 18 18:27:34 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           ; Version 2.05
    32                           ; Generated 20/12/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4331 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     _PIE1bits	set	3997
    66  0000                     _RCSTAbits	set	4011
    67  0000                     _TXSTAbits	set	4012
    68  0000                     _BAUDCONbits	set	4010
    69  0000                     _SPBRGH	set	4016
    70  0000                     _SPBRG	set	4015
    71  0000                     _TRISAbits	set	3986
    72  0000                     _TRISDbits	set	3989
    73  0000                     _TRISCbits	set	3988
    74  0000                     _LATAbits	set	3977
    75  0000                     _LATDbits	set	3980
    76  0000                     _LATCbits	set	3979
    77  0000                     _LATB	set	3978
    78  0000                     _PTPERH	set	3962
    79  0000                     _PTPERL	set	3963
    80  0000                     _PWMCON1	set	3950
    81  0000                     _PWMCON0	set	3951
    82  0000                     _PTCON1	set	3966
    83  0000                     _PTCON0	set	3967
    84  0000                     _RCREG	set	4014
    85  0000                     _PIR1bits	set	3998
    86  0000                     _RCONbits	set	4048
    87  0000                     _INTCONbits	set	4082
    88  0000                     _OSCCONbits	set	4051
    89  0000                     _OSCCON	set	4051
    90                           
    91                           	psect	smallconst
    92  000300                     __psmallconst:
    93                           	opt callstack 0
    94  000300  00                 	db	0
    95  000301                     STR_2:
    96  000301  43                 	db	67	;'C'
    97  000302  48                 	db	72	;'H'
    98  000303  45                 	db	69	;'E'
    99  000304  43                 	db	67	;'C'
   100  000305  4B                 	db	75	;'K'
   101  000306  53                 	db	83	;'S'
   102  000307  55                 	db	85	;'U'
   103  000308  4D                 	db	77	;'M'
   104  000309  20                 	db	32
   105  00030A  46                 	db	70	;'F'
   106  00030B  41                 	db	65	;'A'
   107  00030C  49                 	db	73	;'I'
   108  00030D  4C                 	db	76	;'L'
   109  00030E  45                 	db	69	;'E'
   110  00030F  44                 	db	68	;'D'
   111  000310  00                 	db	0
   112  000311                     STR_1:
   113  000311  43                 	db	67	;'C'
   114  000312  48                 	db	72	;'H'
   115  000313  45                 	db	69	;'E'
   116  000314  43                 	db	67	;'C'
   117  000315  4B                 	db	75	;'K'
   118  000316  53                 	db	83	;'S'
   119  000317  55                 	db	85	;'U'
   120  000318  4D                 	db	77	;'M'
   121  000319  20                 	db	32
   122  00031A  50                 	db	80	;'P'
   123  00031B  41                 	db	65	;'A'
   124  00031C  53                 	db	83	;'S'
   125  00031D  53                 	db	83	;'S'
   126  00031E  45                 	db	69	;'E'
   127  00031F  44                 	db	68	;'D'
   128  000320  00                 	db	0
   129  000321                     STR_3:
   130  000321  20                 	db	32
   131  000322  20                 	db	32
   132  000323  00                 	db	0
   133                           
   134                           ; #config settings
   135  000324  00                 	db	0	; dummy byte at the end
   136  0000                     
   137                           	psect	cinit
   138  00082C                     __pcinit:
   139                           	opt callstack 0
   140  00082C                     start_initialization:
   141                           	opt callstack 0
   142  00082C                     __initialization:
   143                           	opt callstack 0
   144                           
   145                           ; Clear objects allocated to COMRAM (13 bytes)
   146  00082C  EE00  F02C         	lfsr	0,__pbssCOMRAM
   147  000830  0E0D               	movlw	13
   148  000832                     clear_0:
   149  000832  6AEE               	clrf	postinc0,c
   150  000834  06E8               	decf	wreg,f,c
   151  000836  E1FD               	bnz	clear_0
   152  000838                     end_of_initialization:
   153                           	opt callstack 0
   154  000838                     __end_of__initialization:
   155                           	opt callstack 0
   156  000838  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   157  00083A  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   158  00083C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   159  00083E  6EF8               	movwf	tblptru,c
   160  000840  0E03               	movlw	high __Lsmallconst
   161  000842  6EF7               	movwf	tblptrh,c
   162  000844  0100               	movlb	0
   163  000846  EF58  F004         	goto	_main	;jump to C main() function
   164                           
   165                           	psect	bssCOMRAM
   166  00002C                     __pbssCOMRAM:
   167                           	opt callstack 0
   168  00002C                     processRFID@position_in_buf:
   169                           	opt callstack 0
   170  00002C                     	ds	1
   171  00002D                     processRFID@RFIDbuf:
   172                           	opt callstack 0
   173  00002D                     	ds	12
   174                           
   175                           	psect	cstackCOMRAM
   176  000001                     __pcstackCOMRAM:
   177                           	opt callstack 0
   178  000001                     ??i2_LCDout:
   179  000001                     ?_check_data:
   180                           	opt callstack 0
   181  000001                     check_data@dataBuf:
   182                           	opt callstack 0
   183                           
   184                           ; 2 bytes @ 0x0
   185  000001                     	ds	1
   186  000002                     i2LCDout@number:
   187                           	opt callstack 0
   188                           
   189                           ; 1 bytes @ 0x1
   190  000002                     	ds	1
   191  000003                     ??_check_data:
   192  000003                     i2SendLCD@type:
   193                           	opt callstack 0
   194                           
   195                           ; 1 bytes @ 0x2
   196  000003                     	ds	1
   197  000004                     i2SendLCD@Byte:
   198                           	opt callstack 0
   199                           
   200                           ; 1 bytes @ 0x3
   201  000004                     	ds	1
   202  000005                     ??_ClearLCD:
   203  000005                     SetLine@line:
   204                           	opt callstack 0
   205  000005                     LCD_String@string:
   206                           	opt callstack 0
   207  000005                     check_data@hexBuf:
   208                           	opt callstack 0
   209                           
   210                           ; 12 bytes @ 0x4
   211  000005                     	ds	2
   212  000007                     
   213                           ; 1 bytes @ 0x6
   214  000007                     	ds	10
   215  000011                     check_data@byte1:
   216                           	opt callstack 0
   217                           
   218                           ; 1 bytes @ 0x10
   219  000011                     	ds	1
   220  000012                     check_data@byte2:
   221                           	opt callstack 0
   222                           
   223                           ; 1 bytes @ 0x11
   224  000012                     	ds	1
   225  000013                     check_data@byte3:
   226                           	opt callstack 0
   227                           
   228                           ; 1 bytes @ 0x12
   229  000013                     	ds	1
   230  000014                     check_data@byte4:
   231                           	opt callstack 0
   232                           
   233                           ; 1 bytes @ 0x13
   234  000014                     	ds	1
   235  000015                     check_data@byte5:
   236                           	opt callstack 0
   237                           
   238                           ; 1 bytes @ 0x14
   239  000015                     	ds	1
   240  000016                     check_data@checksum:
   241                           	opt callstack 0
   242                           
   243                           ; 1 bytes @ 0x15
   244  000016                     	ds	1
   245  000017                     check_data@i:
   246                           	opt callstack 0
   247                           
   248                           ; 2 bytes @ 0x16
   249  000017                     	ds	2
   250  000019                     processRFID@latestChar:
   251                           	opt callstack 0
   252                           
   253                           ; 1 bytes @ 0x18
   254  000019                     	ds	1
   255  00001A                     processRFID@i:
   256                           	opt callstack 0
   257                           
   258                           ; 2 bytes @ 0x19
   259  00001A                     	ds	2
   260  00001C                     processRFID@i_940:
   261                           	opt callstack 0
   262                           
   263                           ; 2 bytes @ 0x1B
   264  00001C                     	ds	2
   265  00001E                     ??_InterruptHandlerHigh:
   266                           
   267                           ; 1 bytes @ 0x1D
   268  00001E                     	ds	8
   269  000026                     ??_InterruptHandlerLow:
   270                           
   271                           ; 1 bytes @ 0x25
   272  000026                     	ds	1
   273  000027                     ??_LCDout:
   274                           
   275                           ; 1 bytes @ 0x26
   276  000027                     	ds	1
   277  000028                     LCDout@number:
   278                           	opt callstack 0
   279                           
   280                           ; 1 bytes @ 0x27
   281  000028                     	ds	1
   282  000029                     SendLCD@type:
   283                           	opt callstack 0
   284                           
   285                           ; 1 bytes @ 0x28
   286  000029                     	ds	1
   287  00002A                     SendLCD@Byte:
   288                           	opt callstack 0
   289                           
   290                           ; 1 bytes @ 0x29
   291  00002A                     	ds	1
   292  00002B                     ??_LCD_Init:
   293                           
   294                           ; 1 bytes @ 0x2A
   295  00002B                     	ds	1
   296  00002C                     
   297                           ; 1 bytes @ 0x2B
   298 ;;
   299 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   300 ;;
   301 ;; *************** function _main *****************
   302 ;; Defined at:
   303 ;;		line 60 in file "main.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   317 ;;      Params:         0       0       0       0
   318 ;;      Locals:         0       0       0       0
   319 ;;      Temps:          0       0       0       0
   320 ;;      Totals:         0       0       0       0
   321 ;;Total ram usage:        0 bytes
   322 ;; Hardware stack levels required when called:   12
   323 ;; This function calls:
   324 ;;		_setup
   325 ;; This function is called by:
   326 ;;		Startup code after reset
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           	psect	text0
   331  0008B0                     __ptext0:
   332                           	opt callstack 0
   333  0008B0                     _main:
   334                           	opt callstack 19
   335                           
   336                           ;main.c: 63:   setup();
   337                           
   338                           ;incstack = 0
   339  0008B0  EC32  F004         	call	_setup	;wreg free
   340  0008B4                     l40:
   341                           
   342                           ;main.c: 69:   }
   343  0008B4  D7FF               	goto	l40
   344  0008B6                     __end_of_main:
   345                           	opt callstack 0
   346                           
   347 ;; *************** function _setup *****************
   348 ;; Defined at:
   349 ;;		line 26 in file "main.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   363 ;;      Params:         0       0       0       0
   364 ;;      Locals:         0       0       0       0
   365 ;;      Temps:          0       0       0       0
   366 ;;      Totals:         0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels used:    1
   369 ;; Hardware stack levels required when called:   11
   370 ;; This function calls:
   371 ;;		_LCD_Init
   372 ;;		_init_RFID
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text1
   379  000864                     __ptext1:
   380                           	opt callstack 0
   381  000864                     _setup:
   382                           	opt callstack 19
   383                           
   384                           ;main.c: 29:     OSCCON = 0x72;
   385                           
   386                           ;incstack = 0
   387  000864  0E72               	movlw	114
   388  000866  6ED3               	movwf	4051,c	;volatile
   389  000868                     l21:
   390  000868  A4D3               	btfss	4051,2,c	;volatile
   391  00086A  D7FE               	goto	l21
   392                           
   393                           ;main.c: 31:     INTCONbits.GIEH = 1;
   394  00086C  8EF2               	bsf	4082,7,c	;volatile
   395                           
   396                           ;main.c: 32:     INTCONbits.GIEL = 1;
   397  00086E  8CF2               	bsf	4082,6,c	;volatile
   398                           
   399                           ;main.c: 33:     RCONbits.IPEN=1;
   400  000870  8ED0               	bsf	4048,7,c	;volatile
   401                           
   402                           ;main.c: 35:     LCD_Init();
   403  000872  ECB1  F002         	call	_LCD_Init	;wreg free
   404                           
   405                           ;main.c: 36:     init_RFID();
   406  000876  EC3E  F004         	call	_init_RFID	;wreg free
   407  00087A  0012               	return		;funcret
   408  00087C                     __end_of_setup:
   409                           	opt callstack 0
   410                           
   411 ;; *************** function _init_RFID *****************
   412 ;; Defined at:
   413 ;;		line 12 in file "RFID.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   427 ;;      Params:         0       0       0       0
   428 ;;      Locals:         0       0       0       0
   429 ;;      Temps:          0       0       0       0
   430 ;;      Totals:         0       0       0       0
   431 ;;Total ram usage:        0 bytes
   432 ;; Hardware stack levels used:    1
   433 ;; Hardware stack levels required when called:    7
   434 ;; This function calls:
   435 ;;		Nothing
   436 ;; This function is called by:
   437 ;;		_setup
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text2
   442  00087C                     __ptext2:
   443                           	opt callstack 0
   444  00087C                     _init_RFID:
   445                           	opt callstack 22
   446                           
   447                           ;RFID.c: 15:     TRISCbits.RC7 = 1;
   448                           
   449                           ;incstack = 0
   450  00087C  8E94               	bsf	3988,7,c	;volatile
   451                           
   452                           ;RFID.c: 18:     SPBRG = 203;
   453  00087E  0ECB               	movlw	203
   454  000880  6EAF               	movwf	4015,c	;volatile
   455                           
   456                           ;RFID.c: 19:     SPBRGH = 0;
   457  000882  0E00               	movlw	0
   458  000884  6EB0               	movwf	4016,c	;volatile
   459                           
   460                           ;RFID.c: 21:     BAUDCONbits.BRG16=1;
   461  000886  86AA               	bsf	4010,3,c	;volatile
   462                           
   463                           ;RFID.c: 22:     TXSTAbits.BRGH = 1;
   464  000888  84AC               	bsf	4012,2,c	;volatile
   465                           
   466                           ;RFID.c: 23:     RCSTAbits.CREN = 1;
   467  00088A  88AB               	bsf	4011,4,c	;volatile
   468                           
   469                           ;RFID.c: 24:     RCSTAbits.SPEN = 1;
   470  00088C  8EAB               	bsf	4011,7,c	;volatile
   471                           
   472                           ;RFID.c: 25:     TXSTAbits.TXEN = 1;
   473  00088E  8AAC               	bsf	4012,5,c	;volatile
   474                           
   475                           ;RFID.c: 27:     PIE1bits.RC1IE = 1;
   476  000890  8A9D               	bsf	3997,5,c	;volatile
   477  000892  0012               	return		;funcret
   478  000894                     __end_of_init_RFID:
   479                           	opt callstack 0
   480                           
   481 ;; *************** function _LCD_Init *****************
   482 ;; Defined at:
   483 ;;		line 56 in file "LCDIO.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   497 ;;      Params:         0       0       0       0
   498 ;;      Locals:         0       0       0       0
   499 ;;      Temps:          1       0       0       0
   500 ;;      Totals:         1       0       0       0
   501 ;;Total ram usage:        1 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; Hardware stack levels required when called:   10
   504 ;; This function calls:
   505 ;;		_LCDout
   506 ;;		_SendLCD
   507 ;; This function is called by:
   508 ;;		_setup
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text3
   513  000562                     __ptext3:
   514                           	opt callstack 0
   515  000562                     _LCD_Init:
   516                           	opt callstack 19
   517                           
   518                           ;LCDIO.c: 59:  TRISCbits.RC0 = 0;
   519                           
   520                           ;incstack = 0
   521  000562  9094               	bcf	3988,0,c	;volatile
   522                           
   523                           ;LCDIO.c: 60:  TRISCbits.RC1 = 0;
   524  000564  9294               	bcf	3988,1,c	;volatile
   525                           
   526                           ;LCDIO.c: 61:  TRISCbits.RC2 = 0;
   527  000566  9494               	bcf	3988,2,c	;volatile
   528                           
   529                           ;LCDIO.c: 62:  TRISDbits.RD0 = 0;
   530  000568  9095               	bcf	3989,0,c	;volatile
   531                           
   532                           ;LCDIO.c: 63:  TRISDbits.RD1 = 0;
   533  00056A  9295               	bcf	3989,1,c	;volatile
   534                           
   535                           ;LCDIO.c: 64:  TRISAbits.RA6 = 0;
   536  00056C  9C92               	bcf	3986,6,c	;volatile
   537                           
   538                           ;LCDIO.c: 67:  LATDbits.LATD0 = 0;
   539  00056E  908C               	bcf	3980,0,c	;volatile
   540                           
   541                           ;LCDIO.c: 68:  LATDbits.LATD1 = 0;
   542  000570  928C               	bcf	3980,1,c	;volatile
   543                           
   544                           ;LCDIO.c: 69:  LATCbits.LATC2 = 0;
   545  000572  948B               	bcf	3979,2,c	;volatile
   546                           
   547                           ;LCDIO.c: 70:  LATCbits.LATC1 = 0;
   548  000574  928B               	bcf	3979,1,c	;volatile
   549                           
   550                           ;LCDIO.c: 71:  LATCbits.LATC0 = 0;
   551  000576  908B               	bcf	3979,0,c	;volatile
   552                           
   553                           ;LCDIO.c: 72:  LATAbits.LATA6 = 0;
   554  000578  9C89               	bcf	3977,6,c	;volatile
   555                           
   556                           ;LCDIO.c: 75:  _delay((unsigned long)((15)*(8000000/4000.0)));
   557  00057A  0E27               	movlw	39
   558  00057C  6E2B               	movwf	??_LCD_Init& (0+255),c
   559  00057E  0EF5               	movlw	245
   560  000580                     u727:
   561  000580  2EE8               	decfsz	wreg,f,c
   562  000582  D7FE               	bra	u727
   563  000584  2E2B               	decfsz	??_LCD_Init& (0+255),f,c
   564  000586  D7FC               	bra	u727
   565  000588  F000               	nop	
   566                           
   567                           ;LCDIO.c: 76:  LCDout(0b0011);
   568  00058A  0E03               	movlw	3
   569  00058C  EC15  F003         	call	_LCDout
   570                           
   571                           ;LCDIO.c: 77:  _delay((unsigned long)((5)*(8000000/4000.0)));
   572  000590  0E0D               	movlw	13
   573  000592  6E2B               	movwf	??_LCD_Init& (0+255),c
   574  000594  0EFC               	movlw	252
   575  000596                     u737:
   576  000596  2EE8               	decfsz	wreg,f,c
   577  000598  D7FE               	bra	u737
   578  00059A  2E2B               	decfsz	??_LCD_Init& (0+255),f,c
   579  00059C  D7FC               	bra	u737
   580                           
   581                           ;LCDIO.c: 78:  LCDout(0b0011);
   582  00059E  0E03               	movlw	3
   583  0005A0  EC15  F003         	call	_LCDout
   584                           
   585                           ;LCDIO.c: 79:  _delay((unsigned long)((200)*(8000000/4000000.0)));
   586  0005A4  0E85               	movlw	133
   587  0005A6                     u747:
   588  0005A6  2EE8               	decfsz	wreg,f,c
   589  0005A8  D7FE               	bra	u747
   590  0005AA  F000               	nop	
   591                           
   592                           ;LCDIO.c: 80:  LCDout(0b0011);
   593  0005AC  0E03               	movlw	3
   594  0005AE  EC15  F003         	call	_LCDout
   595                           
   596                           ;LCDIO.c: 81:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   597  0005B2  0E21               	movlw	33
   598  0005B4                     u757:
   599  0005B4  2EE8               	decfsz	wreg,f,c
   600  0005B6  D7FE               	bra	u757
   601  0005B8  F000               	nop	
   602                           
   603                           ;LCDIO.c: 82:  LCDout(0b0010);
   604  0005BA  0E02               	movlw	2
   605  0005BC  EC15  F003         	call	_LCDout
   606                           
   607                           ;LCDIO.c: 83:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   608  0005C0  0E21               	movlw	33
   609  0005C2                     u767:
   610  0005C2  2EE8               	decfsz	wreg,f,c
   611  0005C4  D7FE               	bra	u767
   612  0005C6  F000               	nop	
   613                           
   614                           ;LCDIO.c: 86:  SendLCD(0b00101000,0);
   615  0005C8  0E00               	movlw	0
   616  0005CA  6E29               	movwf	SendLCD@type,c
   617  0005CC  0E28               	movlw	40
   618  0005CE  ECCF  F003         	call	_SendLCD
   619                           
   620                           ;LCDIO.c: 87:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   621  0005D2  0E21               	movlw	33
   622  0005D4                     u777:
   623  0005D4  2EE8               	decfsz	wreg,f,c
   624  0005D6  D7FE               	bra	u777
   625  0005D8  F000               	nop	
   626                           
   627                           ;LCDIO.c: 90:  SendLCD(0b00001000,0);
   628  0005DA  0E00               	movlw	0
   629  0005DC  6E29               	movwf	SendLCD@type,c
   630  0005DE  0E08               	movlw	8
   631  0005E0  ECCF  F003         	call	_SendLCD
   632                           
   633                           ;LCDIO.c: 91:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   634  0005E4  0E21               	movlw	33
   635  0005E6                     u787:
   636  0005E6  2EE8               	decfsz	wreg,f,c
   637  0005E8  D7FE               	bra	u787
   638  0005EA  F000               	nop	
   639                           
   640                           ;LCDIO.c: 94:  SendLCD(0b00000001,0);
   641  0005EC  0E00               	movlw	0
   642  0005EE  6E29               	movwf	SendLCD@type,c
   643  0005F0  0E01               	movlw	1
   644  0005F2  ECCF  F003         	call	_SendLCD
   645                           
   646                           ;LCDIO.c: 95:  _delay((unsigned long)((5)*(8000000/4000.0)));
   647  0005F6  0E0D               	movlw	13
   648  0005F8  6E2B               	movwf	??_LCD_Init& (0+255),c
   649  0005FA  0EFC               	movlw	252
   650  0005FC                     u797:
   651  0005FC  2EE8               	decfsz	wreg,f,c
   652  0005FE  D7FE               	bra	u797
   653  000600  2E2B               	decfsz	??_LCD_Init& (0+255),f,c
   654  000602  D7FC               	bra	u797
   655                           
   656                           ;LCDIO.c: 98:  SendLCD(0b00000110,0);
   657  000604  0E00               	movlw	0
   658  000606  6E29               	movwf	SendLCD@type,c
   659  000608  0E06               	movlw	6
   660  00060A  ECCF  F003         	call	_SendLCD
   661                           
   662                           ;LCDIO.c: 99:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   663  00060E  0E21               	movlw	33
   664  000610                     u807:
   665  000610  2EE8               	decfsz	wreg,f,c
   666  000612  D7FE               	bra	u807
   667  000614  F000               	nop	
   668                           
   669                           ;LCDIO.c: 102:  SendLCD(0b00001100,0);
   670  000616  0E00               	movlw	0
   671  000618  6E29               	movwf	SendLCD@type,c
   672  00061A  0E0C               	movlw	12
   673  00061C  ECCF  F003         	call	_SendLCD
   674                           
   675                           ;LCDIO.c: 103:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   676  000620  0E21               	movlw	33
   677  000622                     u817:
   678  000622  2EE8               	decfsz	wreg,f,c
   679  000624  D7FE               	bra	u817
   680  000626  F000               	nop	
   681  000628  0012               	return		;funcret
   682  00062A                     __end_of_LCD_Init:
   683                           	opt callstack 0
   684                           
   685 ;; *************** function _SendLCD *****************
   686 ;; Defined at:
   687 ;;		line 44 in file "LCDIO.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  Byte            1    wreg     unsigned char 
   690 ;;  type            1   40[COMRAM] unsigned char 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  Byte            1   41[COMRAM] unsigned char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   702 ;;      Params:         1       0       0       0
   703 ;;      Locals:         1       0       0       0
   704 ;;      Temps:          0       0       0       0
   705 ;;      Totals:         2       0       0       0
   706 ;;Total ram usage:        2 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    9
   709 ;; This function calls:
   710 ;;		_LCDout
   711 ;; This function is called by:
   712 ;;		_LCD_Init
   713 ;;		_ShiftLeft
   714 ;;		_ShiftRight
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text4
   719  00079E                     __ptext4:
   720                           	opt callstack 0
   721  00079E                     _SendLCD:
   722                           	opt callstack 19
   723                           
   724                           ;incstack = 0
   725                           ;SendLCD@Byte stored from wreg
   726  00079E  6E2A               	movwf	SendLCD@Byte,c
   727                           
   728                           ;LCDIO.c: 47:  LATAbits.LATA6 = type;
   729  0007A0  B029               	btfsc	SendLCD@type,0,c
   730  0007A2  D002               	bra	u405
   731  0007A4  9C89               	bcf	3977,6,c	;volatile
   732  0007A6  D001               	bra	u406
   733  0007A8                     u405:
   734  0007A8  8C89               	bsf	3977,6,c	;volatile
   735  0007AA                     u406:
   736                           
   737                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
   738  0007AA  382A               	swapf	SendLCD@Byte,w,c
   739  0007AC  0B0F               	andlw	15
   740  0007AE  0B0F               	andlw	15
   741  0007B0  EC15  F003         	call	_LCDout
   742                           
   743                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
   744  0007B4  0E06               	movlw	6
   745  0007B6                     u827:
   746  0007B6  2EE8               	decfsz	wreg,f,c
   747  0007B8  D7FE               	bra	u827
   748  0007BA  D000               	nop2	
   749                           
   750                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
   751  0007BC  502A               	movf	SendLCD@Byte,w,c
   752  0007BE  0B0F               	andlw	15
   753  0007C0  EC15  F003         	call	_LCDout
   754                           
   755                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   756  0007C4  0E21               	movlw	33
   757  0007C6                     u837:
   758  0007C6  2EE8               	decfsz	wreg,f,c
   759  0007C8  D7FE               	bra	u837
   760  0007CA  F000               	nop	
   761  0007CC  0012               	return		;funcret
   762  0007CE                     __end_of_SendLCD:
   763                           	opt callstack 0
   764                           
   765 ;; *************** function _LCDout *****************
   766 ;; Defined at:
   767 ;;		line 31 in file "LCDIO.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  number          1    wreg     unsigned char 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  number          1   39[COMRAM] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   781 ;;      Params:         0       0       0       0
   782 ;;      Locals:         1       0       0       0
   783 ;;      Temps:          1       0       0       0
   784 ;;      Totals:         2       0       0       0
   785 ;;Total ram usage:        2 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    8
   788 ;; This function calls:
   789 ;;		_E_TOG
   790 ;; This function is called by:
   791 ;;		_SendLCD
   792 ;;		_LCD_Init
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text5
   797  00062A                     __ptext5:
   798                           	opt callstack 0
   799  00062A                     _LCDout:
   800                           	opt callstack 19
   801                           
   802                           ;incstack = 0
   803                           ;LCDout@number stored from wreg
   804  00062A  6E28               	movwf	LCDout@number,c
   805                           
   806                           ;LCDIO.c: 33:  LATCbits.LATC1 = (0b0001 & number);
   807  00062C  C028  F027         	movff	LCDout@number,??_LCDout
   808  000630  0E01               	movlw	1
   809  000632  1627               	andwf	??_LCDout,f,c
   810  000634  4627               	rlncf	??_LCDout,f,c
   811  000636  508B               	movf	3979,w,c	;volatile
   812  000638  1827               	xorwf	??_LCDout,w,c
   813  00063A  0BFD               	andlw	-3
   814  00063C  1827               	xorwf	??_LCDout,w,c
   815  00063E  6E8B               	movwf	3979,c	;volatile
   816                           
   817                           ;LCDIO.c: 34:  LATCbits.LATC2 = (0b0010 & number) >> 1;
   818  000640  C028  F027         	movff	LCDout@number,??_LCDout
   819  000644  90D8               	bcf	status,0,c
   820  000646  3227               	rrcf	??_LCDout,f,c
   821  000648  0E01               	movlw	1
   822  00064A  1627               	andwf	??_LCDout,f,c
   823  00064C  4627               	rlncf	??_LCDout,f,c
   824  00064E  4627               	rlncf	??_LCDout,f,c
   825  000650  508B               	movf	3979,w,c	;volatile
   826  000652  1827               	xorwf	??_LCDout,w,c
   827  000654  0BFB               	andlw	-5
   828  000656  1827               	xorwf	??_LCDout,w,c
   829  000658  6E8B               	movwf	3979,c	;volatile
   830                           
   831                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
   832  00065A  C028  F027         	movff	LCDout@number,??_LCDout
   833  00065E  90D8               	bcf	status,0,c
   834  000660  3227               	rrcf	??_LCDout,f,c
   835  000662  90D8               	bcf	status,0,c
   836  000664  3227               	rrcf	??_LCDout,f,c
   837  000666  0E01               	movlw	1
   838  000668  1627               	andwf	??_LCDout,f,c
   839  00066A  508C               	movf	3980,w,c	;volatile
   840  00066C  1827               	xorwf	??_LCDout,w,c
   841  00066E  0BFE               	andlw	-2
   842  000670  1827               	xorwf	??_LCDout,w,c
   843  000672  6E8C               	movwf	3980,c	;volatile
   844                           
   845                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
   846  000674  C028  F027         	movff	LCDout@number,??_LCDout
   847  000678  90D8               	bcf	status,0,c
   848  00067A  3227               	rrcf	??_LCDout,f,c
   849  00067C  90D8               	bcf	status,0,c
   850  00067E  3227               	rrcf	??_LCDout,f,c
   851  000680  90D8               	bcf	status,0,c
   852  000682  3227               	rrcf	??_LCDout,f,c
   853  000684  0E01               	movlw	1
   854  000686  1627               	andwf	??_LCDout,f,c
   855  000688  4627               	rlncf	??_LCDout,f,c
   856  00068A  508C               	movf	3980,w,c	;volatile
   857  00068C  1827               	xorwf	??_LCDout,w,c
   858  00068E  0BFD               	andlw	-3
   859  000690  1827               	xorwf	??_LCDout,w,c
   860  000692  6E8C               	movwf	3980,c	;volatile
   861                           
   862                           ;LCDIO.c: 39:  E_TOG();
   863  000694  EC4A  F004         	call	_E_TOG	;wreg free
   864                           
   865                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
   866  000698  0E03               	movlw	3
   867  00069A                     u847:
   868  00069A  2EE8               	decfsz	wreg,f,c
   869  00069C  D7FE               	bra	u847
   870  00069E  F000               	nop	
   871  0006A0  0012               	return		;funcret
   872  0006A2                     __end_of_LCDout:
   873                           	opt callstack 0
   874                           
   875 ;; *************** function _E_TOG *****************
   876 ;; Defined at:
   877 ;;		line 23 in file "LCDIO.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   891 ;;      Params:         0       0       0       0
   892 ;;      Locals:         0       0       0       0
   893 ;;      Temps:          0       0       0       0
   894 ;;      Totals:         0       0       0       0
   895 ;;Total ram usage:        0 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    7
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_LCDout
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text6
   906  000894                     __ptext6:
   907                           	opt callstack 0
   908  000894                     _E_TOG:
   909                           	opt callstack 19
   910                           
   911                           ;LCDIO.c: 25: LATCbits.LATC0 = 1;
   912                           
   913                           ;incstack = 0
   914  000894  808B               	bsf	3979,0,c	;volatile
   915                           
   916                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
   917  000896  0E03               	movlw	3
   918  000898                     u857:
   919  000898  2EE8               	decfsz	wreg,f,c
   920  00089A  D7FE               	bra	u857
   921  00089C  F000               	nop	
   922                           
   923                           ;LCDIO.c: 27: LATCbits.LATC0 = 0;
   924  00089E  908B               	bcf	3979,0,c	;volatile
   925  0008A0  0012               	return		;funcret
   926  0008A2                     __end_of_E_TOG:
   927                           	opt callstack 0
   928                           
   929 ;; *************** function _InterruptHandlerLow *****************
   930 ;; Defined at:
   931 ;;		line 54 in file "main.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		None
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   945 ;;      Params:         0       0       0       0
   946 ;;      Locals:         0       0       0       0
   947 ;;      Temps:          1       0       0       0
   948 ;;      Totals:         1       0       0       0
   949 ;;Total ram usage:        1 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    6
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		Interrupt level 1
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	intcodelo
   960  000018                     __pintcodelo:
   961                           	opt callstack 0
   962  000018                     _InterruptHandlerLow:
   963                           	opt callstack 19
   964                           
   965                           ;incstack = 0
   966  000018  8039               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   967  00001A  CFE0 F026          	movff	bsr,??_InterruptHandlerLow
   968  00001E  C026  FFE0         	movff	??_InterruptHandlerLow,bsr
   969  000022  9039               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   970  000024  0010               	retfie	
   971  000026                     __end_of_InterruptHandlerLow:
   972                           	opt callstack 0
   973                           
   974 ;; *************** function _InterruptHandlerHigh *****************
   975 ;; Defined at:
   976 ;;		line 40 in file "main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   990 ;;      Params:         0       0       0       0
   991 ;;      Locals:         0       0       0       0
   992 ;;      Temps:          8       0       0       0
   993 ;;      Totals:         8       0       0       0
   994 ;;Total ram usage:        8 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    5
   997 ;; This function calls:
   998 ;;		_processRFID
   999 ;; This function is called by:
  1000 ;;		Interrupt level 2
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	intcode
  1005  000008                     __pintcode:
  1006                           	opt callstack 0
  1007  000008                     _InterruptHandlerHigh:
  1008                           	opt callstack 19
  1009                           
  1010                           ;incstack = 0
  1011  000008  8239               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1012  00000A  EF8D  F003         	goto	int_func
  1013                           
  1014                           	psect	intcode_body
  1015  00071A                     __pintcode_body:
  1016                           	opt callstack 19
  1017  00071A                     int_func:
  1018                           	opt callstack 19
  1019  00071A  CFE1 F01E          	movff	fsr1l,??_InterruptHandlerHigh
  1020  00071E  CFE2 F01F          	movff	fsr1h,??_InterruptHandlerHigh+1
  1021  000722  CFD9 F020          	movff	fsr2l,??_InterruptHandlerHigh+2
  1022  000726  CFDA F021          	movff	fsr2h,??_InterruptHandlerHigh+3
  1023  00072A  CFF6 F022          	movff	tblptrl,??_InterruptHandlerHigh+4
  1024  00072E  CFF7 F023          	movff	tblptrh,??_InterruptHandlerHigh+5
  1025  000732  CFF8 F024          	movff	tblptru,??_InterruptHandlerHigh+6
  1026  000736  CFF5 F025          	movff	tablat,??_InterruptHandlerHigh+7
  1027                           
  1028                           ;main.c: 43:     if(PIR1bits.RCIF)
  1029  00073A  AA9E               	btfss	3998,5,c	;volatile
  1030  00073C  D003               	goto	i2l30
  1031                           
  1032                           ;main.c: 44:     {;main.c: 46:         processRFID(RCREG);
  1033  00073E  50AE               	movf	4014,w,c	;volatile
  1034  000740  EC31  F002         	call	_processRFID
  1035  000744                     i2l30:
  1036  000744  C025  FFF5         	movff	??_InterruptHandlerHigh+7,tablat
  1037  000748  C024  FFF8         	movff	??_InterruptHandlerHigh+6,tblptru
  1038  00074C  C023  FFF7         	movff	??_InterruptHandlerHigh+5,tblptrh
  1039  000750  C022  FFF6         	movff	??_InterruptHandlerHigh+4,tblptrl
  1040  000754  C021  FFDA         	movff	??_InterruptHandlerHigh+3,fsr2h
  1041  000758  C020  FFD9         	movff	??_InterruptHandlerHigh+2,fsr2l
  1042  00075C  C01F  FFE2         	movff	??_InterruptHandlerHigh+1,fsr1h
  1043  000760  C01E  FFE1         	movff	??_InterruptHandlerHigh,fsr1l
  1044  000764  9239               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1045  000766  0011               	retfie		f
  1046  000768                     __end_of_InterruptHandlerHigh:
  1047                           	opt callstack 0
  1048                           
  1049 ;; *************** function _processRFID *****************
  1050 ;; Defined at:
  1051 ;;		line 31 in file "RFID.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  latestChar      1    wreg     unsigned char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  latestChar      1   24[COMRAM] unsigned char 
  1056 ;;  i               2   27[COMRAM] int 
  1057 ;;  i               2   25[COMRAM] int 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1067 ;;      Params:         0       0       0       0
  1068 ;;      Locals:         5       0       0       0
  1069 ;;      Temps:          0       0       0       0
  1070 ;;      Totals:         5       0       0       0
  1071 ;;Total ram usage:        5 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    4
  1074 ;; This function calls:
  1075 ;;		_ClearLCD
  1076 ;;		_LCD_String
  1077 ;;		_SetLine
  1078 ;;		_check_data
  1079 ;;		i2_SendLCD
  1080 ;; This function is called by:
  1081 ;;		_InterruptHandlerHigh
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text9
  1086  000462                     __ptext9:
  1087                           	opt callstack 0
  1088  000462                     _processRFID:
  1089                           	opt callstack 19
  1090                           
  1091                           ;incstack = 0
  1092                           ;processRFID@latestChar stored from wreg
  1093  000462  6E19               	movwf	processRFID@latestChar,c
  1094                           
  1095                           ;RFID.c: 31: void processRFID(char latestChar);RFID.c: 32: {;RFID.c: 35:     static char
      +                           RFIDbuf[12];;RFID.c: 36:     static char position_in_buf;;RFID.c: 39:     if(latestChar
      +                           == 0x03)
  1096  000464  0E03               	movlw	3
  1097  000466  1819               	xorwf	processRFID@latestChar,w,c
  1098  000468  A4D8               	btfss	status,2,c
  1099  00046A  D06A               	goto	i2l1309
  1100                           
  1101                           ;RFID.c: 40:     {;RFID.c: 41:         if(check_data(RFIDbuf) == 1)
  1102  00046C  0E2D               	movlw	low processRFID@RFIDbuf
  1103  00046E  6E01               	movwf	check_data@dataBuf,c
  1104  000470  0E00               	movlw	high processRFID@RFIDbuf
  1105  000472  6E02               	movwf	check_data@dataBuf+1,c
  1106  000474  EC93  F001         	call	_check_data	;wreg free
  1107  000478  0401               	decf	?_check_data,w,c
  1108  00047A  1002               	iorwf	?_check_data+1,w,c
  1109  00047C  A4D8               	btfss	status,2,c
  1110  00047E  D028               	goto	i2l1285
  1111                           
  1112                           ;RFID.c: 42:         {;RFID.c: 44:             ClearLCD();
  1113  000480  EC25  F004         	call	_ClearLCD	;wreg free
  1114                           
  1115                           ;RFID.c: 45:             SetLine(1);
  1116  000484  0E01               	movlw	1
  1117  000486  ECFF  F003         	call	_SetLine
  1118                           
  1119                           ;RFID.c: 46:             LCD_String("CHECKSUM PASSED");
  1120  00048A  0E11               	movlw	low STR_1
  1121  00048C  6E05               	movwf	LCD_String@string,c
  1122  00048E  0E03               	movlw	high STR_1
  1123  000490  6E06               	movwf	LCD_String@string+1,c
  1124  000492  ECB4  F003         	call	_LCD_String	;wreg free
  1125                           
  1126                           ;RFID.c: 47:             SetLine(2);
  1127  000496  0E02               	movlw	2
  1128  000498  ECFF  F003         	call	_SetLine
  1129                           
  1130                           ;RFID.c: 48:             for(int i=0;i<10;i++)
  1131  00049C  0E00               	movlw	0
  1132  00049E  6E1B               	movwf	processRFID@i+1,c
  1133  0004A0  0E00               	movlw	0
  1134  0004A2  6E1A               	movwf	processRFID@i,c
  1135  0004A4                     i2l1279:
  1136                           
  1137                           ;RFID.c: 49:             {;RFID.c: 50:                 SendLCD(RFIDbuf[i],1);
  1138  0004A4  0E01               	movlw	1
  1139  0004A6  6E03               	movwf	i2SendLCD@type,c
  1140  0004A8  0E2D               	movlw	low processRFID@RFIDbuf
  1141  0004AA  241A               	addwf	processRFID@i,w,c
  1142  0004AC  6ED9               	movwf	fsr2l,c
  1143  0004AE  0E00               	movlw	high processRFID@RFIDbuf
  1144  0004B0  201B               	addwfc	processRFID@i+1,w,c
  1145  0004B2  6EDA               	movwf	fsr2h,c
  1146  0004B4  50DF               	movf	indf2,w,c
  1147  0004B6  ECE7  F003         	call	i2_SendLCD
  1148                           
  1149                           ;RFID.c: 51:             }
  1150  0004BA  4A1A               	infsnz	processRFID@i,f,c
  1151  0004BC  2A1B               	incf	processRFID@i+1,f,c
  1152  0004BE  BE1B               	btfsc	processRFID@i+1,7,c
  1153  0004C0  D7F1               	goto	i2l1279
  1154  0004C2  501B               	movf	processRFID@i+1,w,c
  1155  0004C4  E14D               	bnz	i2l185
  1156  0004C6  0E0A               	movlw	10
  1157  0004C8  5C1A               	subwf	processRFID@i,w,c
  1158  0004CA  B0D8               	btfsc	status,0,c
  1159  0004CC  0012               	return	
  1160  0004CE  D7EA               	goto	i2l1279
  1161  0004D0                     i2l1285:
  1162                           
  1163                           ;RFID.c: 54:         {;RFID.c: 57:             ClearLCD();
  1164  0004D0  EC25  F004         	call	_ClearLCD	;wreg free
  1165                           
  1166                           ;RFID.c: 58:             SetLine(1);
  1167  0004D4  0E01               	movlw	1
  1168  0004D6  ECFF  F003         	call	_SetLine
  1169                           
  1170                           ;RFID.c: 59:             LCD_String("CHECKSUM FAILED");
  1171  0004DA  0E01               	movlw	low STR_2
  1172  0004DC  6E05               	movwf	LCD_String@string,c
  1173  0004DE  0E03               	movlw	high STR_2
  1174  0004E0  6E06               	movwf	LCD_String@string+1,c
  1175  0004E2  ECB4  F003         	call	_LCD_String	;wreg free
  1176                           
  1177                           ;RFID.c: 60:             SetLine(2);
  1178  0004E6  0E02               	movlw	2
  1179  0004E8  ECFF  F003         	call	_SetLine
  1180                           
  1181                           ;RFID.c: 61:             for(int i=0;i<10;i++)
  1182  0004EC  0E00               	movlw	0
  1183  0004EE  6E1D               	movwf	processRFID@i_940+1,c
  1184  0004F0  0E00               	movlw	0
  1185  0004F2  6E1C               	movwf	processRFID@i_940,c
  1186  0004F4                     i2l1297:
  1187                           
  1188                           ;RFID.c: 62:             {;RFID.c: 63:                  SendLCD(RFIDbuf[i],1);
  1189  0004F4  0E01               	movlw	1
  1190  0004F6  6E03               	movwf	i2SendLCD@type,c
  1191  0004F8  0E2D               	movlw	low processRFID@RFIDbuf
  1192  0004FA  241C               	addwf	processRFID@i_940,w,c
  1193  0004FC  6ED9               	movwf	fsr2l,c
  1194  0004FE  0E00               	movlw	high processRFID@RFIDbuf
  1195  000500  201D               	addwfc	processRFID@i_940+1,w,c
  1196  000502  6EDA               	movwf	fsr2h,c
  1197  000504  50DF               	movf	indf2,w,c
  1198  000506  ECE7  F003         	call	i2_SendLCD
  1199                           
  1200                           ;RFID.c: 64:             }
  1201  00050A  4A1C               	infsnz	processRFID@i_940,f,c
  1202  00050C  2A1D               	incf	processRFID@i_940+1,f,c
  1203  00050E  BE1D               	btfsc	processRFID@i_940+1,7,c
  1204  000510  D7F1               	goto	i2l1297
  1205  000512  501D               	movf	processRFID@i_940+1,w,c
  1206  000514  E104               	bnz	i2u69_40
  1207  000516  0E0A               	movlw	10
  1208  000518  5C1C               	subwf	processRFID@i_940,w,c
  1209  00051A  A0D8               	btfss	status,0,c
  1210  00051C  D7EB               	goto	i2l1297
  1211  00051E                     i2u69_40:
  1212                           
  1213                           ;RFID.c: 65:             LCD_String("  ");
  1214  00051E  0E21               	movlw	low STR_3
  1215  000520  6E05               	movwf	LCD_String@string,c
  1216  000522  0E03               	movlw	high STR_3
  1217  000524  6E06               	movwf	LCD_String@string+1,c
  1218  000526  ECB4  F003         	call	_LCD_String	;wreg free
  1219                           
  1220                           ;RFID.c: 66:             SendLCD(RFIDbuf[10],1);
  1221  00052A  0E01               	movlw	1
  1222  00052C  6E03               	movwf	i2SendLCD@type,c
  1223  00052E  5037               	movf	processRFID@RFIDbuf+10,w,c
  1224  000530  ECE7  F003         	call	i2_SendLCD
  1225                           
  1226                           ;RFID.c: 67:             SendLCD(RFIDbuf[11],1);
  1227  000534  0E01               	movlw	1
  1228  000536  6E03               	movwf	i2SendLCD@type,c
  1229  000538  5038               	movf	processRFID@RFIDbuf+11,w,c
  1230  00053A  ECE7  F003         	call	i2_SendLCD
  1231  00053E  0012               	return	
  1232  000540                     i2l1309:
  1233                           
  1234                           ;RFID.c: 71:     {;RFID.c: 73:        if(latestChar == 0x02)
  1235  000540  0E02               	movlw	2
  1236  000542  1819               	xorwf	processRFID@latestChar,w,c
  1237  000544  A4D8               	btfss	status,2,c
  1238  000546  D003               	goto	i2l1313
  1239                           
  1240                           ;RFID.c: 74:         {;RFID.c: 75:             position_in_buf = 0;
  1241  000548  0E00               	movlw	0
  1242  00054A  6E2C               	movwf	processRFID@position_in_buf,c
  1243                           
  1244                           ;RFID.c: 76:         }
  1245  00054C  0012               	return	
  1246  00054E                     i2l1313:
  1247                           
  1248                           ;RFID.c: 79:         {;RFID.c: 80:             RFIDbuf[position_in_buf] = latestChar;
  1249  00054E  0E2D               	movlw	low processRFID@RFIDbuf
  1250  000550  242C               	addwf	processRFID@position_in_buf,w,c
  1251  000552  6ED9               	movwf	fsr2l,c
  1252  000554  6ADA               	clrf	fsr2h,c
  1253  000556  0E00               	movlw	high processRFID@RFIDbuf
  1254  000558  22DA               	addwfc	fsr2h,f,c
  1255  00055A  C019  FFDF         	movff	processRFID@latestChar,indf2
  1256                           
  1257                           ;RFID.c: 81:             position_in_buf++;
  1258  00055E  2A2C               	incf	processRFID@position_in_buf,f,c
  1259  000560                     i2l185:
  1260  000560  0012               	return		;funcret
  1261  000562                     __end_of_processRFID:
  1262                           	opt callstack 0
  1263                           
  1264 ;; *************** function _check_data *****************
  1265 ;; Defined at:
  1266 ;;		line 87 in file "RFID.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  dataBuf         2    0[COMRAM] PTR unsigned char 
  1269 ;;		 -> processRFID@RFIDbuf(12), 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  i               2   22[COMRAM] int 
  1272 ;;  hexBuf         12    4[COMRAM] unsigned char [12]
  1273 ;;  checksum        1   21[COMRAM] unsigned char 
  1274 ;;  byte5           1   20[COMRAM] unsigned char 
  1275 ;;  byte4           1   19[COMRAM] unsigned char 
  1276 ;;  byte3           1   18[COMRAM] unsigned char 
  1277 ;;  byte2           1   17[COMRAM] unsigned char 
  1278 ;;  byte1           1   16[COMRAM] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  2    0[COMRAM] int 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1288 ;;      Params:         2       0       0       0
  1289 ;;      Locals:        20       0       0       0
  1290 ;;      Temps:          2       0       0       0
  1291 ;;      Totals:        24       0       0       0
  1292 ;;Total ram usage:       24 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_processRFID
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text10
  1302  000326                     __ptext10:
  1303                           	opt callstack 0
  1304  000326                     _check_data:
  1305                           	opt callstack 22
  1306                           
  1307                           ;RFID.c: 87: int check_data(char dataBuf[]);RFID.c: 88: {;RFID.c: 90:     char hexBuf[12
      +                          ];;RFID.c: 92:     for(int i=0; i<12;i++)
  1308                           
  1309                           ;incstack = 0
  1310  000326  0E00               	movlw	0
  1311  000328  6E18               	movwf	check_data@i+1,c
  1312  00032A  0E00               	movlw	0
  1313  00032C  6E17               	movwf	check_data@i,c
  1314  00032E                     i2l1229:
  1315                           
  1316                           ;RFID.c: 93:     {;RFID.c: 94:         if ((dataBuf[i] >= '0') && (dataBuf[i] <= '9'))
  1317  00032E  5017               	movf	check_data@i,w,c
  1318  000330  2401               	addwf	check_data@dataBuf,w,c
  1319  000332  6ED9               	movwf	fsr2l,c
  1320  000334  5018               	movf	check_data@i+1,w,c
  1321  000336  2002               	addwfc	check_data@dataBuf+1,w,c
  1322  000338  6EDA               	movwf	fsr2h,c
  1323  00033A  0E2F               	movlw	47
  1324  00033C  64DF               	cpfsgt	indf2,c
  1325  00033E  D018               	goto	i2l1235
  1326  000340  5017               	movf	check_data@i,w,c
  1327  000342  2401               	addwf	check_data@dataBuf,w,c
  1328  000344  6ED9               	movwf	fsr2l,c
  1329  000346  5018               	movf	check_data@i+1,w,c
  1330  000348  2002               	addwfc	check_data@dataBuf+1,w,c
  1331  00034A  6EDA               	movwf	fsr2h,c
  1332  00034C  0E3A               	movlw	58
  1333  00034E  60DF               	cpfslt	indf2,c
  1334  000350  D00F               	goto	i2l1235
  1335                           
  1336                           ;RFID.c: 95:         {;RFID.c: 96:             hexBuf[i] = dataBuf[i] - '0';
  1337  000352  0E05               	movlw	low check_data@hexBuf
  1338  000354  2417               	addwf	check_data@i,w,c
  1339  000356  6ED9               	movwf	fsr2l,c
  1340  000358  0E00               	movlw	high check_data@hexBuf
  1341  00035A  2018               	addwfc	check_data@i+1,w,c
  1342  00035C  6EDA               	movwf	fsr2h,c
  1343  00035E  5017               	movf	check_data@i,w,c
  1344  000360  2401               	addwf	check_data@dataBuf,w,c
  1345  000362  6EE1               	movwf	fsr1l,c
  1346  000364  5018               	movf	check_data@i+1,w,c
  1347  000366  2002               	addwfc	check_data@dataBuf+1,w,c
  1348  000368  6EE2               	movwf	fsr1h,c
  1349  00036A  50E7               	movf	indf1,w,c
  1350  00036C  0FD0               	addlw	208
  1351  00036E  D020               	goto	L1
  1352  000370                     i2l1235:
  1353  000370  5017               	movf	check_data@i,w,c
  1354  000372  2401               	addwf	check_data@dataBuf,w,c
  1355  000374  6ED9               	movwf	fsr2l,c
  1356  000376  5018               	movf	check_data@i+1,w,c
  1357  000378  2002               	addwfc	check_data@dataBuf+1,w,c
  1358  00037A  6EDA               	movwf	fsr2h,c
  1359  00037C  0E40               	movlw	64
  1360  00037E  64DF               	cpfsgt	indf2,c
  1361  000380  D018               	goto	i2l1241
  1362  000382  5017               	movf	check_data@i,w,c
  1363  000384  2401               	addwf	check_data@dataBuf,w,c
  1364  000386  6ED9               	movwf	fsr2l,c
  1365  000388  5018               	movf	check_data@i+1,w,c
  1366  00038A  2002               	addwfc	check_data@dataBuf+1,w,c
  1367  00038C  6EDA               	movwf	fsr2h,c
  1368  00038E  0E47               	movlw	71
  1369  000390  60DF               	cpfslt	indf2,c
  1370  000392  D00F               	goto	i2l1241
  1371                           
  1372                           ;RFID.c: 98:         {;RFID.c: 99:             hexBuf[i] = 10 + dataBuf[i] - 'A';
  1373  000394  0E05               	movlw	low check_data@hexBuf
  1374  000396  2417               	addwf	check_data@i,w,c
  1375  000398  6ED9               	movwf	fsr2l,c
  1376  00039A  0E00               	movlw	high check_data@hexBuf
  1377  00039C  2018               	addwfc	check_data@i+1,w,c
  1378  00039E  6EDA               	movwf	fsr2h,c
  1379  0003A0  5017               	movf	check_data@i,w,c
  1380  0003A2  2401               	addwf	check_data@dataBuf,w,c
  1381  0003A4  6EE1               	movwf	fsr1l,c
  1382  0003A6  5018               	movf	check_data@i+1,w,c
  1383  0003A8  2002               	addwfc	check_data@dataBuf+1,w,c
  1384  0003AA  6EE2               	movwf	fsr1h,c
  1385  0003AC  50E7               	movf	indf1,w,c
  1386  0003AE  0FC9               	addlw	201
  1387  0003B0                     L1:
  1388  0003B0  6EDF               	movwf	indf2,c
  1389  0003B2                     i2l1241:
  1390                           
  1391                           ;RFID.c: 101:     }
  1392  0003B2  4A17               	infsnz	check_data@i,f,c
  1393  0003B4  2A18               	incf	check_data@i+1,f,c
  1394  0003B6  BE18               	btfsc	check_data@i+1,7,c
  1395  0003B8  D7BA               	goto	i2l1229
  1396  0003BA  5018               	movf	check_data@i+1,w,c
  1397  0003BC  E104               	bnz	i2u49_40
  1398  0003BE  0E0C               	movlw	12
  1399  0003C0  5C17               	subwf	check_data@i,w,c
  1400  0003C2  A0D8               	btfss	status,0,c
  1401  0003C4  D7B4               	goto	i2l1229
  1402  0003C6                     i2u49_40:
  1403                           
  1404                           ;RFID.c: 103:     char byte1 = 0x00 | (hexBuf[0] < 1) | hexBuf[1];
  1405  0003C6  5005               	movf	check_data@hexBuf,w,c
  1406  0003C8  A4D8               	btfss	status,2,c
  1407  0003CA  D002               	goto	i2u50_40
  1408  0003CC  0E01               	movlw	1
  1409  0003CE  D001               	goto	i2u51_40
  1410  0003D0                     i2u50_40:
  1411  0003D0  0E00               	movlw	0
  1412  0003D2                     i2u51_40:
  1413  0003D2  1006               	iorwf	check_data@hexBuf+1,w,c
  1414  0003D4  6E11               	movwf	check_data@byte1,c
  1415                           
  1416                           ;RFID.c: 104:     char byte2 = 0x00 | (hexBuf[2] < 1) | hexBuf[3];
  1417  0003D6  5007               	movf	check_data@hexBuf+2,w,c
  1418  0003D8  A4D8               	btfss	status,2,c
  1419  0003DA  D002               	goto	i2u52_40
  1420  0003DC  0E01               	movlw	1
  1421  0003DE  D001               	goto	i2u53_40
  1422  0003E0                     i2u52_40:
  1423  0003E0  0E00               	movlw	0
  1424  0003E2                     i2u53_40:
  1425  0003E2  1008               	iorwf	check_data@hexBuf+3,w,c
  1426  0003E4  6E12               	movwf	check_data@byte2,c
  1427                           
  1428                           ;RFID.c: 105:     char byte3 = 0x00 | (hexBuf[4] < 1) | hexBuf[5];
  1429  0003E6  5009               	movf	check_data@hexBuf+4,w,c
  1430  0003E8  A4D8               	btfss	status,2,c
  1431  0003EA  D002               	goto	i2u54_40
  1432  0003EC  0E01               	movlw	1
  1433  0003EE  D001               	goto	i2u55_40
  1434  0003F0                     i2u54_40:
  1435  0003F0  0E00               	movlw	0
  1436  0003F2                     i2u55_40:
  1437  0003F2  100A               	iorwf	check_data@hexBuf+5,w,c
  1438  0003F4  6E13               	movwf	check_data@byte3,c
  1439                           
  1440                           ;RFID.c: 106:     char byte4 = 0x00 | (hexBuf[6] < 1) | hexBuf[7];
  1441  0003F6  500B               	movf	check_data@hexBuf+6,w,c
  1442  0003F8  A4D8               	btfss	status,2,c
  1443  0003FA  D002               	goto	i2u56_40
  1444  0003FC  0E01               	movlw	1
  1445  0003FE  D001               	goto	i2u57_40
  1446  000400                     i2u56_40:
  1447  000400  0E00               	movlw	0
  1448  000402                     i2u57_40:
  1449  000402  100C               	iorwf	check_data@hexBuf+7,w,c
  1450  000404  6E14               	movwf	check_data@byte4,c
  1451                           
  1452                           ;RFID.c: 107:     char byte5 = 0x00 | (hexBuf[8] < 1) | hexBuf[9];
  1453  000406  500D               	movf	check_data@hexBuf+8,w,c
  1454  000408  A4D8               	btfss	status,2,c
  1455  00040A  D002               	goto	i2u58_40
  1456  00040C  0E01               	movlw	1
  1457  00040E  D001               	goto	i2u59_40
  1458  000410                     i2u58_40:
  1459  000410  0E00               	movlw	0
  1460  000412                     i2u59_40:
  1461  000412  100E               	iorwf	check_data@hexBuf+9,w,c
  1462  000414  6E15               	movwf	check_data@byte5,c
  1463                           
  1464                           ;RFID.c: 108:     char checksum = 0x00 | (hexBuf[10] < 1) | hexBuf[11];
  1465  000416  500F               	movf	check_data@hexBuf+10,w,c
  1466  000418  A4D8               	btfss	status,2,c
  1467  00041A  D002               	goto	i2u60_40
  1468  00041C  0E01               	movlw	1
  1469  00041E  D001               	goto	i2u61_40
  1470  000420                     i2u60_40:
  1471  000420  0E00               	movlw	0
  1472  000422                     i2u61_40:
  1473  000422  1010               	iorwf	check_data@hexBuf+11,w,c
  1474  000424  6E16               	movwf	check_data@checksum,c
  1475                           
  1476                           ;RFID.c: 111:     if(byte1^byte2^byte3^byte4^byte5 == checksum)
  1477  000426  5011               	movf	check_data@byte1,w,c
  1478  000428  1812               	xorwf	check_data@byte2,w,c
  1479  00042A  1813               	xorwf	check_data@byte3,w,c
  1480  00042C  1814               	xorwf	check_data@byte4,w,c
  1481  00042E  6E03               	movwf	??_check_data& (0+255),c
  1482  000430  6A04               	clrf	(??_check_data+1)& (0+255),c
  1483  000432  5016               	movf	check_data@checksum,w,c
  1484  000434  1815               	xorwf	check_data@byte5,w,c
  1485  000436  A4D8               	btfss	status,2,c
  1486  000438  D002               	goto	i2u62_40
  1487  00043A  0E01               	movlw	1
  1488  00043C  D001               	goto	i2u63_40
  1489  00043E                     i2u62_40:
  1490  00043E  0E00               	movlw	0
  1491  000440                     i2u63_40:
  1492  000440  1A03               	xorwf	??_check_data,f,c
  1493  000442  0E00               	movlw	0
  1494  000444  1A04               	xorwf	??_check_data+1,f,c
  1495  000446  5003               	movf	??_check_data,w,c
  1496  000448  1004               	iorwf	??_check_data+1,w,c
  1497  00044A  B4D8               	btfsc	status,2,c
  1498  00044C  D005               	goto	i2l1253
  1499                           
  1500                           ;RFID.c: 112:     {;RFID.c: 113:         return 1;
  1501  00044E  0E00               	movlw	0
  1502  000450  6E02               	movwf	?_check_data+1,c
  1503  000452  0E01               	movlw	1
  1504  000454  6E01               	movwf	?_check_data,c
  1505  000456  0012               	return	
  1506  000458                     i2l1253:
  1507                           
  1508                           ;RFID.c: 116:         return 0;
  1509  000458  0E00               	movlw	0
  1510  00045A  6E02               	movwf	?_check_data+1,c
  1511  00045C  0E00               	movlw	0
  1512  00045E  6E01               	movwf	?_check_data,c
  1513  000460  0012               	return		;funcret
  1514  000462                     __end_of_check_data:
  1515                           	opt callstack 0
  1516                           
  1517 ;; *************** function _SetLine *****************
  1518 ;; Defined at:
  1519 ;;		line 107 in file "LCDIO.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  line            1    wreg     unsigned char 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  line            1    4[COMRAM] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1533 ;;      Params:         0       0       0       0
  1534 ;;      Locals:         1       0       0       0
  1535 ;;      Temps:          0       0       0       0
  1536 ;;      Totals:         1       0       0       0
  1537 ;;Total ram usage:        1 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    3
  1540 ;; This function calls:
  1541 ;;		i2_SendLCD
  1542 ;; This function is called by:
  1543 ;;		_processRFID
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text11
  1548  0007FE                     __ptext11:
  1549                           	opt callstack 0
  1550  0007FE                     _SetLine:
  1551                           	opt callstack 19
  1552                           
  1553                           ;incstack = 0
  1554                           ;SetLine@line stored from wreg
  1555  0007FE  6E05               	movwf	SetLine@line,c
  1556                           
  1557                           ;LCDIO.c: 109:     if(line == 1){
  1558  000800  0405               	decf	SetLine@line,w,c
  1559  000802  A4D8               	btfss	status,2,c
  1560  000804  D005               	goto	i2l1203
  1561                           
  1562                           ;LCDIO.c: 110:         SendLCD(0x80,0);
  1563  000806  0E00               	movlw	0
  1564  000808  6E03               	movwf	i2SendLCD@type,c
  1565  00080A  0E80               	movlw	128
  1566  00080C  ECE7  F003         	call	i2_SendLCD
  1567  000810                     i2l1203:
  1568                           
  1569                           ;LCDIO.c: 113:     if(line == 2){
  1570  000810  0E02               	movlw	2
  1571  000812  1805               	xorwf	SetLine@line,w,c
  1572  000814  A4D8               	btfss	status,2,c
  1573  000816  D005               	goto	i2l1207
  1574                           
  1575                           ;LCDIO.c: 114:         SendLCD(0xC0,0);
  1576  000818  0E00               	movlw	0
  1577  00081A  6E03               	movwf	i2SendLCD@type,c
  1578  00081C  0EC0               	movlw	192
  1579  00081E  ECE7  F003         	call	i2_SendLCD
  1580  000822                     i2l1207:
  1581                           
  1582                           ;LCDIO.c: 116:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1583  000822  0E21               	movlw	33
  1584  000824                     i2u86_47:
  1585  000824  2EE8               	decfsz	wreg,f,c
  1586  000826  D7FE               	bra	i2u86_47
  1587  000828  F000               	nop	
  1588  00082A  0012               	return		;funcret
  1589  00082C                     __end_of_SetLine:
  1590                           	opt callstack 0
  1591                           
  1592 ;; *************** function _LCD_String *****************
  1593 ;; Defined at:
  1594 ;;		line 119 in file "LCDIO.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  string          2    4[COMRAM] PTR unsigned char 
  1597 ;;		 -> STR_3(3), STR_2(16), STR_1(16), 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1609 ;;      Params:         2       0       0       0
  1610 ;;      Locals:         0       0       0       0
  1611 ;;      Temps:          0       0       0       0
  1612 ;;      Totals:         2       0       0       0
  1613 ;;Total ram usage:        2 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    3
  1616 ;; This function calls:
  1617 ;;		i2_SendLCD
  1618 ;; This function is called by:
  1619 ;;		_processRFID
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text12
  1624  000768                     __ptext12:
  1625                           	opt callstack 0
  1626  000768                     _LCD_String:
  1627                           	opt callstack 19
  1628                           
  1629                           ;LCDIO.c: 121: while(*string != 0){
  1630                           
  1631                           ;incstack = 0
  1632  000768  D010               	goto	i2l1217
  1633  00076A                     i2l1211:
  1634                           
  1635                           ;LCDIO.c: 124: SendLCD(*string++,1);
  1636  00076A  0E01               	movlw	1
  1637  00076C  6E03               	movwf	i2SendLCD@type,c
  1638  00076E  C005  FFF6         	movff	LCD_String@string,tblptrl
  1639  000772  C006  FFF7         	movff	LCD_String@string+1,tblptrh
  1640  000776                     	if	0	;tblptru may be non-zero
  1641  000776                     	endif
  1642  000776                     	if	0	;tblptru may be non-zero
  1643  000776                     	endif
  1644  000776  0008               	tblrd		*
  1645  000778  50F5               	movf	tablat,w,c
  1646  00077A  ECE7  F003         	call	i2_SendLCD
  1647  00077E  4A05               	infsnz	LCD_String@string,f,c
  1648  000780  2A06               	incf	LCD_String@string+1,f,c
  1649                           
  1650                           ;LCDIO.c: 125:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1651  000782  0E21               	movlw	33
  1652  000784                     i2u87_47:
  1653  000784  2EE8               	decfsz	wreg,f,c
  1654  000786  D7FE               	bra	i2u87_47
  1655  000788  F000               	nop	
  1656  00078A                     i2l1217:
  1657                           
  1658                           ;LCDIO.c: 121: while(*string != 0){
  1659  00078A  C005  FFF6         	movff	LCD_String@string,tblptrl
  1660  00078E  C006  FFF7         	movff	LCD_String@string+1,tblptrh
  1661  000792                     	if	0	;tblptru may be non-zero
  1662  000792                     	endif
  1663  000792                     	if	0	;tblptru may be non-zero
  1664  000792                     	endif
  1665  000792  0008               	tblrd		*
  1666  000794  50F5               	movf	tablat,w,c
  1667  000796  0900               	iorlw	0
  1668  000798  B4D8               	btfsc	status,2,c
  1669  00079A  0012               	return	
  1670  00079C  D7E6               	goto	i2l1211
  1671  00079E                     __end_of_LCD_String:
  1672                           	opt callstack 0
  1673                           
  1674 ;; *************** function _ClearLCD *****************
  1675 ;; Defined at:
  1676 ;;		line 137 in file "LCDIO.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1690 ;;      Params:         0       0       0       0
  1691 ;;      Locals:         0       0       0       0
  1692 ;;      Temps:          1       0       0       0
  1693 ;;      Totals:         1       0       0       0
  1694 ;;Total ram usage:        1 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    3
  1697 ;; This function calls:
  1698 ;;		i2_SendLCD
  1699 ;; This function is called by:
  1700 ;;		_processRFID
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text13
  1705  00084A                     __ptext13:
  1706                           	opt callstack 0
  1707  00084A                     _ClearLCD:
  1708                           	opt callstack 19
  1709                           
  1710                           ;LCDIO.c: 138:     SendLCD(0b00000001,0);
  1711                           
  1712                           ;incstack = 0
  1713  00084A  0E00               	movlw	0
  1714  00084C  6E03               	movwf	i2SendLCD@type,c
  1715  00084E  0E01               	movlw	1
  1716  000850  ECE7  F003         	call	i2_SendLCD
  1717                           
  1718                           ;LCDIO.c: 139:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1719  000854  0E0D               	movlw	13
  1720  000856  6E05               	movwf	??_ClearLCD& (0+255),c
  1721  000858  0EFC               	movlw	252
  1722  00085A                     i2u88_47:
  1723  00085A  2EE8               	decfsz	wreg,f,c
  1724  00085C  D7FE               	bra	i2u88_47
  1725  00085E  2E05               	decfsz	??_ClearLCD& (0+255),f,c
  1726  000860  D7FC               	bra	i2u88_47
  1727  000862  0012               	return		;funcret
  1728  000864                     __end_of_ClearLCD:
  1729                           	opt callstack 0
  1730                           
  1731 ;; *************** function i2_SendLCD *****************
  1732 ;; Defined at:
  1733 ;;		line 44 in file "LCDIO.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  Byte            1    wreg     unsigned char 
  1736 ;;  type            1    2[COMRAM] unsigned char 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  Byte            1    3[COMRAM] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1748 ;;      Params:         1       0       0       0
  1749 ;;      Locals:         1       0       0       0
  1750 ;;      Temps:          0       0       0       0
  1751 ;;      Totals:         2       0       0       0
  1752 ;;Total ram usage:        2 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    2
  1755 ;; This function calls:
  1756 ;;		i2_LCDout
  1757 ;; This function is called by:
  1758 ;;		_SetLine
  1759 ;;		_LCD_String
  1760 ;;		_ClearLCD
  1761 ;;		_processRFID
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text14
  1766  0007CE                     __ptext14:
  1767                           	opt callstack 0
  1768  0007CE                     i2_SendLCD:
  1769                           	opt callstack 20
  1770                           
  1771                           ;incstack = 0
  1772                           ;i2SendLCD@Byte stored from wreg
  1773  0007CE  6E04               	movwf	i2SendLCD@Byte,c
  1774                           
  1775                           ;LCDIO.c: 47:  LATAbits.LATA6 = type;
  1776  0007D0  B003               	btfsc	i2SendLCD@type,0,c
  1777  0007D2  D002               	bra	i2u41_45
  1778  0007D4  9C89               	bcf	3977,6,c	;volatile
  1779  0007D6  D001               	bra	i2u41_46
  1780  0007D8                     i2u41_45:
  1781  0007D8  8C89               	bsf	3977,6,c	;volatile
  1782  0007DA                     i2u41_46:
  1783                           
  1784                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
  1785  0007DA  3804               	swapf	i2SendLCD@Byte,w,c
  1786  0007DC  0B0F               	andlw	15
  1787  0007DE  0B0F               	andlw	15
  1788  0007E0  EC51  F003         	call	i2_LCDout
  1789                           
  1790                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
  1791  0007E4  0E06               	movlw	6
  1792  0007E6                     i2u89_47:
  1793  0007E6  2EE8               	decfsz	wreg,f,c
  1794  0007E8  D7FE               	bra	i2u89_47
  1795  0007EA  D000               	nop2	
  1796                           
  1797                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
  1798  0007EC  5004               	movf	i2SendLCD@Byte,w,c
  1799  0007EE  0B0F               	andlw	15
  1800  0007F0  EC51  F003         	call	i2_LCDout
  1801                           
  1802                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1803  0007F4  0E21               	movlw	33
  1804  0007F6                     i2u90_47:
  1805  0007F6  2EE8               	decfsz	wreg,f,c
  1806  0007F8  D7FE               	bra	i2u90_47
  1807  0007FA  F000               	nop	
  1808  0007FC  0012               	return		;funcret
  1809  0007FE                     __end_ofi2_SendLCD:
  1810                           	opt callstack 0
  1811                           
  1812 ;; *************** function i2_LCDout *****************
  1813 ;; Defined at:
  1814 ;;		line 31 in file "LCDIO.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  number          1    wreg     unsigned char 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  number          1    1[COMRAM] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1828 ;;      Params:         0       0       0       0
  1829 ;;      Locals:         1       0       0       0
  1830 ;;      Temps:          1       0       0       0
  1831 ;;      Totals:         2       0       0       0
  1832 ;;Total ram usage:        2 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    1
  1835 ;; This function calls:
  1836 ;;		i2_E_TOG
  1837 ;; This function is called by:
  1838 ;;		i2_SendLCD
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text15
  1843  0006A2                     __ptext15:
  1844                           	opt callstack 0
  1845  0006A2                     i2_LCDout:
  1846                           	opt callstack 20
  1847                           
  1848                           ;incstack = 0
  1849                           ;i2LCDout@number stored from wreg
  1850  0006A2  6E02               	movwf	i2LCDout@number,c
  1851                           
  1852                           ;LCDIO.c: 33:  LATCbits.LATC1 = (0b0001 & number);
  1853  0006A4  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  1854  0006A8  0E01               	movlw	1
  1855  0006AA  1601               	andwf	??i2_LCDout,f,c
  1856  0006AC  4601               	rlncf	??i2_LCDout,f,c
  1857  0006AE  508B               	movf	3979,w,c	;volatile
  1858  0006B0  1801               	xorwf	??i2_LCDout,w,c
  1859  0006B2  0BFD               	andlw	-3
  1860  0006B4  1801               	xorwf	??i2_LCDout,w,c
  1861  0006B6  6E8B               	movwf	3979,c	;volatile
  1862                           
  1863                           ;LCDIO.c: 34:  LATCbits.LATC2 = (0b0010 & number) >> 1;
  1864  0006B8  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  1865  0006BC  90D8               	bcf	status,0,c
  1866  0006BE  3201               	rrcf	??i2_LCDout,f,c
  1867  0006C0  0E01               	movlw	1
  1868  0006C2  1601               	andwf	??i2_LCDout,f,c
  1869  0006C4  4601               	rlncf	??i2_LCDout,f,c
  1870  0006C6  4601               	rlncf	??i2_LCDout,f,c
  1871  0006C8  508B               	movf	3979,w,c	;volatile
  1872  0006CA  1801               	xorwf	??i2_LCDout,w,c
  1873  0006CC  0BFB               	andlw	-5
  1874  0006CE  1801               	xorwf	??i2_LCDout,w,c
  1875  0006D0  6E8B               	movwf	3979,c	;volatile
  1876                           
  1877                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
  1878  0006D2  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  1879  0006D6  90D8               	bcf	status,0,c
  1880  0006D8  3201               	rrcf	??i2_LCDout,f,c
  1881  0006DA  90D8               	bcf	status,0,c
  1882  0006DC  3201               	rrcf	??i2_LCDout,f,c
  1883  0006DE  0E01               	movlw	1
  1884  0006E0  1601               	andwf	??i2_LCDout,f,c
  1885  0006E2  508C               	movf	3980,w,c	;volatile
  1886  0006E4  1801               	xorwf	??i2_LCDout,w,c
  1887  0006E6  0BFE               	andlw	-2
  1888  0006E8  1801               	xorwf	??i2_LCDout,w,c
  1889  0006EA  6E8C               	movwf	3980,c	;volatile
  1890                           
  1891                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
  1892  0006EC  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  1893  0006F0  90D8               	bcf	status,0,c
  1894  0006F2  3201               	rrcf	??i2_LCDout,f,c
  1895  0006F4  90D8               	bcf	status,0,c
  1896  0006F6  3201               	rrcf	??i2_LCDout,f,c
  1897  0006F8  90D8               	bcf	status,0,c
  1898  0006FA  3201               	rrcf	??i2_LCDout,f,c
  1899  0006FC  0E01               	movlw	1
  1900  0006FE  1601               	andwf	??i2_LCDout,f,c
  1901  000700  4601               	rlncf	??i2_LCDout,f,c
  1902  000702  508C               	movf	3980,w,c	;volatile
  1903  000704  1801               	xorwf	??i2_LCDout,w,c
  1904  000706  0BFD               	andlw	-3
  1905  000708  1801               	xorwf	??i2_LCDout,w,c
  1906  00070A  6E8C               	movwf	3980,c	;volatile
  1907                           
  1908                           ;LCDIO.c: 39:  E_TOG();
  1909  00070C  EC51  F004         	call	i2_E_TOG	;wreg free
  1910                           
  1911                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1912  000710  0E03               	movlw	3
  1913  000712                     i2u91_47:
  1914  000712  2EE8               	decfsz	wreg,f,c
  1915  000714  D7FE               	bra	i2u91_47
  1916  000716  F000               	nop	
  1917  000718  0012               	return		;funcret
  1918  00071A                     __end_ofi2_LCDout:
  1919                           	opt callstack 0
  1920                           
  1921 ;; *************** function i2_E_TOG *****************
  1922 ;; Defined at:
  1923 ;;		line 23 in file "LCDIO.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1937 ;;      Params:         0       0       0       0
  1938 ;;      Locals:         0       0       0       0
  1939 ;;      Temps:          0       0       0       0
  1940 ;;      Totals:         0       0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		i2_LCDout
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text16
  1951  0008A2                     __ptext16:
  1952                           	opt callstack 0
  1953  0008A2                     i2_E_TOG:
  1954                           	opt callstack 20
  1955                           
  1956                           ;LCDIO.c: 25: LATCbits.LATC0 = 1;
  1957                           
  1958                           ;incstack = 0
  1959  0008A2  808B               	bsf	3979,0,c	;volatile
  1960                           
  1961                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1962  0008A4  0E03               	movlw	3
  1963  0008A6                     i2u92_47:
  1964  0008A6  2EE8               	decfsz	wreg,f,c
  1965  0008A8  D7FE               	bra	i2u92_47
  1966  0008AA  F000               	nop	
  1967                           
  1968                           ;LCDIO.c: 27: LATCbits.LATC0 = 0;
  1969  0008AC  908B               	bcf	3979,0,c	;volatile
  1970  0008AE  0012               	return		;funcret
  1971  0008B0                     __end_ofi2_E_TOG:
  1972                           	opt callstack 0
  1973                           
  1974                           	psect	rparam
  1975  0000                     
  1976                           	psect	temp
  1977  000039                     btemp:
  1978                           	opt callstack 0
  1979  000039                     	ds	1
  1980  0000                     int$flags	set	btemp
  1981  0000                     wtemp8	set	btemp+1
  1982  0000                     ttemp5	set	btemp+1
  1983  0000                     ttemp6	set	btemp+4
  1984  0000                     ttemp7	set	btemp+8
  1985                           tosu	equ	0xFFF
  1986                           tosh	equ	0xFFE
  1987                           tosl	equ	0xFFD
  1988                           stkptr	equ	0xFFC
  1989                           pclatu	equ	0xFFB
  1990                           pclath	equ	0xFFA
  1991                           pcl	equ	0xFF9
  1992                           tblptru	equ	0xFF8
  1993                           tblptrh	equ	0xFF7
  1994                           tblptrl	equ	0xFF6
  1995                           tablat	equ	0xFF5
  1996                           prodh	equ	0xFF4
  1997                           prodl	equ	0xFF3
  1998                           indf0	equ	0xFEF
  1999                           postinc0	equ	0xFEE
  2000                           postdec0	equ	0xFED
  2001                           preinc0	equ	0xFEC
  2002                           plusw0	equ	0xFEB
  2003                           fsr0h	equ	0xFEA
  2004                           fsr0l	equ	0xFE9
  2005                           wreg	equ	0xFE8
  2006                           indf1	equ	0xFE7
  2007                           postinc1	equ	0xFE6
  2008                           postdec1	equ	0xFE5
  2009                           preinc1	equ	0xFE4
  2010                           plusw1	equ	0xFE3
  2011                           fsr1h	equ	0xFE2
  2012                           fsr1l	equ	0xFE1
  2013                           bsr	equ	0xFE0
  2014                           indf2	equ	0xFDF
  2015                           postinc2	equ	0xFDE
  2016                           postdec2	equ	0xFDD
  2017                           preinc2	equ	0xFDC
  2018                           plusw2	equ	0xFDB
  2019                           fsr2h	equ	0xFDA
  2020                           fsr2l	equ	0xFD9
  2021                           status	equ	0xFD8


Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      56
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    check_data@dataBuf	PTR unsigned char  size(2) Largest target is 12
		 -> processRFID@RFIDbuf(COMRAM[12]), 

    LCD_String@string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[3]), STR_2(CODE[16]), STR_1(CODE[16]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    S281DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S281DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _setup->_LCD_Init
    _LCD_Init->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _InterruptHandlerLow in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_processRFID
    _processRFID->_check_data
    _SetLine->i2_SendLCD
    _LCD_String->i2_SendLCD
    _ClearLCD->i2_SendLCD
    i2_SendLCD->i2_LCDout

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1118
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1118
                           _LCD_Init
                          _init_RFID
 ---------------------------------------------------------------------------------
 (2) _init_RFID                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0    1118
                                             42 COMRAM     1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (3) _SendLCD                                              2     1      1    1058
                                             40 COMRAM     2     1      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (4) _LCDout                                               2     2      0      60
                                             38 COMRAM     2     2      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (5) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                  1     1      0       0
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptHandlerHigh                                 8     8      0    2858
                                             29 COMRAM     8     8      0
                        _processRFID
 ---------------------------------------------------------------------------------
 (8) _processRFID                                          5     5      0    2858
                                             24 COMRAM     5     5      0
                           _ClearLCD
                         _LCD_String
                            _SetLine
                         _check_data
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) _check_data                                          24    22      2     891
                                              0 COMRAM    24    22      2
 ---------------------------------------------------------------------------------
 (9) _SetLine                                              1     1      0     406
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) _LCD_String                                           2     0      2     635
                                              4 COMRAM     2     0      2
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) _ClearLCD                                             1     1      0     362
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) i2_SendLCD                                            2     1      1     362
                                              2 COMRAM     2     1      1
                           i2_LCDout
 ---------------------------------------------------------------------------------
 (10) i2_LCDout                                            2     2      0      88
                                              0 COMRAM     2     2      0
                            i2_E_TOG
 ---------------------------------------------------------------------------------
 (11) i2_E_TOG                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _LCD_Init
       _LCDout
         _E_TOG
       _SendLCD
         _LCDout
           _E_TOG
     _init_RFID

 _InterruptHandlerLow (ROOT)

 _InterruptHandlerHigh (ROOT)
   _processRFID
     _ClearLCD
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     _LCD_String
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     _SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     _check_data
     i2_SendLCD
       i2_LCDout
         i2_E_TOG

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      38       1       59.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38       3        0.0%
DATA                 0      0      38      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Feb 18 18:27:34 2020

                           l21 0868                             l40 08B4                             bsr 000FE0  
                  ?_LCD_String 0005                            u405 07A8                            u406 07AA  
                          u807 0610                            u727 0580                            u817 0622  
                          u737 0596                            u827 07B6                            u747 05A6  
                          u837 07C6                            u757 05B4                            u847 069A  
                          u767 05C2                            u857 0898                            u777 05D4  
                          u787 05E6                            u797 05FC                            wreg 000FE8  
                 processRFID@i 001A                   __CFG_LVP$OFF 000000                           STR_1 0311  
                         STR_2 0301                           STR_3 0321                           _LATB 000F8A  
                         i2l30 0744                __end_ofi2_E_TOG 08B0                           _main 08B0  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0039                           start 0026                   ___param_bank 000000  
              __end_of_SendLCD 07CE                __end_of_SetLine 082C               __end_of_LCD_Init 062A  
                        ?_main 0001                          i2l185 0560                          _RCREG 000FAE  
                        _E_TOG 0894               __end_ofi2_LCDout 071A                          _SPBRG 000FAF  
              check_data@byte1 0011                check_data@byte2 0012                check_data@byte3 0013  
              check_data@byte4 0014                check_data@byte5 0015                          _setup 0864  
           __size_ofi2_SendLCD 0030                          tablat 000FF5             processRFID@RFIDbuf 002D  
                        ttemp5 003A                          ttemp6 003D                          ttemp7 0041  
                        status 000FD8                          wtemp8 003A            __size_of_LCD_String 0036  
             __end_of_ClearLCD 0864                 __CFG_MCLRE$OFF 000000                __initialization 082C  
                 __end_of_main 08B6                 __CFG_OSC$IRCIO 000000               LCD_String@string 0005  
                       ??_main 002C                  __activetblptr 000001                         ?_E_TOG 0001  
                    ??i2_E_TOG 0001                         ?_setup 0001                         i2l1211 076A  
                       i2l1203 0810                         i2l1207 0822                         i2l1217 078A  
                       i2l1241 03B2                         i2l1313 054E                         i2l1235 0370  
                       i2l1253 0458                         i2l1229 032E                         i2l1309 0540  
                       i2l1285 04D0                         i2l1279 04A4                         i2l1297 04F4  
                       _LCDout 062A                    SendLCD@Byte 002A                         _OSCCON 000FD3  
                       _PTCON0 000F7F                         _PTCON1 000F7E                         _SPBRGH 000FB0  
                       _PTPERH 000F7A                         _PTPERL 000F7B                    SendLCD@type 0029  
                    ??_SendLCD 002A                      ??_SetLine 0005               check_data@hexBuf 0005  
                       clear_0 0832              __end_ofi2_SendLCD 07FE                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                 ?_processRFID 0001                     __accesstop 0060        __end_of__initialization 0838  
                    ?_LCD_Init 0001                  ___rparam_used 000001                    SetLine@line 0005  
                __end_of_E_TOG 08A2                      ?i2_LCDout 0001                 __pcstackCOMRAM 0001  
                __end_of_setup 087C                   ??_LCD_String 0007                        ??_E_TOG 0027  
__size_of_InterruptHandlerHigh 0760                      ?_ClearLCD 0001    __end_of_InterruptHandlerLow 0026  
                      ??_setup 002C                     _check_data 0326                        ?_LCDout 0001  
           __size_of_init_RFID 0018                     ??_LCD_Init 002B             __end_of_LCD_String 079E  
                   ??i2_LCDout 0001                     ??_ClearLCD 0005                        i2_E_TOG 08A2  
                      i2u41_45 07D8                        i2u41_46 07DA                        i2u50_40 03D0  
                      i2u51_40 03D2                        i2u60_40 0420                        i2u52_40 03E0  
                      i2u61_40 0422                        i2u53_40 03E2                        i2u62_40 043E  
                      i2u54_40 03F0                        i2u63_40 0440                        i2u55_40 03F2  
                      i2u56_40 0400                        i2u57_40 0402                        i2u49_40 03C6  
                      i2u58_40 0410                        i2u90_47 07F6                        i2u59_40 0412  
                      i2u91_47 0712                        i2u92_47 08A6                        i2u69_40 051E  
                      i2u86_47 0824                        i2u87_47 0784                        i2u88_47 085A  
                      i2u89_47 07E6                        _PWMCON0 000F6F                        _PWMCON1 000F6E  
              __size_of_LCDout 0078              check_data@dataBuf 0001                        _SendLCD 079E  
                      __Hparam 0000                        _SetLine 07FE                        __Lparam 0000  
        processRFID@latestChar 0019                   __psmallconst 0300                        __pcinit 082C  
                      __ramtop 0300                        __ptext0 08B0                        __ptext1 0864  
                      __ptext2 087C                        __ptext3 0562                        __ptext4 079E  
                      __ptext5 062A                        __ptext6 0894                        __ptext9 0462  
            __end_of_init_RFID 0894                   LCDout@number 0028                 __pintcode_body 071A  
         end_of_initialization 0838                    ?_check_data 0001           __size_of_processRFID 0100  
                      int_func 071A                      _RCSTAbits 000FAB                        postinc0 000FEE  
                    i2_SendLCD 07CE                      _TRISAbits 000F92                      _TRISCbits 000F94  
                    _TRISDbits 000F95                 __end_of_LCDout 06A2                      _TXSTAbits 000FAC  
            __size_of_LCD_Init 00C8               processRFID@i_940 001C              __size_ofi2_LCDout 0078  
                  _BAUDCONbits 000FAA            __size_of_check_data 013C                     ?i2_SendLCD 0003  
          start_initialization 082C              __size_of_ClearLCD 001A                       ??_LCDout 0027  
 __end_of_InterruptHandlerHigh 0768                    __pbssCOMRAM 002C                       ?i2_E_TOG 0001  
               i2LCDout@number 0002   __size_of_InterruptHandlerLow 000E                       ?_SendLCD 0029  
                     ?_SetLine 0001                      __pintcode 0008                    __pintcodelo 0018  
                  __smallconst 0300                 __size_of_E_TOG 000E                    ??i2_SendLCD 0004  
                    _init_RFID 087C                 __size_of_setup 0018                   ??_check_data 0003  
                     _LCD_Init 0562                       _LATAbits 000F89                       _LATCbits 000F8B  
                     _LATDbits 000F8C                       _PIE1bits 000F9D                       _PIR1bits 000F9E  
                     i2_LCDout 06A2                       _RCONbits 000FD0             __end_of_check_data 0462  
         _InterruptHandlerHigh 0008                       _ClearLCD 084A                     ?_init_RFID 0001  
             __size_ofi2_E_TOG 000E                  ??_processRFID 0019             check_data@checksum 0016  
                i2SendLCD@Byte 0004                  i2SendLCD@type 0003                       __Hrparam 0000  
             __size_of_SendLCD 0030                       __Lrparam 0000               __size_of_SetLine 002E  
                 __Lsmallconst 0300                    check_data@i 0017          ?_InterruptHandlerHigh 0001  
                     __ptext10 0326                       __ptext11 07FE                       __ptext12 0768  
                     __ptext13 084A                       __ptext14 07CE                       __ptext15 06A2  
                     __ptext16 08A2                  __size_of_main 0006            __end_of_processRFID 0562  
                     int$flags 0039            _InterruptHandlerLow 0018                     _LCD_String 0768  
                   _INTCONbits 000FF2                    ??_init_RFID 0027                       intlevel1 0000  
                     intlevel2 0000           ?_InterruptHandlerLow 0001                     _OSCCONbits 000FD3  
   processRFID@position_in_buf 002C         ??_InterruptHandlerHigh 001E                    _processRFID 0462  
        ??_InterruptHandlerLow 0026  
