

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Feb 21 15:34:18 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4331 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _PIE1bits	set	3997
    69  0000                     _RCSTAbits	set	4011
    70  0000                     _TXSTAbits	set	4012
    71  0000                     _BAUDCONbits	set	4010
    72  0000                     _SPBRGH	set	4016
    73  0000                     _SPBRG	set	4015
    74  0000                     _TRISAbits	set	3986
    75  0000                     _TRISDbits	set	3989
    76  0000                     _LATAbits	set	3977
    77  0000                     _LATDbits	set	3980
    78  0000                     _LATCbits	set	3979
    79  0000                     _LATB	set	3978
    80  0000                     _PTPERH	set	3962
    81  0000                     _PTPERL	set	3963
    82  0000                     _PWMCON1	set	3950
    83  0000                     _PWMCON0	set	3951
    84  0000                     _PTCON1	set	3966
    85  0000                     _PTCON0	set	3967
    86  0000                     _PORTCbits	set	3970
    87  0000                     _RCREG	set	4014
    88  0000                     _PIR1bits	set	3998
    89  0000                     _TRISCbits	set	3988
    90  0000                     _RCONbits	set	4048
    91  0000                     _INTCONbits	set	4082
    92  0000                     _OSCCONbits	set	4051
    93  0000                     _OSCCON	set	4051
    94                           
    95                           	psect	smallconst
    96  000300                     __psmallconst:
    97                           	opt callstack 0
    98  000300  00                 	db	0
    99  000301                     STR_3:
   100  000301  43                 	db	67	;'C'
   101  000302  48                 	db	72	;'H'
   102  000303  45                 	db	69	;'E'
   103  000304  43                 	db	67	;'C'
   104  000305  4B                 	db	75	;'K'
   105  000306  53                 	db	83	;'S'
   106  000307  55                 	db	85	;'U'
   107  000308  4D                 	db	77	;'M'
   108  000309  20                 	db	32
   109  00030A  46                 	db	70	;'F'
   110  00030B  41                 	db	65	;'A'
   111  00030C  49                 	db	73	;'I'
   112  00030D  4C                 	db	76	;'L'
   113  00030E  45                 	db	69	;'E'
   114  00030F  44                 	db	68	;'D'
   115  000310  00                 	db	0
   116  000311                     STR_2:
   117  000311  43                 	db	67	;'C'
   118  000312  48                 	db	72	;'H'
   119  000313  45                 	db	69	;'E'
   120  000314  43                 	db	67	;'C'
   121  000315  4B                 	db	75	;'K'
   122  000316  53                 	db	83	;'S'
   123  000317  55                 	db	85	;'U'
   124  000318  4D                 	db	77	;'M'
   125  000319  20                 	db	32
   126  00031A  50                 	db	80	;'P'
   127  00031B  41                 	db	65	;'A'
   128  00031C  53                 	db	83	;'S'
   129  00031D  53                 	db	83	;'S'
   130  00031E  45                 	db	69	;'E'
   131  00031F  44                 	db	68	;'D'
   132  000320  00                 	db	0
   133  000321                     STR_1:
   134  000321  52                 	db	82	;'R'
   135  000322  45                 	db	69	;'E'
   136  000323  53                 	db	83	;'S'
   137  000324  45                 	db	69	;'E'
   138  000325  54                 	db	84	;'T'
   139  000326  54                 	db	84	;'T'
   140  000327  49                 	db	73	;'I'
   141  000328  4E                 	db	78	;'N'
   142  000329  47                 	db	71	;'G'
   143  00032A  20                 	db	32
   144  00032B  52                 	db	82	;'R'
   145  00032C  4F                 	db	79	;'O'
   146  00032D  42                 	db	66	;'B'
   147  00032E  4F                 	db	79	;'O'
   148  00032F  54                 	db	84	;'T'
   149  000330  00                 	db	0
   150                           
   151                           ; #config settings
   152  000331  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           	psect	cinit
   155  0008CE                     __pcinit:
   156                           	opt callstack 0
   157  0008CE                     start_initialization:
   158                           	opt callstack 0
   159  0008CE                     __initialization:
   160                           	opt callstack 0
   161                           
   162                           ; Clear objects allocated to COMRAM (14 bytes)
   163  0008CE  EE00  F029         	lfsr	0,__pbssCOMRAM
   164  0008D2  0E0E               	movlw	14
   165  0008D4                     clear_0:
   166  0008D4  6AEE               	clrf	postinc0,c
   167  0008D6  06E8               	decf	wreg,f,c
   168  0008D8  E1FD               	bnz	clear_0
   169  0008DA                     end_of_initialization:
   170                           	opt callstack 0
   171  0008DA                     __end_of__initialization:
   172                           	opt callstack 0
   173  0008DA  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   174  0008DC  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   175  0008DE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   176  0008E0  6EF8               	movwf	tblptru,c
   177  0008E2  0E03               	movlw	high __Lsmallconst
   178  0008E4  6EF7               	movwf	tblptrh,c
   179  0008E6  0100               	movlb	0
   180  0008E8  EFA9  F003         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183  000029                     __pbssCOMRAM:
   184                           	opt callstack 0
   185  000029                     processRFID@position_in_buf:
   186                           	opt callstack 0
   187  000029                     	ds	1
   188  00002A                     _robot_mode:
   189                           	opt callstack 0
   190  00002A                     	ds	1
   191  00002B                     _RFIDbuf:
   192                           	opt callstack 0
   193  00002B                     	ds	12
   194                           
   195                           	psect	cstackBANK0
   196  000060                     __pcstackBANK0:
   197                           	opt callstack 0
   198  000060                     ??_InterruptHandlerLow:
   199                           
   200                           ; 1 bytes @ 0x0
   201  000060                     	ds	1
   202  000061                     ??_LCDout:
   203                           
   204                           ; 1 bytes @ 0x1
   205  000061                     	ds	1
   206  000062                     LCDout@number:
   207                           	opt callstack 0
   208                           
   209                           ; 1 bytes @ 0x2
   210  000062                     	ds	1
   211  000063                     SendLCD@type:
   212                           	opt callstack 0
   213                           
   214                           ; 1 bytes @ 0x3
   215  000063                     	ds	1
   216  000064                     SendLCD@Byte:
   217                           	opt callstack 0
   218                           
   219                           ; 1 bytes @ 0x4
   220  000064                     	ds	1
   221  000065                     ??_LCD_Init:
   222  000065                     ??_ClearLCD:
   223  000065                     LCD_String@string:
   224                           	opt callstack 0
   225                           
   226                           ; 2 bytes @ 0x5
   227  000065                     	ds	2
   228  000067                     ??_main:
   229                           
   230                           ; 1 bytes @ 0x7
   231  000067                     	ds	2
   232                           
   233                           	psect	cstackCOMRAM
   234  000001                     __pcstackCOMRAM:
   235                           	opt callstack 0
   236  000001                     ??i2_LCDout:
   237  000001                     
   238                           ; 1 bytes @ 0x0
   239  000001                     	ds	1
   240  000002                     i2LCDout@number:
   241                           	opt callstack 0
   242                           
   243                           ; 1 bytes @ 0x1
   244  000002                     	ds	1
   245  000003                     i2SendLCD@type:
   246                           	opt callstack 0
   247                           
   248                           ; 1 bytes @ 0x2
   249  000003                     	ds	1
   250  000004                     i2SendLCD@Byte:
   251                           	opt callstack 0
   252                           
   253                           ; 1 bytes @ 0x3
   254  000004                     	ds	1
   255  000005                     ??i2_ClearLCD:
   256  000005                     SetLine@line:
   257                           	opt callstack 0
   258  000005                     i2LCD_String@string:
   259                           	opt callstack 0
   260                           
   261                           ; 2 bytes @ 0x4
   262  000005                     	ds	1
   263  000006                     processRFID@RFIDbuf:
   264                           	opt callstack 0
   265                           
   266                           ; 2 bytes @ 0x5
   267  000006                     	ds	1
   268  000007                     check_RFID@dataBuf:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x6
   272  000007                     	ds	1
   273  000008                     processRFID@latestChar:
   274                           	opt callstack 0
   275                           
   276                           ; 1 bytes @ 0x7
   277  000008                     	ds	1
   278  000009                     ??_check_RFID:
   279  000009                     processRFID@i:
   280                           	opt callstack 0
   281                           
   282                           ; 2 bytes @ 0x8
   283  000009                     	ds	2
   284  00000B                     processRFID@i_1104:
   285                           	opt callstack 0
   286  00000B                     check_RFID@hexBuf:
   287                           	opt callstack 0
   288                           
   289                           ; 12 bytes @ 0xA
   290  00000B                     	ds	12
   291  000017                     check_RFID@byte1:
   292                           	opt callstack 0
   293                           
   294                           ; 1 bytes @ 0x16
   295  000017                     	ds	1
   296  000018                     check_RFID@byte2:
   297                           	opt callstack 0
   298                           
   299                           ; 1 bytes @ 0x17
   300  000018                     	ds	1
   301  000019                     check_RFID@byte3:
   302                           	opt callstack 0
   303                           
   304                           ; 1 bytes @ 0x18
   305  000019                     	ds	1
   306  00001A                     check_RFID@byte4:
   307                           	opt callstack 0
   308                           
   309                           ; 1 bytes @ 0x19
   310  00001A                     	ds	1
   311  00001B                     check_RFID@byte5:
   312                           	opt callstack 0
   313                           
   314                           ; 1 bytes @ 0x1A
   315  00001B                     	ds	1
   316  00001C                     check_RFID@checksum:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0x1B
   320  00001C                     	ds	1
   321  00001D                     check_RFID@i:
   322                           	opt callstack 0
   323                           
   324                           ; 2 bytes @ 0x1C
   325  00001D                     	ds	2
   326  00001F                     ??_InterruptHandlerHigh:
   327                           
   328                           ; 1 bytes @ 0x1E
   329  00001F                     	ds	9
   330  000028                     InterruptHandlerHigh@RFID_flag:
   331                           	opt callstack 0
   332                           
   333                           ; 1 bytes @ 0x27
   334  000028                     	ds	1
   335  000029                     
   336                           ; 1 bytes @ 0x28
   337 ;;
   338 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   339 ;;
   340 ;; *************** function _main *****************
   341 ;; Defined at:
   342 ;;		line 85 in file "main.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   356 ;;      Params:         0       0       0       0
   357 ;;      Locals:         0       0       0       0
   358 ;;      Temps:          0       2       0       0
   359 ;;      Totals:         0       2       0       0
   360 ;;Total ram usage:        2 bytes
   361 ;; Hardware stack levels required when called:   12
   362 ;; This function calls:
   363 ;;		_ClearLCD
   364 ;;		_LCD_String
   365 ;;		_setup
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text0
   372  000752                     __ptext0:
   373                           	opt callstack 0
   374  000752                     _main:
   375                           	opt callstack 19
   376                           
   377                           ;main.c: 88:   setup();
   378                           
   379                           ;incstack = 0
   380  000752  EC76  F004         	call	_setup	;wreg free
   381  000756                     l1495:
   382                           
   383                           ;main.c: 95:       while(robot_mode == 0)
   384  000756  502A               	movf	_robot_mode,w,c	;volatile
   385  000758  A4D8               	btfss	status,2,c
   386  00075A  D003               	goto	l1499
   387  00075C  D7FC               	goto	l1495
   388  00075E                     l1497:
   389                           
   390                           ;main.c: 102:       {;main.c: 104:           robot_mode = 2;
   391  00075E  0E02               	movlw	2
   392  000760  6E2A               	movwf	_robot_mode,c	;volatile
   393  000762                     l1499:
   394                           
   395                           ;main.c: 101:       while(robot_mode == 1)
   396  000762  042A               	decf	_robot_mode,w,c	;volatile
   397  000764  A4D8               	btfss	status,2,c
   398  000766  D01B               	goto	u890
   399  000768  D7FA               	goto	l1497
   400  00076A                     l1501:
   401                           
   402                           ;main.c: 111:           {;main.c: 112:               ClearLCD();
   403  00076A  EC57  F004         	call	_ClearLCD	;wreg free
   404                           
   405                           ;main.c: 113:               LCD_String("RESETTING ROBOT");
   406  00076E  0E21               	movlw	low STR_1
   407  000770  0100               	movlb	0	; () banked
   408  000772  6F65               	movwf	LCD_String@string& (0+255),b
   409  000774  0E03               	movlw	high STR_1
   410  000776  6F66               	movwf	(LCD_String@string+1)& (0+255),b
   411  000778  ECD4  F003         	call	_LCD_String	;wreg free
   412                           
   413                           ;main.c: 114:               _delay((unsigned long)((100)*(8000000/4000.0)));
   414  00077C  0E02               	movlw	2
   415  00077E  0100               	movlb	0	; () banked
   416  000780  6F68               	movwf	(??_main+1)& (0+255),b
   417  000782  0E04               	movlw	4
   418  000784  6F67               	movwf	??_main& (0+255),b
   419  000786  0EBA               	movlw	186
   420  000788                     u917:
   421  000788  2EE8               	decfsz	wreg,f,c
   422  00078A  D7FE               	bra	u917
   423  00078C  2F67               	decfsz	??_main& (0+255),f,b
   424  00078E  D7FC               	bra	u917
   425  000790  2F68               	decfsz	(??_main+1)& (0+255),f,b
   426  000792  D7FA               	bra	u917
   427  000794  F000               	nop	
   428                           
   429                           ;main.c: 115:               robot_mode = 0;
   430  000796  0E00               	movlw	0
   431  000798  6E2A               	movwf	_robot_mode,c	;volatile
   432  00079A                     l1509:
   433                           
   434                           ;main.c: 110:           while(PORTCbits.RC3 == 1)
   435  00079A  B682               	btfsc	3970,3,c	;volatile
   436  00079C  D7E6               	goto	l1501
   437  00079E                     u890:
   438                           
   439                           ;main.c: 108:       while(robot_mode == 2)
   440  00079E  0E02               	movlw	2
   441  0007A0  182A               	xorwf	_robot_mode,w,c	;volatile
   442  0007A2  A4D8               	btfss	status,2,c
   443  0007A4  D7D8               	goto	l1495
   444  0007A6  D7F9               	goto	l1509
   445  0007A8                     __end_of_main:
   446                           	opt callstack 0
   447                           
   448 ;; *************** function _setup *****************
   449 ;; Defined at:
   450 ;;		line 36 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2, status,0, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   464 ;;      Params:         0       0       0       0
   465 ;;      Locals:         0       0       0       0
   466 ;;      Temps:          0       0       0       0
   467 ;;      Totals:         0       0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels used:    1
   470 ;; Hardware stack levels required when called:   11
   471 ;; This function calls:
   472 ;;		_LCD_Init
   473 ;;		_init_RFID
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text1
   480  0008EC                     __ptext1:
   481                           	opt callstack 0
   482  0008EC                     _setup:
   483                           	opt callstack 19
   484                           
   485                           ;main.c: 39:     OSCCON = 0x72;
   486                           
   487                           ;incstack = 0
   488  0008EC  0E72               	movlw	114
   489  0008EE  6ED3               	movwf	4051,c	;volatile
   490  0008F0                     l37:
   491  0008F0  A4D3               	btfss	4051,2,c	;volatile
   492  0008F2  D7FE               	goto	l37
   493                           
   494                           ;main.c: 41:     INTCONbits.GIEH = 1;
   495  0008F4  8EF2               	bsf	4082,7,c	;volatile
   496                           
   497                           ;main.c: 42:     INTCONbits.GIEL = 1;
   498  0008F6  8CF2               	bsf	4082,6,c	;volatile
   499                           
   500                           ;main.c: 43:     RCONbits.IPEN=1;
   501  0008F8  8ED0               	bsf	4048,7,c	;volatile
   502                           
   503                           ;main.c: 45:     LCD_Init();
   504  0008FA  EC41  F002         	call	_LCD_Init	;wreg free
   505                           
   506                           ;main.c: 46:     init_RFID();
   507  0008FE  EC90  F004         	call	_init_RFID	;wreg free
   508                           
   509                           ;main.c: 48:     TRISCbits.RC3 = 1;
   510  000902  8694               	bsf	3988,3,c	;volatile
   511  000904  0012               	return		;funcret
   512  000906                     __end_of_setup:
   513                           	opt callstack 0
   514                           
   515 ;; *************** function _init_RFID *****************
   516 ;; Defined at:
   517 ;;		line 12 in file "RFID.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   531 ;;      Params:         0       0       0       0
   532 ;;      Locals:         0       0       0       0
   533 ;;      Temps:          0       0       0       0
   534 ;;      Totals:         0       0       0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; Hardware stack levels required when called:    7
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_setup
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text2
   546  000920                     __ptext2:
   547                           	opt callstack 0
   548  000920                     _init_RFID:
   549                           	opt callstack 22
   550                           
   551                           ;RFID.c: 15:     TRISCbits.RC7 = 1;
   552                           
   553                           ;incstack = 0
   554  000920  8E94               	bsf	3988,7,c	;volatile
   555                           
   556                           ;RFID.c: 18:     SPBRG = 203;
   557  000922  0ECB               	movlw	203
   558  000924  6EAF               	movwf	4015,c	;volatile
   559                           
   560                           ;RFID.c: 19:     SPBRGH = 0;
   561  000926  0E00               	movlw	0
   562  000928  6EB0               	movwf	4016,c	;volatile
   563                           
   564                           ;RFID.c: 21:     BAUDCONbits.BRG16=1;
   565  00092A  86AA               	bsf	4010,3,c	;volatile
   566                           
   567                           ;RFID.c: 22:     TXSTAbits.BRGH = 1;
   568  00092C  84AC               	bsf	4012,2,c	;volatile
   569                           
   570                           ;RFID.c: 23:     RCSTAbits.CREN = 1;
   571  00092E  88AB               	bsf	4011,4,c	;volatile
   572                           
   573                           ;RFID.c: 24:     RCSTAbits.SPEN = 1;
   574  000930  8EAB               	bsf	4011,7,c	;volatile
   575                           
   576                           ;RFID.c: 25:     TXSTAbits.TXEN = 1;
   577  000932  8AAC               	bsf	4012,5,c	;volatile
   578                           
   579                           ;RFID.c: 27:     PIE1bits.RC1IE = 1;
   580  000934  8A9D               	bsf	3997,5,c	;volatile
   581  000936  0012               	return		;funcret
   582  000938                     __end_of_init_RFID:
   583                           	opt callstack 0
   584                           
   585 ;; *************** function _LCD_Init *****************
   586 ;; Defined at:
   587 ;;		line 56 in file "LCDIO.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   601 ;;      Params:         0       0       0       0
   602 ;;      Locals:         0       0       0       0
   603 ;;      Temps:          0       1       0       0
   604 ;;      Totals:         0       1       0       0
   605 ;;Total ram usage:        1 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:   10
   608 ;; This function calls:
   609 ;;		_LCDout
   610 ;;		_SendLCD
   611 ;; This function is called by:
   612 ;;		_setup
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text3
   617  000482                     __ptext3:
   618                           	opt callstack 0
   619  000482                     _LCD_Init:
   620                           	opt callstack 19
   621                           
   622                           ;LCDIO.c: 59:  TRISCbits.RC0 = 0;
   623                           
   624                           ;incstack = 0
   625  000482  9094               	bcf	3988,0,c	;volatile
   626                           
   627                           ;LCDIO.c: 60:  TRISCbits.RC1 = 0;
   628  000484  9294               	bcf	3988,1,c	;volatile
   629                           
   630                           ;LCDIO.c: 61:  TRISCbits.RC2 = 0;
   631  000486  9494               	bcf	3988,2,c	;volatile
   632                           
   633                           ;LCDIO.c: 62:  TRISDbits.RD0 = 0;
   634  000488  9095               	bcf	3989,0,c	;volatile
   635                           
   636                           ;LCDIO.c: 63:  TRISDbits.RD1 = 0;
   637  00048A  9295               	bcf	3989,1,c	;volatile
   638                           
   639                           ;LCDIO.c: 64:  TRISAbits.RA6 = 0;
   640  00048C  9C92               	bcf	3986,6,c	;volatile
   641                           
   642                           ;LCDIO.c: 67:  LATDbits.LATD0 = 0;
   643  00048E  908C               	bcf	3980,0,c	;volatile
   644                           
   645                           ;LCDIO.c: 68:  LATDbits.LATD1 = 0;
   646  000490  928C               	bcf	3980,1,c	;volatile
   647                           
   648                           ;LCDIO.c: 69:  LATCbits.LATC2 = 0;
   649  000492  948B               	bcf	3979,2,c	;volatile
   650                           
   651                           ;LCDIO.c: 70:  LATCbits.LATC1 = 0;
   652  000494  928B               	bcf	3979,1,c	;volatile
   653                           
   654                           ;LCDIO.c: 71:  LATCbits.LATC0 = 0;
   655  000496  908B               	bcf	3979,0,c	;volatile
   656                           
   657                           ;LCDIO.c: 72:  LATAbits.LATA6 = 0;
   658  000498  9C89               	bcf	3977,6,c	;volatile
   659                           
   660                           ;LCDIO.c: 75:  _delay((unsigned long)((15)*(8000000/4000.0)));
   661  00049A  0E27               	movlw	39
   662  00049C  0100               	movlb	0	; () banked
   663  00049E  6F65               	movwf	??_LCD_Init& (0+255),b
   664  0004A0  0EF5               	movlw	245
   665  0004A2                     u927:
   666  0004A2  2EE8               	decfsz	wreg,f,c
   667  0004A4  D7FE               	bra	u927
   668  0004A6  2F65               	decfsz	??_LCD_Init& (0+255),f,b
   669  0004A8  D7FC               	bra	u927
   670                           
   671                           ;LCDIO.c: 76:  LCDout(0b0011);
   672  0004AA  0E03               	movlw	3
   673  0004AC  ECF2  F002         	call	_LCDout
   674                           
   675                           ;LCDIO.c: 77:  _delay((unsigned long)((5)*(8000000/4000.0)));
   676  0004B0  0E0D               	movlw	13
   677  0004B2  0100               	movlb	0	; () banked
   678  0004B4  6F65               	movwf	??_LCD_Init& (0+255),b
   679  0004B6  0EFB               	movlw	251
   680  0004B8                     u937:
   681  0004B8  2EE8               	decfsz	wreg,f,c
   682  0004BA  D7FE               	bra	u937
   683  0004BC  2F65               	decfsz	??_LCD_Init& (0+255),f,b
   684  0004BE  D7FC               	bra	u937
   685  0004C0  D000               	nop2	
   686                           
   687                           ;LCDIO.c: 78:  LCDout(0b0011);
   688  0004C2  0E03               	movlw	3
   689  0004C4  ECF2  F002         	call	_LCDout
   690                           
   691                           ;LCDIO.c: 79:  _delay((unsigned long)((200)*(8000000/4000000.0)));
   692  0004C8  0E85               	movlw	133
   693  0004CA                     u947:
   694  0004CA  2EE8               	decfsz	wreg,f,c
   695  0004CC  D7FE               	bra	u947
   696  0004CE  F000               	nop	
   697                           
   698                           ;LCDIO.c: 80:  LCDout(0b0011);
   699  0004D0  0E03               	movlw	3
   700  0004D2  ECF2  F002         	call	_LCDout
   701                           
   702                           ;LCDIO.c: 81:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   703  0004D6  0E21               	movlw	33
   704  0004D8                     u957:
   705  0004D8  2EE8               	decfsz	wreg,f,c
   706  0004DA  D7FE               	bra	u957
   707  0004DC  F000               	nop	
   708                           
   709                           ;LCDIO.c: 82:  LCDout(0b0010);
   710  0004DE  0E02               	movlw	2
   711  0004E0  ECF2  F002         	call	_LCDout
   712                           
   713                           ;LCDIO.c: 83:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   714  0004E4  0E21               	movlw	33
   715  0004E6                     u967:
   716  0004E6  2EE8               	decfsz	wreg,f,c
   717  0004E8  D7FE               	bra	u967
   718  0004EA  F000               	nop	
   719                           
   720                           ;LCDIO.c: 86:  SendLCD(0b00101000,0);
   721  0004EC  0E00               	movlw	0
   722  0004EE  0100               	movlb	0	; () banked
   723  0004F0  6F63               	movwf	SendLCD@type& (0+255),b
   724  0004F2  0E28               	movlw	40
   725  0004F4  ECF1  F003         	call	_SendLCD
   726                           
   727                           ;LCDIO.c: 87:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   728  0004F8  0E21               	movlw	33
   729  0004FA                     u977:
   730  0004FA  2EE8               	decfsz	wreg,f,c
   731  0004FC  D7FE               	bra	u977
   732  0004FE  F000               	nop	
   733                           
   734                           ;LCDIO.c: 90:  SendLCD(0b00001000,0);
   735  000500  0E00               	movlw	0
   736  000502  0100               	movlb	0	; () banked
   737  000504  6F63               	movwf	SendLCD@type& (0+255),b
   738  000506  0E08               	movlw	8
   739  000508  ECF1  F003         	call	_SendLCD
   740                           
   741                           ;LCDIO.c: 91:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   742  00050C  0E21               	movlw	33
   743  00050E                     u987:
   744  00050E  2EE8               	decfsz	wreg,f,c
   745  000510  D7FE               	bra	u987
   746  000512  F000               	nop	
   747                           
   748                           ;LCDIO.c: 94:  SendLCD(0b00000001,0);
   749  000514  0E00               	movlw	0
   750  000516  0100               	movlb	0	; () banked
   751  000518  6F63               	movwf	SendLCD@type& (0+255),b
   752  00051A  0E01               	movlw	1
   753  00051C  ECF1  F003         	call	_SendLCD
   754                           
   755                           ;LCDIO.c: 95:  _delay((unsigned long)((5)*(8000000/4000.0)));
   756  000520  0E0D               	movlw	13
   757  000522  0100               	movlb	0	; () banked
   758  000524  6F65               	movwf	??_LCD_Init& (0+255),b
   759  000526  0EFB               	movlw	251
   760  000528                     u997:
   761  000528  2EE8               	decfsz	wreg,f,c
   762  00052A  D7FE               	bra	u997
   763  00052C  2F65               	decfsz	??_LCD_Init& (0+255),f,b
   764  00052E  D7FC               	bra	u997
   765  000530  D000               	nop2	
   766                           
   767                           ;LCDIO.c: 98:  SendLCD(0b00000110,0);
   768  000532  0E00               	movlw	0
   769  000534  0100               	movlb	0	; () banked
   770  000536  6F63               	movwf	SendLCD@type& (0+255),b
   771  000538  0E06               	movlw	6
   772  00053A  ECF1  F003         	call	_SendLCD
   773                           
   774                           ;LCDIO.c: 99:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   775  00053E  0E21               	movlw	33
   776  000540                     u1007:
   777  000540  2EE8               	decfsz	wreg,f,c
   778  000542  D7FE               	bra	u1007
   779  000544  F000               	nop	
   780                           
   781                           ;LCDIO.c: 102:  SendLCD(0b00001100,0);
   782  000546  0E00               	movlw	0
   783  000548  0100               	movlb	0	; () banked
   784  00054A  6F63               	movwf	SendLCD@type& (0+255),b
   785  00054C  0E0C               	movlw	12
   786  00054E  ECF1  F003         	call	_SendLCD
   787                           
   788                           ;LCDIO.c: 103:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   789  000552  0E21               	movlw	33
   790  000554                     u1017:
   791  000554  2EE8               	decfsz	wreg,f,c
   792  000556  D7FE               	bra	u1017
   793  000558  F000               	nop	
   794  00055A  0012               	return		;funcret
   795  00055C                     __end_of_LCD_Init:
   796                           	opt callstack 0
   797                           
   798 ;; *************** function _LCD_String *****************
   799 ;; Defined at:
   800 ;;		line 119 in file "LCDIO.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;  string          2    5[BANK0 ] PTR unsigned char 
   803 ;;		 -> STR_3(16), STR_2(16), STR_1(16), 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   815 ;;      Params:         0       2       0       0
   816 ;;      Locals:         0       0       0       0
   817 ;;      Temps:          0       0       0       0
   818 ;;      Totals:         0       2       0       0
   819 ;;Total ram usage:        2 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:   10
   822 ;; This function calls:
   823 ;;		_SendLCD
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text4
   830  0007A8                     __ptext4:
   831                           	opt callstack 0
   832  0007A8                     _LCD_String:
   833                           	opt callstack 20
   834                           
   835                           ;LCDIO.c: 121: while(*string != 0){
   836                           
   837                           ;incstack = 0
   838  0007A8  D012               	goto	l1491
   839  0007AA                     l1485:
   840                           
   841                           ;LCDIO.c: 124: SendLCD(*string++,1);
   842  0007AA  0E01               	movlw	1
   843  0007AC  0100               	movlb	0	; () banked
   844  0007AE  6F63               	movwf	SendLCD@type& (0+255),b
   845  0007B0  C065  FFF6         	movff	LCD_String@string,tblptrl
   846  0007B4  C066  FFF7         	movff	LCD_String@string+1,tblptrh
   847  0007B8                     	if	0	;tblptru may be non-zero
   848  0007B8                     	endif
   849  0007B8                     	if	0	;tblptru may be non-zero
   850  0007B8                     	endif
   851  0007B8  0008               	tblrd		*
   852  0007BA  50F5               	movf	tablat,w,c
   853  0007BC  ECF1  F003         	call	_SendLCD
   854  0007C0  0100               	movlb	0	; () banked
   855  0007C2  4B65               	infsnz	LCD_String@string& (0+255),f,b
   856  0007C4  2B66               	incf	(LCD_String@string+1)& (0+255),f,b
   857                           
   858                           ; BSR set to: 0
   859                           ;LCDIO.c: 125:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   860  0007C6  0E21               	movlw	33
   861  0007C8                     u1027:
   862  0007C8  2EE8               	decfsz	wreg,f,c
   863  0007CA  D7FE               	bra	u1027
   864  0007CC  F000               	nop	
   865  0007CE                     l1491:
   866                           
   867                           ;LCDIO.c: 121: while(*string != 0){
   868  0007CE  C065  FFF6         	movff	LCD_String@string,tblptrl
   869  0007D2  C066  FFF7         	movff	LCD_String@string+1,tblptrh
   870  0007D6                     	if	0	;tblptru may be non-zero
   871  0007D6                     	endif
   872  0007D6                     	if	0	;tblptru may be non-zero
   873  0007D6                     	endif
   874  0007D6  0008               	tblrd		*
   875  0007D8  50F5               	movf	tablat,w,c
   876  0007DA  0900               	iorlw	0
   877  0007DC  B4D8               	btfsc	status,2,c
   878  0007DE  0012               	return	
   879  0007E0  D7E4               	goto	l1485
   880  0007E2                     __end_of_LCD_String:
   881                           	opt callstack 0
   882                           
   883 ;; *************** function _ClearLCD *****************
   884 ;; Defined at:
   885 ;;		line 137 in file "LCDIO.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   899 ;;      Params:         0       0       0       0
   900 ;;      Locals:         0       0       0       0
   901 ;;      Temps:          0       1       0       0
   902 ;;      Totals:         0       1       0       0
   903 ;;Total ram usage:        1 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:   10
   906 ;; This function calls:
   907 ;;		_SendLCD
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text5
   914  0008AE                     __ptext5:
   915                           	opt callstack 0
   916  0008AE                     _ClearLCD:
   917                           	opt callstack 20
   918                           
   919                           ;LCDIO.c: 138:     SendLCD(0b00000001,0);
   920                           
   921                           ;incstack = 0
   922  0008AE  0E00               	movlw	0
   923  0008B0  0100               	movlb	0	; () banked
   924  0008B2  6F63               	movwf	SendLCD@type& (0+255),b
   925  0008B4  0E01               	movlw	1
   926  0008B6  ECF1  F003         	call	_SendLCD
   927                           
   928                           ;LCDIO.c: 139:     _delay((unsigned long)((5)*(8000000/4000.0)));
   929  0008BA  0E0D               	movlw	13
   930  0008BC  0100               	movlb	0	; () banked
   931  0008BE  6F65               	movwf	??_ClearLCD& (0+255),b
   932  0008C0  0EFB               	movlw	251
   933  0008C2                     u1037:
   934  0008C2  2EE8               	decfsz	wreg,f,c
   935  0008C4  D7FE               	bra	u1037
   936  0008C6  2F65               	decfsz	??_ClearLCD& (0+255),f,b
   937  0008C8  D7FC               	bra	u1037
   938  0008CA  D000               	nop2	
   939  0008CC  0012               	return		;funcret
   940  0008CE                     __end_of_ClearLCD:
   941                           	opt callstack 0
   942                           
   943 ;; *************** function _SendLCD *****************
   944 ;; Defined at:
   945 ;;		line 44 in file "LCDIO.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  Byte            1    wreg     unsigned char 
   948 ;;  type            1    3[BANK0 ] unsigned char 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  Byte            1    4[BANK0 ] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   960 ;;      Params:         0       1       0       0
   961 ;;      Locals:         0       1       0       0
   962 ;;      Temps:          0       0       0       0
   963 ;;      Totals:         0       2       0       0
   964 ;;Total ram usage:        2 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    9
   967 ;; This function calls:
   968 ;;		_LCDout
   969 ;; This function is called by:
   970 ;;		_LCD_Init
   971 ;;		_LCD_String
   972 ;;		_ClearLCD
   973 ;;		_ShiftLeft
   974 ;;		_ShiftRight
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text6
   979  0007E2                     __ptext6:
   980                           	opt callstack 0
   981  0007E2                     _SendLCD:
   982                           	opt callstack 19
   983                           
   984                           ;incstack = 0
   985                           ;SendLCD@Byte stored from wreg
   986  0007E2  0100               	movlb	0	; () banked
   987  0007E4  6F64               	movwf	SendLCD@Byte& (0+255),b
   988                           
   989                           ;LCDIO.c: 47:  LATAbits.LATA6 = type;
   990  0007E6  0100               	movlb	0	; () banked
   991  0007E8  B163               	btfsc	SendLCD@type& (0+255),0,b
   992  0007EA  D002               	bra	u845
   993  0007EC  9C89               	bcf	3977,6,c	;volatile
   994  0007EE  D001               	bra	u846
   995  0007F0                     u845:
   996  0007F0  8C89               	bsf	3977,6,c	;volatile
   997  0007F2                     u846:
   998                           
   999                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
  1000  0007F2  0100               	movlb	0	; () banked
  1001  0007F4  3964               	swapf	SendLCD@Byte& (0+255),w,b
  1002  0007F6  0B0F               	andlw	15
  1003  0007F8  0B0F               	andlw	15
  1004  0007FA  ECF2  F002         	call	_LCDout
  1005                           
  1006                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
  1007  0007FE  0E06               	movlw	6
  1008  000800                     u1047:
  1009  000800  2EE8               	decfsz	wreg,f,c
  1010  000802  D7FE               	bra	u1047
  1011  000804  D000               	nop2	
  1012                           
  1013                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
  1014  000806  0100               	movlb	0	; () banked
  1015  000808  5164               	movf	SendLCD@Byte& (0+255),w,b
  1016  00080A  0B0F               	andlw	15
  1017  00080C  ECF2  F002         	call	_LCDout
  1018                           
  1019                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1020  000810  0E21               	movlw	33
  1021  000812                     u1057:
  1022  000812  2EE8               	decfsz	wreg,f,c
  1023  000814  D7FE               	bra	u1057
  1024  000816  F000               	nop	
  1025  000818  0012               	return		;funcret
  1026  00081A                     __end_of_SendLCD:
  1027                           	opt callstack 0
  1028                           
  1029 ;; *************** function _LCDout *****************
  1030 ;; Defined at:
  1031 ;;		line 31 in file "LCDIO.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  number          1    wreg     unsigned char 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  number          1    2[BANK0 ] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1045 ;;      Params:         0       0       0       0
  1046 ;;      Locals:         0       1       0       0
  1047 ;;      Temps:          0       1       0       0
  1048 ;;      Totals:         0       2       0       0
  1049 ;;Total ram usage:        2 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    8
  1052 ;; This function calls:
  1053 ;;		_E_TOG
  1054 ;; This function is called by:
  1055 ;;		_SendLCD
  1056 ;;		_LCD_Init
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text7
  1061  0005E4                     __ptext7:
  1062                           	opt callstack 0
  1063  0005E4                     _LCDout:
  1064                           	opt callstack 19
  1065                           
  1066                           ;incstack = 0
  1067                           ;LCDout@number stored from wreg
  1068  0005E4  0100               	movlb	0	; () banked
  1069  0005E6  6F62               	movwf	LCDout@number& (0+255),b
  1070                           
  1071                           ;LCDIO.c: 33:  LATCbits.LATC1 = (0b0001 & number);
  1072  0005E8  C062  F061         	movff	LCDout@number,??_LCDout
  1073  0005EC  0E01               	movlw	1
  1074  0005EE  0100               	movlb	0	; () banked
  1075  0005F0  1761               	andwf	??_LCDout& (0+255),f,b
  1076  0005F2  4761               	rlncf	??_LCDout& (0+255),f,b
  1077  0005F4  508B               	movf	3979,w,c	;volatile
  1078  0005F6  1961               	xorwf	??_LCDout& (0+255),w,b
  1079  0005F8  0BFD               	andlw	-3
  1080  0005FA  1961               	xorwf	??_LCDout& (0+255),w,b
  1081  0005FC  6E8B               	movwf	3979,c	;volatile
  1082                           
  1083                           ;LCDIO.c: 34:  LATCbits.LATC2 = (0b0010 & number) >> 1;
  1084  0005FE  C062  F061         	movff	LCDout@number,??_LCDout
  1085  000602  90D8               	bcf	status,0,c
  1086  000604  3361               	rrcf	??_LCDout& (0+255),f,b
  1087  000606  0E01               	movlw	1
  1088  000608  1761               	andwf	??_LCDout& (0+255),f,b
  1089  00060A  4761               	rlncf	??_LCDout& (0+255),f,b
  1090  00060C  4761               	rlncf	??_LCDout& (0+255),f,b
  1091  00060E  508B               	movf	3979,w,c	;volatile
  1092  000610  1961               	xorwf	??_LCDout& (0+255),w,b
  1093  000612  0BFB               	andlw	-5
  1094  000614  1961               	xorwf	??_LCDout& (0+255),w,b
  1095  000616  6E8B               	movwf	3979,c	;volatile
  1096                           
  1097                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
  1098  000618  C062  F061         	movff	LCDout@number,??_LCDout
  1099  00061C  90D8               	bcf	status,0,c
  1100  00061E  3361               	rrcf	??_LCDout& (0+255),f,b
  1101  000620  90D8               	bcf	status,0,c
  1102  000622  3361               	rrcf	??_LCDout& (0+255),f,b
  1103  000624  0E01               	movlw	1
  1104  000626  1761               	andwf	??_LCDout& (0+255),f,b
  1105  000628  508C               	movf	3980,w,c	;volatile
  1106  00062A  1961               	xorwf	??_LCDout& (0+255),w,b
  1107  00062C  0BFE               	andlw	-2
  1108  00062E  1961               	xorwf	??_LCDout& (0+255),w,b
  1109  000630  6E8C               	movwf	3980,c	;volatile
  1110                           
  1111                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
  1112  000632  C062  F061         	movff	LCDout@number,??_LCDout
  1113  000636  90D8               	bcf	status,0,c
  1114  000638  3361               	rrcf	??_LCDout& (0+255),f,b
  1115  00063A  90D8               	bcf	status,0,c
  1116  00063C  3361               	rrcf	??_LCDout& (0+255),f,b
  1117  00063E  90D8               	bcf	status,0,c
  1118  000640  3361               	rrcf	??_LCDout& (0+255),f,b
  1119  000642  0E01               	movlw	1
  1120  000644  1761               	andwf	??_LCDout& (0+255),f,b
  1121  000646  4761               	rlncf	??_LCDout& (0+255),f,b
  1122  000648  508C               	movf	3980,w,c	;volatile
  1123  00064A  1961               	xorwf	??_LCDout& (0+255),w,b
  1124  00064C  0BFD               	andlw	-3
  1125  00064E  1961               	xorwf	??_LCDout& (0+255),w,b
  1126  000650  6E8C               	movwf	3980,c	;volatile
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;LCDIO.c: 39:  E_TOG();
  1130  000652  EC9C  F004         	call	_E_TOG	;wreg free
  1131                           
  1132                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1133  000656  0E03               	movlw	3
  1134  000658                     u1067:
  1135  000658  2EE8               	decfsz	wreg,f,c
  1136  00065A  D7FE               	bra	u1067
  1137  00065C  F000               	nop	
  1138  00065E  0012               	return		;funcret
  1139  000660                     __end_of_LCDout:
  1140                           	opt callstack 0
  1141                           
  1142 ;; *************** function _E_TOG *****************
  1143 ;; Defined at:
  1144 ;;		line 23 in file "LCDIO.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1158 ;;      Params:         0       0       0       0
  1159 ;;      Locals:         0       0       0       0
  1160 ;;      Temps:          0       0       0       0
  1161 ;;      Totals:         0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    7
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_LCDout
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text8
  1173  000938                     __ptext8:
  1174                           	opt callstack 0
  1175  000938                     _E_TOG:
  1176                           	opt callstack 19
  1177                           
  1178                           ;LCDIO.c: 25: LATCbits.LATC0 = 1;
  1179                           
  1180                           ;incstack = 0
  1181  000938  808B               	bsf	3979,0,c	;volatile
  1182                           
  1183                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1184  00093A  0E03               	movlw	3
  1185  00093C                     u1077:
  1186  00093C  2EE8               	decfsz	wreg,f,c
  1187  00093E  D7FE               	bra	u1077
  1188  000940  F000               	nop	
  1189                           
  1190                           ;LCDIO.c: 27: LATCbits.LATC0 = 0;
  1191  000942  908B               	bcf	3979,0,c	;volatile
  1192  000944  0012               	return		;funcret
  1193  000946                     __end_of_E_TOG:
  1194                           	opt callstack 0
  1195                           
  1196 ;; *************** function _InterruptHandlerLow *****************
  1197 ;; Defined at:
  1198 ;;		line 79 in file "main.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		None
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1212 ;;      Params:         0       0       0       0
  1213 ;;      Locals:         0       0       0       0
  1214 ;;      Temps:          0       1       0       0
  1215 ;;      Totals:         0       1       0       0
  1216 ;;Total ram usage:        1 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    6
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		Interrupt level 1
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	intcodelo
  1227  000018                     __pintcodelo:
  1228                           	opt callstack 0
  1229  000018                     _InterruptHandlerLow:
  1230                           	opt callstack 19
  1231                           
  1232                           ;incstack = 0
  1233  000018  8037               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1234  00001A  CFE0 F060          	movff	bsr,??_InterruptHandlerLow
  1235  00001E  C060  FFE0         	movff	??_InterruptHandlerLow,bsr
  1236  000022  9037               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1237  000024  0010               	retfie	
  1238  000026                     __end_of_InterruptHandlerLow:
  1239                           	opt callstack 0
  1240                           
  1241 ;; *************** function _InterruptHandlerHigh *****************
  1242 ;; Defined at:
  1243 ;;		line 52 in file "main.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  temp            1    0        unsigned char 
  1248 ;;  RFID_flag       1   39[COMRAM] unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1258 ;;      Params:         0       0       0       0
  1259 ;;      Locals:         2       0       0       0
  1260 ;;      Temps:          8       0       0       0
  1261 ;;      Totals:        10       0       0       0
  1262 ;;Total ram usage:       10 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    5
  1265 ;; This function calls:
  1266 ;;		_check_RFID
  1267 ;;		_processRFID
  1268 ;; This function is called by:
  1269 ;;		Interrupt level 2
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	intcode
  1274  000008                     __pintcode:
  1275                           	opt callstack 0
  1276  000008                     _InterruptHandlerHigh:
  1277                           	opt callstack 19
  1278                           
  1279                           ;incstack = 0
  1280  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1281  00000A  EF30  F003         	goto	int_func
  1282                           
  1283                           	psect	intcode_body
  1284  000660                     __pintcode_body:
  1285                           	opt callstack 19
  1286  000660                     int_func:
  1287                           	opt callstack 19
  1288  000660  CFE1 F01F          	movff	fsr1l,??_InterruptHandlerHigh
  1289  000664  CFE2 F020          	movff	fsr1h,??_InterruptHandlerHigh+1
  1290  000668  CFD9 F021          	movff	fsr2l,??_InterruptHandlerHigh+2
  1291  00066C  CFDA F022          	movff	fsr2h,??_InterruptHandlerHigh+3
  1292  000670  CFF6 F023          	movff	tblptrl,??_InterruptHandlerHigh+4
  1293  000674  CFF7 F024          	movff	tblptrh,??_InterruptHandlerHigh+5
  1294  000678  CFF8 F025          	movff	tblptru,??_InterruptHandlerHigh+6
  1295  00067C  CFF5 F026          	movff	tablat,??_InterruptHandlerHigh+7
  1296                           
  1297                           ;main.c: 56:     if((PIR1bits.RCIF) && (robot_mode == 0))
  1298  000680  AA9E               	btfss	3998,5,c	;volatile
  1299  000682  D018               	goto	i2l45
  1300  000684  502A               	movf	_robot_mode,w,c	;volatile
  1301  000686  A4D8               	btfss	status,2,c
  1302  000688  D015               	goto	i2l45
  1303                           
  1304                           ;main.c: 57:     {;main.c: 60:         char RFID_flag = processRFID(RFIDbuf, RCREG);
  1305  00068A  0E2B               	movlw	low _RFIDbuf
  1306  00068C  6E06               	movwf	processRFID@RFIDbuf,c
  1307  00068E  0E00               	movlw	high _RFIDbuf
  1308  000690  6E07               	movwf	processRFID@RFIDbuf+1,c
  1309  000692  CFAE F008          	movff	4014,processRFID@latestChar	;volatile
  1310  000696  ECAE  F002         	call	_processRFID	;wreg free
  1311  00069A  6E28               	movwf	InterruptHandlerHigh@RFID_flag,c
  1312                           
  1313                           ;main.c: 64:         if(RFID_flag == 1)
  1314  00069C  0428               	decf	InterruptHandlerHigh@RFID_flag,w,c
  1315  00069E  A4D8               	btfss	status,2,c
  1316  0006A0  D00A               	goto	i2l48
  1317                           
  1318                           ;main.c: 65:         {;main.c: 66:             check_RFID(RFIDbuf);
  1319  0006A2  0E2B               	movlw	low _RFIDbuf
  1320  0006A4  6E07               	movwf	check_RFID@dataBuf,c
  1321  0006A6  0E00               	movlw	high _RFIDbuf
  1322  0006A8  6E08               	movwf	check_RFID@dataBuf+1,c
  1323  0006AA  EC99  F001         	call	_check_RFID	;wreg free
  1324                           
  1325                           ;main.c: 67:             robot_mode = 1;
  1326  0006AE  0E01               	movlw	1
  1327  0006B0  6E2A               	movwf	_robot_mode,c	;volatile
  1328  0006B2  D001               	goto	i2l48
  1329  0006B4                     i2l45:
  1330  0006B4  50AE               	movf	4014,w,c	;volatile
  1331  0006B6                     i2l48:
  1332  0006B6  C026  FFF5         	movff	??_InterruptHandlerHigh+7,tablat
  1333  0006BA  C025  FFF8         	movff	??_InterruptHandlerHigh+6,tblptru
  1334  0006BE  C024  FFF7         	movff	??_InterruptHandlerHigh+5,tblptrh
  1335  0006C2  C023  FFF6         	movff	??_InterruptHandlerHigh+4,tblptrl
  1336  0006C6  C022  FFDA         	movff	??_InterruptHandlerHigh+3,fsr2h
  1337  0006CA  C021  FFD9         	movff	??_InterruptHandlerHigh+2,fsr2l
  1338  0006CE  C020  FFE2         	movff	??_InterruptHandlerHigh+1,fsr1h
  1339  0006D2  C01F  FFE1         	movff	??_InterruptHandlerHigh,fsr1l
  1340  0006D6  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1341  0006D8  0011               	retfie		f
  1342  0006DA                     __end_of_InterruptHandlerHigh:
  1343                           	opt callstack 0
  1344                           
  1345 ;; *************** function _processRFID *****************
  1346 ;; Defined at:
  1347 ;;		line 32 in file "RFID.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  RFIDbuf         2    5[COMRAM] PTR unsigned char 
  1350 ;;		 -> RFIDbuf(12), 
  1351 ;;  latestChar      1    7[COMRAM] unsigned char 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  i               1   10[COMRAM] unsigned char 
  1354 ;;  i               2    8[COMRAM] int 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      unsigned char 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1364 ;;      Params:         3       0       0       0
  1365 ;;      Locals:         3       0       0       0
  1366 ;;      Temps:          0       0       0       0
  1367 ;;      Totals:         6       0       0       0
  1368 ;;Total ram usage:        6 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    4
  1371 ;; This function calls:
  1372 ;;		_SetLine
  1373 ;;		i2_ClearLCD
  1374 ;;		i2_SendLCD
  1375 ;; This function is called by:
  1376 ;;		_InterruptHandlerHigh
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text11
  1381  00055C                     __ptext11:
  1382                           	opt callstack 0
  1383  00055C                     _processRFID:
  1384                           	opt callstack 19
  1385                           
  1386                           ;RFID.c: 32: char processRFID(char RFIDbuf[], char latestChar);RFID.c: 33: {;RFID.c: 37:
      +                               static char position_in_buf;;RFID.c: 40:     if(latestChar == 0x03)
  1387                           
  1388                           ;incstack = 0
  1389  00055C  0E03               	movlw	3
  1390  00055E  1808               	xorwf	processRFID@latestChar,w,c
  1391  000560  A4D8               	btfss	status,2,c
  1392  000562  D020               	goto	i2l1313
  1393                           
  1394                           ;RFID.c: 41:     {;RFID.c: 42:         ClearLCD();
  1395  000564  EC83  F004         	call	i2_ClearLCD	;wreg free
  1396                           
  1397                           ;RFID.c: 43:         SetLine(1);
  1398  000568  0E01               	movlw	1
  1399  00056A  EC40  F004         	call	_SetLine
  1400                           
  1401                           ;RFID.c: 44:         for(int i=0;i<10;i++)
  1402  00056E  0E00               	movlw	0
  1403  000570  6E0A               	movwf	processRFID@i+1,c
  1404  000572  0E00               	movlw	0
  1405  000574  6E09               	movwf	processRFID@i,c
  1406  000576                     i2l1301:
  1407                           
  1408                           ;RFID.c: 45:         {;RFID.c: 46:             SendLCD(RFIDbuf[i],1);
  1409  000576  0E01               	movlw	1
  1410  000578  6E03               	movwf	i2SendLCD@type,c
  1411  00057A  5009               	movf	processRFID@i,w,c
  1412  00057C  2406               	addwf	processRFID@RFIDbuf,w,c
  1413  00057E  6ED9               	movwf	fsr2l,c
  1414  000580  500A               	movf	processRFID@i+1,w,c
  1415  000582  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  1416  000584  6EDA               	movwf	fsr2h,c
  1417  000586  50DF               	movf	indf2,w,c
  1418  000588  EC28  F004         	call	i2_SendLCD
  1419                           
  1420                           ;RFID.c: 47:         }
  1421  00058C  4A09               	infsnz	processRFID@i,f,c
  1422  00058E  2A0A               	incf	processRFID@i+1,f,c
  1423  000590  BE0A               	btfsc	processRFID@i+1,7,c
  1424  000592  D7F1               	goto	i2l1301
  1425  000594  500A               	movf	processRFID@i+1,w,c
  1426  000596  E104               	bnz	i2u53_40
  1427  000598  0E0A               	movlw	10
  1428  00059A  5C09               	subwf	processRFID@i,w,c
  1429  00059C  A0D8               	btfss	status,0,c
  1430  00059E  D7EB               	goto	i2l1301
  1431  0005A0                     i2u53_40:
  1432                           
  1433                           ;RFID.c: 49:         return 1;
  1434  0005A0  0E01               	movlw	1
  1435  0005A2  0012               	return	
  1436  0005A4                     i2l1313:
  1437                           
  1438                           ;RFID.c: 52:     {;RFID.c: 55:        if(latestChar == 0x02)
  1439  0005A4  0E02               	movlw	2
  1440  0005A6  1808               	xorwf	processRFID@latestChar,w,c
  1441  0005A8  A4D8               	btfss	status,2,c
  1442  0005AA  D012               	goto	i2l1333
  1443                           
  1444                           ;RFID.c: 56:         {;RFID.c: 57:            position_in_buf = 0;
  1445  0005AC  0E00               	movlw	0
  1446  0005AE  6E29               	movwf	processRFID@position_in_buf,c
  1447                           
  1448                           ;RFID.c: 58:            for(char i=0 ;i<12 ;i++)
  1449  0005B0  0E00               	movlw	0
  1450  0005B2  6E0B               	movwf	processRFID@i_1104,c
  1451  0005B4                     i2l1321:
  1452                           
  1453                           ;RFID.c: 59:            {;RFID.c: 60:                RFIDbuf[i] = 0;
  1454  0005B4  500B               	movf	processRFID@i_1104,w,c
  1455  0005B6  2406               	addwf	processRFID@RFIDbuf,w,c
  1456  0005B8  6ED9               	movwf	fsr2l,c
  1457  0005BA  0E00               	movlw	0
  1458  0005BC  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  1459  0005BE  6EDA               	movwf	fsr2h,c
  1460  0005C0  0E00               	movlw	0
  1461  0005C2  6EDF               	movwf	indf2,c
  1462                           
  1463                           ;RFID.c: 61:            }
  1464  0005C4  2A0B               	incf	processRFID@i_1104,f,c
  1465  0005C6  0E0B               	movlw	11
  1466  0005C8  640B               	cpfsgt	processRFID@i_1104,c
  1467  0005CA  D7F4               	goto	i2l1321
  1468  0005CC                     i2u55_40:
  1469                           
  1470                           ;RFID.c: 63:            return 0;
  1471  0005CC  0E00               	movlw	0
  1472  0005CE  0012               	return	
  1473  0005D0                     i2l1333:
  1474                           
  1475                           ;RFID.c: 67:         {;RFID.c: 68:             RFIDbuf[position_in_buf] = latestChar;
  1476  0005D0  5029               	movf	processRFID@position_in_buf,w,c
  1477  0005D2  2406               	addwf	processRFID@RFIDbuf,w,c
  1478  0005D4  6ED9               	movwf	fsr2l,c
  1479  0005D6  0E00               	movlw	0
  1480  0005D8  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  1481  0005DA  6EDA               	movwf	fsr2h,c
  1482  0005DC  C008  FFDF         	movff	processRFID@latestChar,indf2
  1483                           
  1484                           ;RFID.c: 69:             position_in_buf++;
  1485  0005E0  2A29               	incf	processRFID@position_in_buf,f,c
  1486  0005E2  D7F4               	goto	i2u55_40
  1487  0005E4                     __end_of_processRFID:
  1488                           	opt callstack 0
  1489                           
  1490 ;; *************** function i2_ClearLCD *****************
  1491 ;; Defined at:
  1492 ;;		line 137 in file "LCDIO.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1506 ;;      Params:         0       0       0       0
  1507 ;;      Locals:         0       0       0       0
  1508 ;;      Temps:          1       0       0       0
  1509 ;;      Totals:         1       0       0       0
  1510 ;;Total ram usage:        1 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; Hardware stack levels required when called:    3
  1513 ;; This function calls:
  1514 ;;		i2_SendLCD
  1515 ;; This function is called by:
  1516 ;;		_processRFID
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text12
  1521  000906                     __ptext12:
  1522                           	opt callstack 0
  1523  000906                     i2_ClearLCD:
  1524                           	opt callstack 19
  1525                           
  1526                           ;LCDIO.c: 138:     SendLCD(0b00000001,0);
  1527                           
  1528                           ;incstack = 0
  1529  000906  0E00               	movlw	0
  1530  000908  6E03               	movwf	i2SendLCD@type,c
  1531  00090A  0E01               	movlw	1
  1532  00090C  EC28  F004         	call	i2_SendLCD
  1533                           
  1534                           ;LCDIO.c: 139:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1535  000910  0E0D               	movlw	13
  1536  000912  6E05               	movwf	??i2_ClearLCD& (0+255),c
  1537  000914  0EFC               	movlw	252
  1538  000916                     i2u108_47:
  1539  000916  2EE8               	decfsz	wreg,f,c
  1540  000918  D7FE               	bra	i2u108_47
  1541  00091A  2E05               	decfsz	??i2_ClearLCD& (0+255),f,c
  1542  00091C  D7FC               	bra	i2u108_47
  1543  00091E  0012               	return		;funcret
  1544  000920                     __end_ofi2_ClearLCD:
  1545                           	opt callstack 0
  1546                           
  1547 ;; *************** function _check_RFID *****************
  1548 ;; Defined at:
  1549 ;;		line 77 in file "RFID.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  dataBuf         2    6[COMRAM] PTR unsigned char 
  1552 ;;		 -> RFIDbuf(12), 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  i               2   28[COMRAM] int 
  1555 ;;  hexBuf         12   10[COMRAM] unsigned char [12]
  1556 ;;  checksum        1   27[COMRAM] unsigned char 
  1557 ;;  byte5           1   26[COMRAM] unsigned char 
  1558 ;;  byte4           1   25[COMRAM] unsigned char 
  1559 ;;  byte3           1   24[COMRAM] unsigned char 
  1560 ;;  byte2           1   23[COMRAM] unsigned char 
  1561 ;;  byte1           1   22[COMRAM] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1571 ;;      Params:         2       0       0       0
  1572 ;;      Locals:        20       0       0       0
  1573 ;;      Temps:          2       0       0       0
  1574 ;;      Totals:        24       0       0       0
  1575 ;;Total ram usage:       24 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    4
  1578 ;; This function calls:
  1579 ;;		_SetLine
  1580 ;;		i2_LCD_String
  1581 ;; This function is called by:
  1582 ;;		_InterruptHandlerHigh
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text13
  1587  000332                     __ptext13:
  1588                           	opt callstack 0
  1589  000332                     _check_RFID:
  1590                           	opt callstack 19
  1591                           
  1592                           ;RFID.c: 77: void check_RFID(char dataBuf[]);RFID.c: 78: {;RFID.c: 80:     char hexBuf[1
      +                          2];;RFID.c: 82:     for(int i=0; i<12;i++)
  1593                           
  1594                           ;incstack = 0
  1595  000332  0E00               	movlw	0
  1596  000334  6E1E               	movwf	check_RFID@i+1,c
  1597  000336  0E00               	movlw	0
  1598  000338  6E1D               	movwf	check_RFID@i,c
  1599  00033A                     i2l1347:
  1600                           
  1601                           ;RFID.c: 83:     {;RFID.c: 84:         if ((dataBuf[i] >= '0') && (dataBuf[i] <= '9'))
  1602  00033A  501D               	movf	check_RFID@i,w,c
  1603  00033C  2407               	addwf	check_RFID@dataBuf,w,c
  1604  00033E  6ED9               	movwf	fsr2l,c
  1605  000340  501E               	movf	check_RFID@i+1,w,c
  1606  000342  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1607  000344  6EDA               	movwf	fsr2h,c
  1608  000346  0E2F               	movlw	47
  1609  000348  64DF               	cpfsgt	indf2,c
  1610  00034A  D018               	goto	i2l1353
  1611  00034C  501D               	movf	check_RFID@i,w,c
  1612  00034E  2407               	addwf	check_RFID@dataBuf,w,c
  1613  000350  6ED9               	movwf	fsr2l,c
  1614  000352  501E               	movf	check_RFID@i+1,w,c
  1615  000354  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1616  000356  6EDA               	movwf	fsr2h,c
  1617  000358  0E3A               	movlw	58
  1618  00035A  60DF               	cpfslt	indf2,c
  1619  00035C  D00F               	goto	i2l1353
  1620                           
  1621                           ;RFID.c: 85:         {;RFID.c: 86:             hexBuf[i] = dataBuf[i] - '0';
  1622  00035E  0E0B               	movlw	low check_RFID@hexBuf
  1623  000360  241D               	addwf	check_RFID@i,w,c
  1624  000362  6ED9               	movwf	fsr2l,c
  1625  000364  0E00               	movlw	high check_RFID@hexBuf
  1626  000366  201E               	addwfc	check_RFID@i+1,w,c
  1627  000368  6EDA               	movwf	fsr2h,c
  1628  00036A  501D               	movf	check_RFID@i,w,c
  1629  00036C  2407               	addwf	check_RFID@dataBuf,w,c
  1630  00036E  6EE1               	movwf	fsr1l,c
  1631  000370  501E               	movf	check_RFID@i+1,w,c
  1632  000372  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1633  000374  6EE2               	movwf	fsr1h,c
  1634  000376  50E7               	movf	indf1,w,c
  1635  000378  0FD0               	addlw	208
  1636  00037A  D020               	goto	L1
  1637  00037C                     i2l1353:
  1638  00037C  501D               	movf	check_RFID@i,w,c
  1639  00037E  2407               	addwf	check_RFID@dataBuf,w,c
  1640  000380  6ED9               	movwf	fsr2l,c
  1641  000382  501E               	movf	check_RFID@i+1,w,c
  1642  000384  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1643  000386  6EDA               	movwf	fsr2h,c
  1644  000388  0E40               	movlw	64
  1645  00038A  64DF               	cpfsgt	indf2,c
  1646  00038C  D018               	goto	i2l1359
  1647  00038E  501D               	movf	check_RFID@i,w,c
  1648  000390  2407               	addwf	check_RFID@dataBuf,w,c
  1649  000392  6ED9               	movwf	fsr2l,c
  1650  000394  501E               	movf	check_RFID@i+1,w,c
  1651  000396  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1652  000398  6EDA               	movwf	fsr2h,c
  1653  00039A  0E47               	movlw	71
  1654  00039C  60DF               	cpfslt	indf2,c
  1655  00039E  D00F               	goto	i2l1359
  1656                           
  1657                           ;RFID.c: 88:         {;RFID.c: 89:             hexBuf[i] = 10 + dataBuf[i] - 'A';
  1658  0003A0  0E0B               	movlw	low check_RFID@hexBuf
  1659  0003A2  241D               	addwf	check_RFID@i,w,c
  1660  0003A4  6ED9               	movwf	fsr2l,c
  1661  0003A6  0E00               	movlw	high check_RFID@hexBuf
  1662  0003A8  201E               	addwfc	check_RFID@i+1,w,c
  1663  0003AA  6EDA               	movwf	fsr2h,c
  1664  0003AC  501D               	movf	check_RFID@i,w,c
  1665  0003AE  2407               	addwf	check_RFID@dataBuf,w,c
  1666  0003B0  6EE1               	movwf	fsr1l,c
  1667  0003B2  501E               	movf	check_RFID@i+1,w,c
  1668  0003B4  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1669  0003B6  6EE2               	movwf	fsr1h,c
  1670  0003B8  50E7               	movf	indf1,w,c
  1671  0003BA  0FC9               	addlw	201
  1672  0003BC                     L1:
  1673  0003BC  6EDF               	movwf	indf2,c
  1674  0003BE                     i2l1359:
  1675                           
  1676                           ;RFID.c: 91:     }
  1677  0003BE  4A1D               	infsnz	check_RFID@i,f,c
  1678  0003C0  2A1E               	incf	check_RFID@i+1,f,c
  1679  0003C2  BE1E               	btfsc	check_RFID@i+1,7,c
  1680  0003C4  D7BA               	goto	i2l1347
  1681  0003C6  501E               	movf	check_RFID@i+1,w,c
  1682  0003C8  E104               	bnz	i2u60_40
  1683  0003CA  0E0C               	movlw	12
  1684  0003CC  5C1D               	subwf	check_RFID@i,w,c
  1685  0003CE  A0D8               	btfss	status,0,c
  1686  0003D0  D7B4               	goto	i2l1347
  1687  0003D2                     i2u60_40:
  1688                           
  1689                           ;RFID.c: 93:     char byte1 = 0x00 | (hexBuf[0] < 1) | hexBuf[1];
  1690  0003D2  500B               	movf	check_RFID@hexBuf,w,c
  1691  0003D4  A4D8               	btfss	status,2,c
  1692  0003D6  D002               	goto	i2u61_40
  1693  0003D8  0E01               	movlw	1
  1694  0003DA  D001               	goto	i2u62_40
  1695  0003DC                     i2u61_40:
  1696  0003DC  0E00               	movlw	0
  1697  0003DE                     i2u62_40:
  1698  0003DE  100C               	iorwf	check_RFID@hexBuf+1,w,c
  1699  0003E0  6E17               	movwf	check_RFID@byte1,c
  1700                           
  1701                           ;RFID.c: 94:     char byte2 = 0x00 | (hexBuf[2] < 1) | hexBuf[3];
  1702  0003E2  500D               	movf	check_RFID@hexBuf+2,w,c
  1703  0003E4  A4D8               	btfss	status,2,c
  1704  0003E6  D002               	goto	i2u63_40
  1705  0003E8  0E01               	movlw	1
  1706  0003EA  D001               	goto	i2u64_40
  1707  0003EC                     i2u63_40:
  1708  0003EC  0E00               	movlw	0
  1709  0003EE                     i2u64_40:
  1710  0003EE  100E               	iorwf	check_RFID@hexBuf+3,w,c
  1711  0003F0  6E18               	movwf	check_RFID@byte2,c
  1712                           
  1713                           ;RFID.c: 95:     char byte3 = 0x00 | (hexBuf[4] < 1) | hexBuf[5];
  1714  0003F2  500F               	movf	check_RFID@hexBuf+4,w,c
  1715  0003F4  A4D8               	btfss	status,2,c
  1716  0003F6  D002               	goto	i2u65_40
  1717  0003F8  0E01               	movlw	1
  1718  0003FA  D001               	goto	i2u66_40
  1719  0003FC                     i2u65_40:
  1720  0003FC  0E00               	movlw	0
  1721  0003FE                     i2u66_40:
  1722  0003FE  1010               	iorwf	check_RFID@hexBuf+5,w,c
  1723  000400  6E19               	movwf	check_RFID@byte3,c
  1724                           
  1725                           ;RFID.c: 96:     char byte4 = 0x00 | (hexBuf[6] < 1) | hexBuf[7];
  1726  000402  5011               	movf	check_RFID@hexBuf+6,w,c
  1727  000404  A4D8               	btfss	status,2,c
  1728  000406  D002               	goto	i2u67_40
  1729  000408  0E01               	movlw	1
  1730  00040A  D001               	goto	i2u68_40
  1731  00040C                     i2u67_40:
  1732  00040C  0E00               	movlw	0
  1733  00040E                     i2u68_40:
  1734  00040E  1012               	iorwf	check_RFID@hexBuf+7,w,c
  1735  000410  6E1A               	movwf	check_RFID@byte4,c
  1736                           
  1737                           ;RFID.c: 97:     char byte5 = 0x00 | (hexBuf[8] < 1) | hexBuf[9];
  1738  000412  5013               	movf	check_RFID@hexBuf+8,w,c
  1739  000414  A4D8               	btfss	status,2,c
  1740  000416  D002               	goto	i2u69_40
  1741  000418  0E01               	movlw	1
  1742  00041A  D001               	goto	i2u70_40
  1743  00041C                     i2u69_40:
  1744  00041C  0E00               	movlw	0
  1745  00041E                     i2u70_40:
  1746  00041E  1014               	iorwf	check_RFID@hexBuf+9,w,c
  1747  000420  6E1B               	movwf	check_RFID@byte5,c
  1748                           
  1749                           ;RFID.c: 98:     char checksum = 0x00 | (hexBuf[10] < 1) | hexBuf[11];
  1750  000422  5015               	movf	check_RFID@hexBuf+10,w,c
  1751  000424  A4D8               	btfss	status,2,c
  1752  000426  D002               	goto	i2u71_40
  1753  000428  0E01               	movlw	1
  1754  00042A  D001               	goto	i2u72_40
  1755  00042C                     i2u71_40:
  1756  00042C  0E00               	movlw	0
  1757  00042E                     i2u72_40:
  1758  00042E  1016               	iorwf	check_RFID@hexBuf+11,w,c
  1759  000430  6E1C               	movwf	check_RFID@checksum,c
  1760                           
  1761                           ;RFID.c: 101:     if(byte1^byte2^byte3^byte4^byte5 == checksum)
  1762  000432  5017               	movf	check_RFID@byte1,w,c
  1763  000434  1818               	xorwf	check_RFID@byte2,w,c
  1764  000436  1819               	xorwf	check_RFID@byte3,w,c
  1765  000438  181A               	xorwf	check_RFID@byte4,w,c
  1766  00043A  6E09               	movwf	??_check_RFID& (0+255),c
  1767  00043C  6A0A               	clrf	(??_check_RFID+1)& (0+255),c
  1768  00043E  501C               	movf	check_RFID@checksum,w,c
  1769  000440  181B               	xorwf	check_RFID@byte5,w,c
  1770  000442  A4D8               	btfss	status,2,c
  1771  000444  D002               	goto	i2u73_40
  1772  000446  0E01               	movlw	1
  1773  000448  D001               	goto	i2u74_40
  1774  00044A                     i2u73_40:
  1775  00044A  0E00               	movlw	0
  1776  00044C                     i2u74_40:
  1777  00044C  1A09               	xorwf	??_check_RFID,f,c
  1778  00044E  0E00               	movlw	0
  1779  000450  1A0A               	xorwf	??_check_RFID+1,f,c
  1780  000452  5009               	movf	??_check_RFID,w,c
  1781  000454  100A               	iorwf	??_check_RFID+1,w,c
  1782  000456  B4D8               	btfsc	status,2,c
  1783  000458  D00A               	goto	i2l1369
  1784                           
  1785                           ;RFID.c: 102:     {;RFID.c: 104:         SetLine(2);
  1786  00045A  0E02               	movlw	2
  1787  00045C  EC40  F004         	call	_SetLine
  1788                           
  1789                           ;RFID.c: 105:         LCD_String("CHECKSUM PASSED");
  1790  000460  0E11               	movlw	low STR_2
  1791  000462  6E05               	movwf	i2LCD_String@string,c
  1792  000464  0E03               	movlw	high STR_2
  1793  000466  6E06               	movwf	i2LCD_String@string+1,c
  1794  000468  EC0D  F004         	call	i2_LCD_String	;wreg free
  1795                           
  1796                           ;RFID.c: 106:     }
  1797  00046C  0012               	return	
  1798  00046E                     i2l1369:
  1799                           
  1800                           ;RFID.c: 109:         SetLine(2);
  1801  00046E  0E02               	movlw	2
  1802  000470  EC40  F004         	call	_SetLine
  1803                           
  1804                           ;RFID.c: 110:         LCD_String("CHECKSUM FAILED");
  1805  000474  0E01               	movlw	low STR_3
  1806  000476  6E05               	movwf	i2LCD_String@string,c
  1807  000478  0E03               	movlw	high STR_3
  1808  00047A  6E06               	movwf	i2LCD_String@string+1,c
  1809  00047C  EC0D  F004         	call	i2_LCD_String	;wreg free
  1810  000480  0012               	return		;funcret
  1811  000482                     __end_of_check_RFID:
  1812                           	opt callstack 0
  1813                           
  1814 ;; *************** function i2_LCD_String *****************
  1815 ;; Defined at:
  1816 ;;		line 119 in file "LCDIO.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  string          2    4[COMRAM] PTR unsigned char 
  1819 ;;		 -> STR_3(16), STR_2(16), STR_1(16), 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1831 ;;      Params:         2       0       0       0
  1832 ;;      Locals:         0       0       0       0
  1833 ;;      Temps:          0       0       0       0
  1834 ;;      Totals:         2       0       0       0
  1835 ;;Total ram usage:        2 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    3
  1838 ;; This function calls:
  1839 ;;		i2_SendLCD
  1840 ;; This function is called by:
  1841 ;;		_check_RFID
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text14
  1846  00081A                     __ptext14:
  1847                           	opt callstack 0
  1848  00081A                     i2_LCD_String:
  1849                           	opt callstack 19
  1850                           
  1851                           ;LCDIO.c: 121: while(*string != 0){
  1852                           
  1853                           ;incstack = 0
  1854  00081A  D010               	goto	i2l1277
  1855  00081C                     i2l1271:
  1856                           
  1857                           ;LCDIO.c: 124: SendLCD(*string++,1);
  1858  00081C  0E01               	movlw	1
  1859  00081E  6E03               	movwf	i2SendLCD@type,c
  1860  000820  C005  FFF6         	movff	i2LCD_String@string,tblptrl
  1861  000824  C006  FFF7         	movff	i2LCD_String@string+1,tblptrh
  1862  000828                     	if	0	;tblptru may be non-zero
  1863  000828                     	endif
  1864  000828                     	if	0	;tblptru may be non-zero
  1865  000828                     	endif
  1866  000828  0008               	tblrd		*
  1867  00082A  50F5               	movf	tablat,w,c
  1868  00082C  EC28  F004         	call	i2_SendLCD
  1869  000830  4A05               	infsnz	i2LCD_String@string,f,c
  1870  000832  2A06               	incf	i2LCD_String@string+1,f,c
  1871                           
  1872                           ;LCDIO.c: 125:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1873  000834  0E21               	movlw	33
  1874  000836                     i2u109_47:
  1875  000836  2EE8               	decfsz	wreg,f,c
  1876  000838  D7FE               	bra	i2u109_47
  1877  00083A  F000               	nop	
  1878  00083C                     i2l1277:
  1879                           
  1880                           ;LCDIO.c: 121: while(*string != 0){
  1881  00083C  C005  FFF6         	movff	i2LCD_String@string,tblptrl
  1882  000840  C006  FFF7         	movff	i2LCD_String@string+1,tblptrh
  1883  000844                     	if	0	;tblptru may be non-zero
  1884  000844                     	endif
  1885  000844                     	if	0	;tblptru may be non-zero
  1886  000844                     	endif
  1887  000844  0008               	tblrd		*
  1888  000846  50F5               	movf	tablat,w,c
  1889  000848  0900               	iorlw	0
  1890  00084A  B4D8               	btfsc	status,2,c
  1891  00084C  0012               	return	
  1892  00084E  D7E6               	goto	i2l1271
  1893  000850                     __end_ofi2_LCD_String:
  1894                           	opt callstack 0
  1895                           
  1896 ;; *************** function _SetLine *****************
  1897 ;; Defined at:
  1898 ;;		line 107 in file "LCDIO.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  line            1    wreg     unsigned char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  line            1    4[COMRAM] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1912 ;;      Params:         0       0       0       0
  1913 ;;      Locals:         1       0       0       0
  1914 ;;      Temps:          0       0       0       0
  1915 ;;      Totals:         1       0       0       0
  1916 ;;Total ram usage:        1 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    3
  1919 ;; This function calls:
  1920 ;;		i2_SendLCD
  1921 ;; This function is called by:
  1922 ;;		_processRFID
  1923 ;;		_check_RFID
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text15
  1928  000880                     __ptext15:
  1929                           	opt callstack 0
  1930  000880                     _SetLine:
  1931                           	opt callstack 19
  1932                           
  1933                           ;incstack = 0
  1934                           ;SetLine@line stored from wreg
  1935  000880  6E05               	movwf	SetLine@line,c
  1936                           
  1937                           ;LCDIO.c: 109:     if(line == 1){
  1938  000882  0405               	decf	SetLine@line,w,c
  1939  000884  A4D8               	btfss	status,2,c
  1940  000886  D005               	goto	i2l1263
  1941                           
  1942                           ;LCDIO.c: 110:         SendLCD(0x80,0);
  1943  000888  0E00               	movlw	0
  1944  00088A  6E03               	movwf	i2SendLCD@type,c
  1945  00088C  0E80               	movlw	128
  1946  00088E  EC28  F004         	call	i2_SendLCD
  1947  000892                     i2l1263:
  1948                           
  1949                           ;LCDIO.c: 113:     if(line == 2){
  1950  000892  0E02               	movlw	2
  1951  000894  1805               	xorwf	SetLine@line,w,c
  1952  000896  A4D8               	btfss	status,2,c
  1953  000898  D005               	goto	i2l1267
  1954                           
  1955                           ;LCDIO.c: 114:         SendLCD(0xC0,0);
  1956  00089A  0E00               	movlw	0
  1957  00089C  6E03               	movwf	i2SendLCD@type,c
  1958  00089E  0EC0               	movlw	192
  1959  0008A0  EC28  F004         	call	i2_SendLCD
  1960  0008A4                     i2l1267:
  1961                           
  1962                           ;LCDIO.c: 116:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1963  0008A4  0E21               	movlw	33
  1964  0008A6                     i2u110_47:
  1965  0008A6  2EE8               	decfsz	wreg,f,c
  1966  0008A8  D7FE               	bra	i2u110_47
  1967  0008AA  F000               	nop	
  1968  0008AC  0012               	return		;funcret
  1969  0008AE                     __end_of_SetLine:
  1970                           	opt callstack 0
  1971                           
  1972 ;; *************** function i2_SendLCD *****************
  1973 ;; Defined at:
  1974 ;;		line 44 in file "LCDIO.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  Byte            1    wreg     unsigned char 
  1977 ;;  type            1    2[COMRAM] unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  Byte            1    3[COMRAM] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1989 ;;      Params:         1       0       0       0
  1990 ;;      Locals:         1       0       0       0
  1991 ;;      Temps:          0       0       0       0
  1992 ;;      Totals:         2       0       0       0
  1993 ;;Total ram usage:        2 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    2
  1996 ;; This function calls:
  1997 ;;		i2_LCDout
  1998 ;; This function is called by:
  1999 ;;		_SetLine
  2000 ;;		_processRFID
  2001 ;;		i2_LCD_String
  2002 ;;		i2_ClearLCD
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text16
  2007  000850                     __ptext16:
  2008                           	opt callstack 0
  2009  000850                     i2_SendLCD:
  2010                           	opt callstack 20
  2011                           
  2012                           ;incstack = 0
  2013                           ;i2SendLCD@Byte stored from wreg
  2014  000850  6E04               	movwf	i2SendLCD@Byte,c
  2015                           
  2016                           ;LCDIO.c: 47:  LATAbits.LATA6 = type;
  2017  000852  B003               	btfsc	i2SendLCD@type,0,c
  2018  000854  D002               	bra	i2u47_45
  2019  000856  9C89               	bcf	3977,6,c	;volatile
  2020  000858  D001               	bra	i2u47_46
  2021  00085A                     i2u47_45:
  2022  00085A  8C89               	bsf	3977,6,c	;volatile
  2023  00085C                     i2u47_46:
  2024                           
  2025                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
  2026  00085C  3804               	swapf	i2SendLCD@Byte,w,c
  2027  00085E  0B0F               	andlw	15
  2028  000860  0B0F               	andlw	15
  2029  000862  EC6D  F003         	call	i2_LCDout
  2030                           
  2031                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
  2032  000866  0E06               	movlw	6
  2033  000868                     i2u111_47:
  2034  000868  2EE8               	decfsz	wreg,f,c
  2035  00086A  D7FE               	bra	i2u111_47
  2036  00086C  D000               	nop2	
  2037                           
  2038                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
  2039  00086E  5004               	movf	i2SendLCD@Byte,w,c
  2040  000870  0B0F               	andlw	15
  2041  000872  EC6D  F003         	call	i2_LCDout
  2042                           
  2043                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2044  000876  0E21               	movlw	33
  2045  000878                     i2u112_47:
  2046  000878  2EE8               	decfsz	wreg,f,c
  2047  00087A  D7FE               	bra	i2u112_47
  2048  00087C  F000               	nop	
  2049  00087E  0012               	return		;funcret
  2050  000880                     __end_ofi2_SendLCD:
  2051                           	opt callstack 0
  2052                           
  2053 ;; *************** function i2_LCDout *****************
  2054 ;; Defined at:
  2055 ;;		line 31 in file "LCDIO.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  number          1    wreg     unsigned char 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  number          1    1[COMRAM] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2069 ;;      Params:         0       0       0       0
  2070 ;;      Locals:         1       0       0       0
  2071 ;;      Temps:          1       0       0       0
  2072 ;;      Totals:         2       0       0       0
  2073 ;;Total ram usage:        2 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:    1
  2076 ;; This function calls:
  2077 ;;		i2_E_TOG
  2078 ;; This function is called by:
  2079 ;;		i2_SendLCD
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text17
  2084  0006DA                     __ptext17:
  2085                           	opt callstack 0
  2086  0006DA                     i2_LCDout:
  2087                           	opt callstack 20
  2088                           
  2089                           ;incstack = 0
  2090                           ;i2LCDout@number stored from wreg
  2091  0006DA  6E02               	movwf	i2LCDout@number,c
  2092                           
  2093                           ;LCDIO.c: 33:  LATCbits.LATC1 = (0b0001 & number);
  2094  0006DC  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  2095  0006E0  0E01               	movlw	1
  2096  0006E2  1601               	andwf	??i2_LCDout,f,c
  2097  0006E4  4601               	rlncf	??i2_LCDout,f,c
  2098  0006E6  508B               	movf	3979,w,c	;volatile
  2099  0006E8  1801               	xorwf	??i2_LCDout,w,c
  2100  0006EA  0BFD               	andlw	-3
  2101  0006EC  1801               	xorwf	??i2_LCDout,w,c
  2102  0006EE  6E8B               	movwf	3979,c	;volatile
  2103                           
  2104                           ;LCDIO.c: 34:  LATCbits.LATC2 = (0b0010 & number) >> 1;
  2105  0006F0  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  2106  0006F4  90D8               	bcf	status,0,c
  2107  0006F6  3201               	rrcf	??i2_LCDout,f,c
  2108  0006F8  0E01               	movlw	1
  2109  0006FA  1601               	andwf	??i2_LCDout,f,c
  2110  0006FC  4601               	rlncf	??i2_LCDout,f,c
  2111  0006FE  4601               	rlncf	??i2_LCDout,f,c
  2112  000700  508B               	movf	3979,w,c	;volatile
  2113  000702  1801               	xorwf	??i2_LCDout,w,c
  2114  000704  0BFB               	andlw	-5
  2115  000706  1801               	xorwf	??i2_LCDout,w,c
  2116  000708  6E8B               	movwf	3979,c	;volatile
  2117                           
  2118                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
  2119  00070A  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  2120  00070E  90D8               	bcf	status,0,c
  2121  000710  3201               	rrcf	??i2_LCDout,f,c
  2122  000712  90D8               	bcf	status,0,c
  2123  000714  3201               	rrcf	??i2_LCDout,f,c
  2124  000716  0E01               	movlw	1
  2125  000718  1601               	andwf	??i2_LCDout,f,c
  2126  00071A  508C               	movf	3980,w,c	;volatile
  2127  00071C  1801               	xorwf	??i2_LCDout,w,c
  2128  00071E  0BFE               	andlw	-2
  2129  000720  1801               	xorwf	??i2_LCDout,w,c
  2130  000722  6E8C               	movwf	3980,c	;volatile
  2131                           
  2132                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
  2133  000724  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  2134  000728  90D8               	bcf	status,0,c
  2135  00072A  3201               	rrcf	??i2_LCDout,f,c
  2136  00072C  90D8               	bcf	status,0,c
  2137  00072E  3201               	rrcf	??i2_LCDout,f,c
  2138  000730  90D8               	bcf	status,0,c
  2139  000732  3201               	rrcf	??i2_LCDout,f,c
  2140  000734  0E01               	movlw	1
  2141  000736  1601               	andwf	??i2_LCDout,f,c
  2142  000738  4601               	rlncf	??i2_LCDout,f,c
  2143  00073A  508C               	movf	3980,w,c	;volatile
  2144  00073C  1801               	xorwf	??i2_LCDout,w,c
  2145  00073E  0BFD               	andlw	-3
  2146  000740  1801               	xorwf	??i2_LCDout,w,c
  2147  000742  6E8C               	movwf	3980,c	;volatile
  2148                           
  2149                           ;LCDIO.c: 39:  E_TOG();
  2150  000744  ECA3  F004         	call	i2_E_TOG	;wreg free
  2151                           
  2152                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2153  000748  0E03               	movlw	3
  2154  00074A                     i2u113_47:
  2155  00074A  2EE8               	decfsz	wreg,f,c
  2156  00074C  D7FE               	bra	i2u113_47
  2157  00074E  F000               	nop	
  2158  000750  0012               	return		;funcret
  2159  000752                     __end_ofi2_LCDout:
  2160                           	opt callstack 0
  2161                           
  2162 ;; *************** function i2_E_TOG *****************
  2163 ;; Defined at:
  2164 ;;		line 23 in file "LCDIO.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2178 ;;      Params:         0       0       0       0
  2179 ;;      Locals:         0       0       0       0
  2180 ;;      Temps:          0       0       0       0
  2181 ;;      Totals:         0       0       0       0
  2182 ;;Total ram usage:        0 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		i2_LCDout
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text18
  2192  000946                     __ptext18:
  2193                           	opt callstack 0
  2194  000946                     i2_E_TOG:
  2195                           	opt callstack 20
  2196                           
  2197                           ;LCDIO.c: 25: LATCbits.LATC0 = 1;
  2198                           
  2199                           ;incstack = 0
  2200  000946  808B               	bsf	3979,0,c	;volatile
  2201                           
  2202                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2203  000948  0E03               	movlw	3
  2204  00094A                     i2u114_47:
  2205  00094A  2EE8               	decfsz	wreg,f,c
  2206  00094C  D7FE               	bra	i2u114_47
  2207  00094E  F000               	nop	
  2208                           
  2209                           ;LCDIO.c: 27: LATCbits.LATC0 = 0;
  2210  000950  908B               	bcf	3979,0,c	;volatile
  2211  000952  0012               	return		;funcret
  2212  000954                     __end_ofi2_E_TOG:
  2213                           	opt callstack 0
  2214                           
  2215                           	psect	rparam
  2216  0000                     
  2217                           	psect	temp
  2218  000037                     btemp:
  2219                           	opt callstack 0
  2220  000037                     	ds	1
  2221  0000                     int$flags	set	btemp
  2222  0000                     wtemp8	set	btemp+1
  2223  0000                     ttemp5	set	btemp+1
  2224  0000                     ttemp6	set	btemp+4
  2225  0000                     ttemp7	set	btemp+8
  2226                           tosu	equ	0xFFF
  2227                           tosh	equ	0xFFE
  2228                           tosl	equ	0xFFD
  2229                           stkptr	equ	0xFFC
  2230                           pclatu	equ	0xFFB
  2231                           pclath	equ	0xFFA
  2232                           pcl	equ	0xFF9
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           prodh	equ	0xFF4
  2238                           prodl	equ	0xFF3
  2239                           indf0	equ	0xFEF
  2240                           postinc0	equ	0xFEE
  2241                           postdec0	equ	0xFED
  2242                           preinc0	equ	0xFEC
  2243                           plusw0	equ	0xFEB
  2244                           fsr0h	equ	0xFEA
  2245                           fsr0l	equ	0xFE9
  2246                           wreg	equ	0xFE8
  2247                           indf1	equ	0xFE7
  2248                           postinc1	equ	0xFE6
  2249                           postdec1	equ	0xFE5
  2250                           preinc1	equ	0xFE4
  2251                           plusw1	equ	0xFE3
  2252                           fsr1h	equ	0xFE2
  2253                           fsr1l	equ	0xFE1
  2254                           bsr	equ	0xFE0
  2255                           indf2	equ	0xFDF
  2256                           postinc2	equ	0xFDE
  2257                           postdec2	equ	0xFDD
  2258                           preinc2	equ	0xFDC
  2259                           plusw2	equ	0xFDB
  2260                           fsr2h	equ	0xFDA
  2261                           fsr2l	equ	0xFD9
  2262                           status	equ	0xFD8


Data Sizes:
    Strings     48
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      54
    BANK0           160      9       9
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    check_RFID@dataBuf	PTR unsigned char  size(2) Largest target is 12
		 -> RFIDbuf(COMRAM[12]), 

    processRFID@RFIDbuf	PTR unsigned char  size(2) Largest target is 12
		 -> RFIDbuf(COMRAM[12]), 

    LCD_String@string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    S484DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S484DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_check_RFID
    _processRFID->_SetLine
    _processRFID->i2_ClearLCD
    i2_ClearLCD->i2_SendLCD
    _check_RFID->i2_LCD_String
    i2_LCD_String->i2_SendLCD
    _SetLine->i2_SendLCD
    i2_SendLCD->i2_LCDout

Critical Paths under _main in BANK0

    _main->_LCD_String
    _setup->_LCD_Init
    _LCD_Init->_SendLCD
    _LCD_String->_SendLCD
    _ClearLCD->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3821
                                              7 BANK0      2     2      0
                           _ClearLCD
                         _LCD_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1244
                           _LCD_Init
                          _init_RFID
 ---------------------------------------------------------------------------------
 (2) _init_RFID                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0    1244
                                              5 BANK0      1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           2     0      2    1421
                                              5 BANK0      2     0      2
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _ClearLCD                                             1     1      0    1156
                                              5 BANK0      1     1      0
                            _SendLCD
 ---------------------------------------------------------------------------------
 (3) _SendLCD                                              2     1      1    1156
                                              3 BANK0      2     1      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (4) _LCDout                                               2     2      0      88
                                              1 BANK0      2     2      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (5) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                  1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptHandlerHigh                                10    10      0    2940
                                             30 COMRAM    10    10      0
                         _check_RFID
                        _processRFID
 ---------------------------------------------------------------------------------
 (8) _processRFID                                          6     3      3    1316
                                              5 COMRAM     6     3      3
                            _SetLine
                         i2_ClearLCD
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) i2_ClearLCD                                           1     1      0     284
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (8) _check_RFID                                          24    22      2    1600
                                              6 COMRAM    24    22      2
                            _SetLine
                       i2_LCD_String
 ---------------------------------------------------------------------------------
 (9) i2_LCD_String                                         2     0      2     381
                                              4 COMRAM     2     0      2
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) _SetLine                                              1     1      0     328
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) i2_SendLCD                                            2     1      1     284
                                              2 COMRAM     2     1      1
                           i2_LCDout
 ---------------------------------------------------------------------------------
 (10) i2_LCDout                                            2     2      0      88
                                              0 COMRAM     2     2      0
                            i2_E_TOG
 ---------------------------------------------------------------------------------
 (11) i2_E_TOG                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCD
       _LCDout
         _E_TOG
   _LCD_String
     _SendLCD
       _LCDout
         _E_TOG
   _setup
     _LCD_Init
       _LCDout
         _E_TOG
       _SendLCD
         _LCDout
           _E_TOG
     _init_RFID

 _InterruptHandlerLow (ROOT)

 _InterruptHandlerHigh (ROOT)
   _check_RFID
     _SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_LCD_String
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
   _processRFID
     _SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_ClearLCD
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_SendLCD
       i2_LCDout
         i2_E_TOG

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      9       9       5        5.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      36       1       57.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F       3        0.0%
DATA                 0      0      3F      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Feb 21 15:34:18 2020

                           l37 08F0                             bsr 000FE0                    ?_LCD_String 0065  
                          u845 07F0                            u917 0788                            u846 07F2  
                          u927 04A2                            u937 04B8                            u890 079E  
                          u947 04CA                            u957 04D8                            u967 04E6  
                          u977 04FA                            u987 050E                            u997 0528  
                          wreg 000FE8                   processRFID@i 0009                   __CFG_LVP$OFF 000000  
                         l1501 076A                           l1509 079A                           l1491 07CE  
                         l1485 07AA                           l1495 0756                           l1497 075E  
                         l1499 0762                           STR_1 0321                           STR_2 0311  
                         STR_3 0301                           u1007 0540                           u1017 0554  
                         u1027 07C8                           u1037 08C2                           u1047 0800  
                         u1057 0812                           u1067 0658                           u1077 093C  
                         _LATB 000F8A                           i2l45 06B4                           i2l48 06B6  
              __end_ofi2_E_TOG 0954                           _main 0752                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 0037  
                         start 0026                   ___param_bank 000000              processRFID@i_1104 000B  
              __end_of_SendLCD 081A                __end_of_SetLine 08AE               __end_of_LCD_Init 055C  
                        ?_main 0001                          _RCREG 000FAE                          _E_TOG 0938  
             __end_ofi2_LCDout 0752                          _SPBRG 000FAF                    ?i2_ClearLCD 0001  
                        _setup 08EC             __size_ofi2_SendLCD 0030                          tablat 000FF5  
           processRFID@RFIDbuf 0006                          ttemp5 0038                          ttemp6 003B  
                        ttemp7 003F                          status 000FD8                          wtemp8 0038  
          __size_of_LCD_String 003A               __end_of_ClearLCD 08CE                 __CFG_MCLRE$OFF 000000  
              __initialization 08CE                   __end_of_main 07A8                 __CFG_OSC$IRCIO 000000  
             LCD_String@string 0065                         ??_main 0067                  __activetblptr 000001  
                       ?_E_TOG 0001                      ??i2_E_TOG 0001                         ?_setup 0001  
                       i2l1301 0576                         i2l1321 05B4                         i2l1313 05A4  
                       i2l1333 05D0                         i2l1263 0892                         i2l1271 081C  
                       i2l1353 037C                         i2l1267 08A4                         i2l1347 033A  
                       i2l1277 083C                         i2l1359 03BE                         i2l1369 046E  
                       _LCDout 05E4                    SendLCD@Byte 0064                         _OSCCON 000FD3  
                       _PTCON0 000F7F                         _PTCON1 000F7E                         _SPBRGH 000FB0  
                       _PTPERH 000F7A                         _PTPERL 000F7B                    SendLCD@type 0063  
                    ??_SendLCD 0029                      ??_SetLine 0005            __size_ofi2_ClearLCD 001A  
                       clear_0 08D4              __end_ofi2_SendLCD 0880                  ?i2_LCD_String 0005  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                   ?_processRFID 0006                     __accesstop 0060  
      __end_of__initialization 08DA                      ?_LCD_Init 0001                  ___rparam_used 000001  
                  SetLine@line 0005                  __end_of_E_TOG 0946                      ?i2_LCDout 0001  
               __pcstackCOMRAM 0001                  __end_of_setup 0906                 ??i2_LCD_String 0007  
                 ??_LCD_String 0029                        ??_E_TOG 0029  __size_of_InterruptHandlerHigh 06D2  
                    ?_ClearLCD 0001    __end_of_InterruptHandlerLow 0026                     _check_RFID 0332  
                      ??_setup 0029                        ?_LCDout 0001             __size_of_init_RFID 0018  
                   ??_LCD_Init 0065             __end_of_LCD_String 07E2                     ??i2_LCDout 0001  
                 ??i2_ClearLCD 0005                     ??_ClearLCD 0065                        _RFIDbuf 002B  
                      i2_E_TOG 0946                        i2u60_40 03D2                        i2u61_40 03DC  
                      i2u53_40 05A0                        i2u70_40 041E                        i2u62_40 03DE  
                      i2u71_40 042C                        i2u63_40 03EC                        i2u55_40 05CC  
                      i2u47_45 085A                        i2u47_46 085C                        i2u72_40 042E  
                      i2u64_40 03EE                        i2u73_40 044A                        i2u65_40 03FC  
                      i2u74_40 044C                        i2u66_40 03FE                        i2u67_40 040C  
                      i2u68_40 040E                        i2u69_40 041C                        _PWMCON0 000F6F  
                      _PWMCON1 000F6E                __size_of_LCDout 007C                        _SendLCD 07E2  
                      __Hparam 0000                        _SetLine 0880                        __Lparam 0000  
           __end_ofi2_ClearLCD 0920          processRFID@latestChar 0008                   __psmallconst 0300  
                      __pcinit 08CE                        __ramtop 0300                        __ptext0 0752  
                      __ptext1 08EC                        __ptext2 0920                        __ptext3 0482  
                      __ptext4 07A8                        __ptext5 08AE                        __ptext6 07E2  
                      __ptext7 05E4                        __ptext8 0938              __end_of_init_RFID 0938  
             check_RFID@hexBuf 000B                   LCDout@number 0062                    ?_check_RFID 0007  
               __pintcode_body 0660           end_of_initialization 08DA           __end_ofi2_LCD_String 0850  
         __size_of_processRFID 0088                        int_func 0660                      _RCSTAbits 000FAB  
                      postinc0 000FEE                     _robot_mode 002A                      _PORTCbits 000F82  
                    i2_SendLCD 0850             i2LCD_String@string 0005                      _TRISAbits 000F92  
                    _TRISCbits 000F94                      _TRISDbits 000F95                 __end_of_LCDout 0660  
                    _TXSTAbits 000FAC              __size_of_LCD_Init 00DA              __size_ofi2_LCDout 0078  
          __size_of_check_RFID 0150                    _BAUDCONbits 000FAA                     ?i2_SendLCD 0003  
          start_initialization 08CE              __size_of_ClearLCD 0020                       ??_LCDout 0061  
InterruptHandlerHigh@RFID_flag 0028   __end_of_InterruptHandlerHigh 06DA                    __pbssCOMRAM 0029  
                __pcstackBANK0 0060                       ?i2_E_TOG 0001          __size_ofi2_LCD_String 0036  
               i2LCDout@number 0002   __size_of_InterruptHandlerLow 000E                       ?_SendLCD 0063  
                     ?_SetLine 0001                      __pintcode 0008             check_RFID@checksum 001C  
                  __pintcodelo 0018                   i2_LCD_String 081A                    __smallconst 0300  
               __size_of_E_TOG 000E                    ??i2_SendLCD 0004                      _init_RFID 0920  
                 ??_check_RFID 0009                 __size_of_setup 001A                check_RFID@byte1 0017  
              check_RFID@byte2 0018                check_RFID@byte3 0019                check_RFID@byte4 001A  
              check_RFID@byte5 001B                       _LCD_Init 0482                       _LATAbits 000F89  
                     _LATCbits 000F8B                       _LATDbits 000F8C                       _PIE1bits 000F9D  
                     i2u110_47 08A6                       i2u111_47 0868                       i2u112_47 0878  
                     i2u113_47 074A                       i2u114_47 094A                       i2u108_47 0916  
                     i2u109_47 0836                       _PIR1bits 000F9E                       i2_LCDout 06DA  
                     _RCONbits 000FD0             __end_of_check_RFID 0482           _InterruptHandlerHigh 0008  
                     _ClearLCD 08AE                     ?_init_RFID 0001               __size_ofi2_E_TOG 000E  
                ??_processRFID 0009                  i2SendLCD@Byte 0004                  i2SendLCD@type 0003  
                  check_RFID@i 001D                       __Hrparam 0000               __size_of_SendLCD 0038  
                     __Lrparam 0000               __size_of_SetLine 002E                   __Lsmallconst 0300  
        ?_InterruptHandlerHigh 0001              check_RFID@dataBuf 0007                       __ptext11 055C  
                     __ptext12 0906                       __ptext13 0332                       __ptext14 081A  
                     __ptext15 0880                       __ptext16 0850                       __ptext17 06DA  
                     __ptext18 0946                  __size_of_main 0056            __end_of_processRFID 05E4  
                     int$flags 0037            _InterruptHandlerLow 0018                     _LCD_String 07A8  
                   _INTCONbits 000FF2                    ??_init_RFID 0029                       intlevel1 0000  
                     intlevel2 0000           ?_InterruptHandlerLow 0001                     _OSCCONbits 000FD3  
   processRFID@position_in_buf 0029         ??_InterruptHandlerHigh 001F                     i2_ClearLCD 0906  
                  _processRFID 055C          ??_InterruptHandlerLow 0060  
