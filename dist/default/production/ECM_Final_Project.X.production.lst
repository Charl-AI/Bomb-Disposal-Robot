

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Feb 25 15:20:06 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 2.05
    54                           ; Generated 20/12/2018 GMT
    55                           ; 
    56                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4331 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     _CAP1CON	set	3939
    88  0000                     _DFLTCON	set	3936
    89  0000                     _ANSEL1	set	4025
    90  0000                     _ANSEL0	set	4024
    91  0000                     _T5CON	set	4023
    92  0000                     _IPR1bits	set	3999
    93  0000                     _PIE1bits	set	3997
    94  0000                     _RCSTAbits	set	4011
    95  0000                     _TXSTAbits	set	4012
    96  0000                     _BAUDCONbits	set	4010
    97  0000                     _SPBRGH	set	4016
    98  0000                     _SPBRG	set	4015
    99  0000                     _TRISAbits	set	3986
   100  0000                     _TRISCbits	set	3988
   101  0000                     _LATDbits	set	3980
   102  0000                     _LATCbits	set	3979
   103  0000                     _LATAbits	set	3977
   104  0000                     _LATB	set	3978
   105  0000                     _PTPERH	set	3962
   106  0000                     _PTPERL	set	3963
   107  0000                     _PWMCON1	set	3950
   108  0000                     _PWMCON0	set	3951
   109  0000                     _PTCON1	set	3966
   110  0000                     _PTCON0	set	3967
   111  0000                     _PORTDbits	set	3971
   112  0000                     _CAP1BUFL	set	3944
   113  0000                     _CAP1BUFH	set	3945
   114  0000                     _RCREG	set	4014
   115  0000                     _PIR1bits	set	3998
   116  0000                     _TRISDbits	set	3989
   117  0000                     _RCONbits	set	4048
   118  0000                     _INTCONbits	set	4082
   119  0000                     _OSCCONbits	set	4051
   120  0000                     _OSCCON	set	4051
   121                           
   122                           	psect	smallconst
   123  000300                     __psmallconst:
   124                           	opt callstack 0
   125  000300  00                 	db	0
   126  000301                     STR_5:
   127  000301  43                 	db	67	;'C'
   128  000302  48                 	db	72	;'H'
   129  000303  45                 	db	69	;'E'
   130  000304  43                 	db	67	;'C'
   131  000305  4B                 	db	75	;'K'
   132  000306  53                 	db	83	;'S'
   133  000307  55                 	db	85	;'U'
   134  000308  4D                 	db	77	;'M'
   135  000309  20                 	db	32
   136  00030A  46                 	db	70	;'F'
   137  00030B  41                 	db	65	;'A'
   138  00030C  49                 	db	73	;'I'
   139  00030D  4C                 	db	76	;'L'
   140  00030E  45                 	db	69	;'E'
   141  00030F  44                 	db	68	;'D'
   142  000310  00                 	db	0
   143  000311                     STR_4:
   144  000311  43                 	db	67	;'C'
   145  000312  48                 	db	72	;'H'
   146  000313  45                 	db	69	;'E'
   147  000314  43                 	db	67	;'C'
   148  000315  4B                 	db	75	;'K'
   149  000316  53                 	db	83	;'S'
   150  000317  55                 	db	85	;'U'
   151  000318  4D                 	db	77	;'M'
   152  000319  20                 	db	32
   153  00031A  50                 	db	80	;'P'
   154  00031B  41                 	db	65	;'A'
   155  00031C  53                 	db	83	;'S'
   156  00031D  53                 	db	83	;'S'
   157  00031E  45                 	db	69	;'E'
   158  00031F  44                 	db	68	;'D'
   159  000320  00                 	db	0
   160  000321                     STR_3:
   161  000321  52                 	db	82	;'R'
   162  000322  45                 	db	69	;'E'
   163  000323  53                 	db	83	;'S'
   164  000324  45                 	db	69	;'E'
   165  000325  54                 	db	84	;'T'
   166  000326  54                 	db	84	;'T'
   167  000327  49                 	db	73	;'I'
   168  000328  4E                 	db	78	;'N'
   169  000329  47                 	db	71	;'G'
   170  00032A  20                 	db	32
   171  00032B  52                 	db	82	;'R'
   172  00032C  4F                 	db	79	;'O'
   173  00032D  42                 	db	66	;'B'
   174  00032E  4F                 	db	79	;'O'
   175  00032F  54                 	db	84	;'T'
   176  000330  00                 	db	0
   177  000331                     STR_1:
   178  000331  72                 	db	114	;'r'
   179  000332  61                 	db	97	;'a'
   180  000333  77                 	db	119	;'w'
   181  000334  20                 	db	32
   182  000335  64                 	db	100	;'d'
   183  000336  75                 	db	117	;'u'
   184  000337  74                 	db	116	;'t'
   185  000338  79                 	db	121	;'y'
   186  000339  20                 	db	32
   187  00033A  63                 	db	99	;'c'
   188  00033B  79                 	db	121	;'y'
   189  00033C  63                 	db	99	;'c'
   190  00033D  6C                 	db	108	;'l'
   191  00033E  65                 	db	101	;'e'
   192  00033F  00                 	db	0
   193  000340                     STR_2:
   194  000340  25                 	db	37
   195  000341  75                 	db	117	;'u'
   196  000342  20                 	db	32
   197  000343  73                 	db	115	;'s'
   198  000344  00                 	db	0
   199                           
   200                           ; #config settings
   201  000345  00                 	db	0	; dummy byte at the end
   202  0000                     
   203                           	psect	cinit
   204  00197C                     __pcinit:
   205                           	opt callstack 0
   206  00197C                     start_initialization:
   207                           	opt callstack 0
   208  00197C                     __initialization:
   209                           	opt callstack 0
   210                           
   211                           ; Clear objects allocated to BANK1 (32 bytes)
   212  00197C  EE01  F000         	lfsr	0,__pbssBANK1
   213  001980  0E20               	movlw	32
   214  001982                     clear_0:
   215  001982  6AEE               	clrf	postinc0,c
   216  001984  06E8               	decf	wreg,f,c
   217  001986  E1FD               	bnz	clear_0
   218                           
   219                           ; Clear objects allocated to BANK0 (10 bytes)
   220  001988  EE00  F0EC         	lfsr	0,__pbssBANK0
   221  00198C  0E0A               	movlw	10
   222  00198E                     clear_1:
   223  00198E  6AEE               	clrf	postinc0,c
   224  001990  06E8               	decf	wreg,f,c
   225  001992  E1FD               	bnz	clear_1
   226                           
   227                           ; Clear objects allocated to COMRAM (14 bytes)
   228  001994  EE00  F02B         	lfsr	0,__pbssCOMRAM
   229  001998  0E0E               	movlw	14
   230  00199A                     clear_2:
   231  00199A  6AEE               	clrf	postinc0,c
   232  00199C  06E8               	decf	wreg,f,c
   233  00199E  E1FD               	bnz	clear_2
   234  0019A0                     end_of_initialization:
   235                           	opt callstack 0
   236  0019A0                     __end_of__initialization:
   237                           	opt callstack 0
   238  0019A0  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239  0019A2  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240  0019A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   241  0019A6  6EF8               	movwf	tblptru,c
   242  0019A8  0100               	movlb	0
   243  0019AA  EFAE  F005         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246  00002B                     __pbssCOMRAM:
   247                           	opt callstack 0
   248  00002B                     processRFID@position_in_buf:
   249                           	opt callstack 0
   250  00002B                     	ds	1
   251  00002C                     _robot_mode:
   252                           	opt callstack 0
   253  00002C                     	ds	1
   254  00002D                     InterruptHandlerHigh@RFIDbuf:
   255                           	opt callstack 0
   256  00002D                     	ds	12
   257                           
   258                           	psect	bssBANK0
   259  0000EC                     __pbssBANK0:
   260                           	opt callstack 0
   261  0000EC                     _nout:
   262                           	opt callstack 0
   263  0000EC                     	ds	2
   264  0000EE                     _width:
   265                           	opt callstack 0
   266  0000EE                     	ds	2
   267  0000F0                     _prec:
   268                           	opt callstack 0
   269  0000F0                     	ds	2
   270  0000F2                     _flags:
   271                           	opt callstack 0
   272  0000F2                     	ds	2
   273  0000F4                     main@smoothed:
   274                           	opt callstack 0
   275  0000F4                     	ds	2
   276                           
   277                           	psect	bssBANK1
   278  000100                     __pbssBANK1:
   279                           	opt callstack 0
   280  000100                     _dbuf:
   281                           	opt callstack 0
   282  000100                     	ds	32
   283                           
   284                           	psect	cstackBANK0
   285  000060                     __pcstackBANK0:
   286                           	opt callstack 0
   287  000060                     ??_InterruptHandlerLow:
   288                           
   289                           ; 1 bytes @ 0x0
   290  000060                     	ds	1
   291  000061                     ??_LCDout:
   292  000061                     ?_strlen:
   293                           	opt callstack 0
   294  000061                     ?___xxtofl:
   295                           	opt callstack 0
   296  000061                     ?___lodiv:
   297                           	opt callstack 0
   298  000061                     ?___lomod:
   299                           	opt callstack 0
   300  000061                     fputc@c:
   301                           	opt callstack 0
   302  000061                     strlen@s:
   303                           	opt callstack 0
   304  000061                     ___xxtofl@val:
   305                           	opt callstack 0
   306  000061                     ___lodiv@dividend:
   307                           	opt callstack 0
   308  000061                     ___lomod@dividend:
   309                           	opt callstack 0
   310                           
   311                           ; 8 bytes @ 0x1
   312  000061                     	ds	1
   313  000062                     LCDout@number:
   314                           	opt callstack 0
   315                           
   316                           ; 1 bytes @ 0x2
   317  000062                     	ds	1
   318  000063                     SendLCD@type:
   319                           	opt callstack 0
   320  000063                     fputc@fp:
   321                           	opt callstack 0
   322  000063                     strlen@a:
   323                           	opt callstack 0
   324                           
   325                           ; 2 bytes @ 0x3
   326  000063                     	ds	1
   327  000064                     SendLCD@Byte:
   328                           	opt callstack 0
   329                           
   330                           ; 1 bytes @ 0x4
   331  000064                     	ds	1
   332  000065                     ??_init_LCD:
   333  000065                     ??_ClearLCD:
   334  000065                     ??_fputc:
   335  000065                     ??___xxtofl:
   336  000065                     SetLine@line:
   337                           	opt callstack 0
   338  000065                     LCD_String@string:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x5
   342  000065                     	ds	1
   343  000066                     
   344                           ; 1 bytes @ 0x6
   345  000066                     	ds	1
   346  000067                     
   347                           ; 1 bytes @ 0x7
   348  000067                     	ds	2
   349  000069                     ___xxtofl@sign:
   350                           	opt callstack 0
   351  000069                     ___lodiv@divisor:
   352                           	opt callstack 0
   353  000069                     ___lomod@divisor:
   354                           	opt callstack 0
   355                           
   356                           ; 8 bytes @ 0x9
   357  000069                     	ds	1
   358  00006A                     ___xxtofl@exp:
   359                           	opt callstack 0
   360  00006A                     fputs@s:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0xA
   364  00006A                     	ds	1
   365  00006B                     ___xxtofl@arg:
   366                           	opt callstack 0
   367                           
   368                           ; 4 bytes @ 0xB
   369  00006B                     	ds	1
   370  00006C                     fputs@fp:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0xC
   374  00006C                     	ds	2
   375  00006E                     fputs@c:
   376                           	opt callstack 0
   377                           
   378                           ; 1 bytes @ 0xE
   379  00006E                     	ds	1
   380  00006F                     ?___flmul:
   381                           	opt callstack 0
   382  00006F                     fputs@i:
   383                           	opt callstack 0
   384  00006F                     ___flmul@b:
   385                           	opt callstack 0
   386                           
   387                           ; 4 bytes @ 0xF
   388  00006F                     	ds	2
   389  000071                     ?_pad:
   390                           	opt callstack 0
   391  000071                     ___lomod@counter:
   392                           	opt callstack 0
   393  000071                     pad@fp:
   394                           	opt callstack 0
   395  000071                     ___lodiv@quotient:
   396                           	opt callstack 0
   397                           
   398                           ; 8 bytes @ 0x11
   399  000071                     	ds	2
   400  000073                     pad@buf:
   401                           	opt callstack 0
   402  000073                     ___flmul@a:
   403                           	opt callstack 0
   404                           
   405                           ; 4 bytes @ 0x13
   406  000073                     	ds	2
   407  000075                     pad@p:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x15
   411  000075                     	ds	2
   412  000077                     ??___flmul:
   413  000077                     ??_pad:
   414                           
   415                           ; 1 bytes @ 0x17
   416  000077                     	ds	1
   417  000078                     pad@i:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x18
   421  000078                     	ds	1
   422  000079                     ___lodiv@counter:
   423                           	opt callstack 0
   424                           
   425                           ; 1 bytes @ 0x19
   426  000079                     	ds	1
   427  00007A                     pad@w:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x1A
   431  00007A                     	ds	1
   432  00007B                     ___flmul@sign:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x1B
   436  00007B                     	ds	1
   437  00007C                     ?_utoa:
   438                           	opt callstack 0
   439  00007C                     utoa@fp:
   440                           	opt callstack 0
   441  00007C                     ___flmul@grs:
   442                           	opt callstack 0
   443                           
   444                           ; 4 bytes @ 0x1C
   445  00007C                     	ds	2
   446  00007E                     utoa@d:
   447                           	opt callstack 0
   448                           
   449                           ; 8 bytes @ 0x1E
   450  00007E                     	ds	2
   451  000080                     ___flmul@aexp:
   452                           	opt callstack 0
   453                           
   454                           ; 1 bytes @ 0x20
   455  000080                     	ds	1
   456  000081                     ___flmul@bexp:
   457                           	opt callstack 0
   458                           
   459                           ; 1 bytes @ 0x21
   460  000081                     	ds	1
   461  000082                     ___flmul@prod:
   462                           	opt callstack 0
   463                           
   464                           ; 4 bytes @ 0x22
   465  000082                     	ds	4
   466  000086                     ??_utoa:
   467  000086                     ___flmul@temp:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x26
   471  000086                     	ds	2
   472  000088                     ?___fladd:
   473                           	opt callstack 0
   474  000088                     ___fladd@b:
   475                           	opt callstack 0
   476                           
   477                           ; 4 bytes @ 0x28
   478  000088                     	ds	4
   479  00008C                     ___fladd@a:
   480                           	opt callstack 0
   481                           
   482                           ; 4 bytes @ 0x2C
   483  00008C                     	ds	2
   484  00008E                     utoa@p:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x2E
   488  00008E                     	ds	2
   489  000090                     ??___fladd:
   490  000090                     utoa@w:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x30
   494  000090                     	ds	2
   495  000092                     utoa@n:
   496                           	opt callstack 0
   497                           
   498                           ; 8 bytes @ 0x32
   499  000092                     	ds	2
   500  000094                     ___fladd@signs:
   501                           	opt callstack 0
   502                           
   503                           ; 1 bytes @ 0x34
   504  000094                     	ds	1
   505  000095                     ___fladd@aexp:
   506                           	opt callstack 0
   507                           
   508                           ; 1 bytes @ 0x35
   509  000095                     	ds	1
   510  000096                     ___fladd@bexp:
   511                           	opt callstack 0
   512                           
   513                           ; 1 bytes @ 0x36
   514  000096                     	ds	1
   515  000097                     ___fladd@grs:
   516                           	opt callstack 0
   517                           
   518                           ; 1 bytes @ 0x37
   519  000097                     	ds	1
   520  000098                     ?___fltol:
   521                           	opt callstack 0
   522  000098                     ___fltol@f1:
   523                           	opt callstack 0
   524                           
   525                           ; 4 bytes @ 0x38
   526  000098                     	ds	2
   527  00009A                     utoa@i:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x3A
   531  00009A                     	ds	2
   532  00009C                     ??___fltol:
   533  00009C                     ?_vfpfcnvrt:
   534                           	opt callstack 0
   535  00009C                     vfpfcnvrt@fp:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0x3C
   539  00009C                     	ds	2
   540  00009E                     vfpfcnvrt@fmt:
   541                           	opt callstack 0
   542                           
   543                           ; 2 bytes @ 0x3E
   544  00009E                     	ds	2
   545  0000A0                     ___fltol@sign1:
   546                           	opt callstack 0
   547  0000A0                     vfpfcnvrt@ap:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x40
   551  0000A0                     	ds	1
   552  0000A1                     ___fltol@exp1:
   553                           	opt callstack 0
   554                           
   555                           ; 1 bytes @ 0x41
   556  0000A1                     	ds	1
   557  0000A2                     ??_vfpfcnvrt:
   558                           
   559                           ; 1 bytes @ 0x42
   560  0000A2                     	ds	4
   561  0000A6                     vfpfcnvrt@llu:
   562                           	opt callstack 0
   563                           
   564                           ; 8 bytes @ 0x46
   565  0000A6                     	ds	8
   566  0000AE                     ?_vfprintf:
   567                           	opt callstack 0
   568  0000AE                     vfprintf@fp:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x4E
   572  0000AE                     	ds	2
   573  0000B0                     vfprintf@fmt:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x50
   577  0000B0                     	ds	2
   578  0000B2                     vfprintf@ap:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x52
   582  0000B2                     	ds	2
   583  0000B4                     vfprintf@cfmt:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x54
   587  0000B4                     	ds	2
   588  0000B6                     ?_sprintf:
   589                           	opt callstack 0
   590  0000B6                     sprintf@s:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x56
   594  0000B6                     	ds	2
   595  0000B8                     sprintf@fmt:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x58
   599  0000B8                     	ds	4
   600  0000BC                     
   601                           ; 1 bytes @ 0x5C
   602  0000BC                     	ds	2
   603  0000BE                     sprintf@ap:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x5E
   607  0000BE                     	ds	2
   608  0000C0                     sprintf@f:
   609                           	opt callstack 0
   610                           
   611                           ; 6 bytes @ 0x60
   612  0000C0                     	ds	6
   613  0000C6                     ??_main:
   614                           
   615                           ; 1 bytes @ 0x66
   616  0000C6                     	ds	2
   617  0000C8                     main@temp:
   618                           	opt callstack 0
   619                           
   620                           ; 32 bytes @ 0x68
   621  0000C8                     	ds	32
   622  0000E8                     main@raw_data:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0x88
   626  0000E8                     	ds	2
   627  0000EA                     main@i:
   628                           	opt callstack 0
   629                           
   630                           ; 2 bytes @ 0x8A
   631  0000EA                     	ds	2
   632                           
   633                           	psect	cstackCOMRAM
   634  000001                     __pcstackCOMRAM:
   635                           	opt callstack 0
   636  000001                     ??i2_LCDout:
   637  000001                     
   638                           ; 1 bytes @ 0x0
   639  000001                     	ds	1
   640  000002                     i2LCDout@number:
   641                           	opt callstack 0
   642                           
   643                           ; 1 bytes @ 0x1
   644  000002                     	ds	1
   645  000003                     i2SendLCD@type:
   646                           	opt callstack 0
   647                           
   648                           ; 1 bytes @ 0x2
   649  000003                     	ds	1
   650  000004                     i2SendLCD@Byte:
   651                           	opt callstack 0
   652                           
   653                           ; 1 bytes @ 0x3
   654  000004                     	ds	1
   655  000005                     ??i2_ClearLCD:
   656  000005                     i2SetLine@line:
   657                           	opt callstack 0
   658  000005                     i2LCD_String@string:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x4
   662  000005                     	ds	1
   663  000006                     processRFID@RFIDbuf:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0x5
   667  000006                     	ds	1
   668  000007                     check_RFID@dataBuf:
   669                           	opt callstack 0
   670                           
   671                           ; 2 bytes @ 0x6
   672  000007                     	ds	1
   673  000008                     processRFID@latestChar:
   674                           	opt callstack 0
   675                           
   676                           ; 1 bytes @ 0x7
   677  000008                     	ds	1
   678  000009                     ??_check_RFID:
   679  000009                     processRFID@i:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x8
   683  000009                     	ds	2
   684  00000B                     processRFID@i_1071:
   685                           	opt callstack 0
   686  00000B                     check_RFID@hexBuf:
   687                           	opt callstack 0
   688                           
   689                           ; 12 bytes @ 0xA
   690  00000B                     	ds	12
   691  000017                     check_RFID@byte1:
   692                           	opt callstack 0
   693                           
   694                           ; 1 bytes @ 0x16
   695  000017                     	ds	1
   696  000018                     check_RFID@byte2:
   697                           	opt callstack 0
   698                           
   699                           ; 1 bytes @ 0x17
   700  000018                     	ds	1
   701  000019                     check_RFID@byte3:
   702                           	opt callstack 0
   703                           
   704                           ; 1 bytes @ 0x18
   705  000019                     	ds	1
   706  00001A                     check_RFID@byte4:
   707                           	opt callstack 0
   708                           
   709                           ; 1 bytes @ 0x19
   710  00001A                     	ds	1
   711  00001B                     check_RFID@byte5:
   712                           	opt callstack 0
   713                           
   714                           ; 1 bytes @ 0x1A
   715  00001B                     	ds	1
   716  00001C                     check_RFID@checksum:
   717                           	opt callstack 0
   718                           
   719                           ; 1 bytes @ 0x1B
   720  00001C                     	ds	1
   721  00001D                     check_RFID@i:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x1C
   725  00001D                     	ds	2
   726  00001F                     ??_InterruptHandlerHigh:
   727                           
   728                           ; 1 bytes @ 0x1E
   729  00001F                     	ds	11
   730  00002A                     InterruptHandlerHigh@RFID_flag:
   731                           	opt callstack 0
   732                           
   733                           ; 1 bytes @ 0x29
   734  00002A                     	ds	1
   735                           
   736 ;;
   737 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   738 ;;
   739 ;; *************** function _main *****************
   740 ;; Defined at:
   741 ;;		line 91 in file "main.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  i               2  138[BANK0 ] int 
   746 ;;  temp           32  104[BANK0 ] unsigned char [32]
   747 ;;  raw_data        2  136[BANK0 ] int 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   757 ;;      Params:         0       0       0       0
   758 ;;      Locals:         0      36       0       0
   759 ;;      Temps:          0       2       0       0
   760 ;;      Totals:         0      38       0       0
   761 ;;Total ram usage:       38 bytes
   762 ;; Hardware stack levels required when called:   15
   763 ;; This function calls:
   764 ;;		_ClearLCD
   765 ;;		_LCD_String
   766 ;;		_SetLine
   767 ;;		___fladd
   768 ;;		___flmul
   769 ;;		___fltol
   770 ;;		___xxtofl
   771 ;;		_setup
   772 ;;		_sprintf
   773 ;; This function is called by:
   774 ;;		Startup code after reset
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text0
   779  000B5C                     __ptext0:
   780                           	opt callstack 0
   781  000B5C                     _main:
   782                           	opt callstack 16
   783                           
   784                           ;main.c: 94:   setup();
   785                           
   786                           ;incstack = 0
   787  000B5C  EC2D  F00D         	call	_setup	;wreg free
   788  000B60  D09B               	goto	l3261
   789  000B62                     l3243:
   790                           
   791                           ;main.c: 102:       {;main.c: 103:           static int smoothed;;main.c: 104:          
      +                           int raw_data = (int)((CAP1BUFH << 8) | CAP1BUFL);
   792  000B62  5068               	movf	3944,w,c	;volatile
   793  000B64  CF69 F0C6          	movff	3945,??_main	;volatile
   794  000B68  0100               	movlb	0	; () banked
   795  000B6A  6BC7               	clrf	(??_main+1)& (0+255),b
   796  000B6C  C0C6  F0C7         	movff	??_main,??_main+1
   797  000B70  6BC6               	clrf	??_main& (0+255),b
   798  000B72  11C6               	iorwf	??_main& (0+255),w,b
   799  000B74  6FE8               	movwf	main@raw_data& (0+255),b
   800  000B76  51C7               	movf	(??_main+1)& (0+255),w,b
   801  000B78  6FE9               	movwf	(main@raw_data+1)& (0+255),b
   802                           
   803                           ; BSR set to: 0
   804                           ;main.c: 106:           smoothed = 0.9*raw_data + 0.1* smoothed;
   805  000B7A  0ECD               	movlw	205
   806  000B7C  6F73               	movwf	___flmul@a& (0+255),b
   807  000B7E  0ECC               	movlw	204
   808  000B80  6F74               	movwf	(___flmul@a+1)& (0+255),b
   809  000B82  0ECC               	movlw	204
   810  000B84  6F75               	movwf	(___flmul@a+2)& (0+255),b
   811  000B86  0E3D               	movlw	61
   812  000B88  6F76               	movwf	(___flmul@a+3)& (0+255),b
   813  000B8A  C0F4  F061         	movff	main@smoothed,___xxtofl@val
   814  000B8E  C0F5  F062         	movff	main@smoothed+1,___xxtofl@val+1
   815  000B92  0E00               	movlw	0
   816  000B94  BF62               	btfsc	(___xxtofl@val+1)& (0+255),7,b
   817  000B96  0EFF               	movlw	-1
   818  000B98  6F63               	movwf	(___xxtofl@val+2)& (0+255),b
   819  000B9A  6F64               	movwf	(___xxtofl@val+3)& (0+255),b
   820  000B9C  0E01               	movlw	1
   821  000B9E  ECE6  F007         	call	___xxtofl
   822  000BA2  C061  F06F         	movff	?___xxtofl,___flmul@b
   823  000BA6  C062  F070         	movff	?___xxtofl+1,___flmul@b+1
   824  000BAA  C063  F071         	movff	?___xxtofl+2,___flmul@b+2
   825  000BAE  C064  F072         	movff	?___xxtofl+3,___flmul@b+3
   826  000BB2  ECA3  F001         	call	___flmul	;wreg free
   827  000BB6  C06F  F08C         	movff	?___flmul,___fladd@a
   828  000BBA  C070  F08D         	movff	?___flmul+1,___fladd@a+1
   829  000BBE  C071  F08E         	movff	?___flmul+2,___fladd@a+2
   830  000BC2  C072  F08F         	movff	?___flmul+3,___fladd@a+3
   831  000BC6  0E66               	movlw	102
   832  000BC8  0100               	movlb	0	; () banked
   833  000BCA  6F73               	movwf	___flmul@a& (0+255),b
   834  000BCC  0E66               	movlw	102
   835  000BCE  6F74               	movwf	(___flmul@a+1)& (0+255),b
   836  000BD0  0E66               	movlw	102
   837  000BD2  6F75               	movwf	(___flmul@a+2)& (0+255),b
   838  000BD4  0E3F               	movlw	63
   839  000BD6  6F76               	movwf	(___flmul@a+3)& (0+255),b
   840  000BD8  C0E8  F061         	movff	main@raw_data,___xxtofl@val
   841  000BDC  C0E9  F062         	movff	main@raw_data+1,___xxtofl@val+1
   842  000BE0  0E00               	movlw	0
   843  000BE2  BF62               	btfsc	(___xxtofl@val+1)& (0+255),7,b
   844  000BE4  0EFF               	movlw	-1
   845  000BE6  6F63               	movwf	(___xxtofl@val+2)& (0+255),b
   846  000BE8  6F64               	movwf	(___xxtofl@val+3)& (0+255),b
   847  000BEA  0E01               	movlw	1
   848  000BEC  ECE6  F007         	call	___xxtofl
   849  000BF0  C061  F06F         	movff	?___xxtofl,___flmul@b
   850  000BF4  C062  F070         	movff	?___xxtofl+1,___flmul@b+1
   851  000BF8  C063  F071         	movff	?___xxtofl+2,___flmul@b+2
   852  000BFC  C064  F072         	movff	?___xxtofl+3,___flmul@b+3
   853  000C00  ECA3  F001         	call	___flmul	;wreg free
   854  000C04  C06F  F088         	movff	?___flmul,___fladd@b
   855  000C08  C070  F089         	movff	?___flmul+1,___fladd@b+1
   856  000C0C  C071  F08A         	movff	?___flmul+2,___fladd@b+2
   857  000C10  C072  F08B         	movff	?___flmul+3,___fladd@b+3
   858  000C14  EC4D  F003         	call	___fladd	;wreg free
   859  000C18  C088  F098         	movff	?___fladd,___fltol@f1
   860  000C1C  C089  F099         	movff	?___fladd+1,___fltol@f1+1
   861  000C20  C08A  F09A         	movff	?___fladd+2,___fltol@f1+2
   862  000C24  C08B  F09B         	movff	?___fladd+3,___fltol@f1+3
   863  000C28  EC5D  F009         	call	___fltol	;wreg free
   864  000C2C  C098  F0F4         	movff	?___fltol,main@smoothed
   865  000C30  C099  F0F5         	movff	?___fltol+1,main@smoothed+1
   866                           
   867                           ;main.c: 108:           ClearLCD();
   868  000C34  EC1D  F00D         	call	_ClearLCD	;wreg free
   869                           
   870                           ;main.c: 109:           SetLine(1);
   871  000C38  0E01               	movlw	1
   872  000C3A  ECA4  F00C         	call	_SetLine
   873                           
   874                           ;main.c: 110:           LCD_String("raw duty cycle");
   875  000C3E  0E31               	movlw	low STR_1
   876  000C40  0100               	movlb	0	; () banked
   877  000C42  6F65               	movwf	LCD_String@string& (0+255),b
   878  000C44  0E03               	movlw	high STR_1
   879  000C46  6F66               	movwf	(LCD_String@string+1)& (0+255),b
   880  000C48  ECB6  F00B         	call	_LCD_String	;wreg free
   881                           
   882                           ;main.c: 111:           SetLine(2);
   883  000C4C  0E02               	movlw	2
   884  000C4E  ECA4  F00C         	call	_SetLine
   885                           
   886                           ;main.c: 112:           char temp[32];;main.c: 113:           sprintf(temp,"%u s",smooth
      +                          ed);
   887  000C52  0EC8               	movlw	low main@temp
   888  000C54  0100               	movlb	0	; () banked
   889  000C56  6FB6               	movwf	sprintf@s& (0+255),b
   890  000C58  0E00               	movlw	high main@temp
   891  000C5A  6FB7               	movwf	(sprintf@s+1)& (0+255),b
   892  000C5C  0E40               	movlw	low STR_2
   893  000C5E  6FB8               	movwf	sprintf@fmt& (0+255),b
   894  000C60  0E03               	movlw	high STR_2
   895  000C62  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
   896  000C64  C0F4  F0BA         	movff	main@smoothed,?_sprintf+4
   897  000C68  C0F5  F0BB         	movff	main@smoothed+1,?_sprintf+5
   898  000C6C  EC41  F00C         	call	_sprintf	;wreg free
   899                           
   900                           ;main.c: 114:           LCD_String(temp);
   901  000C70  0EC8               	movlw	low main@temp
   902  000C72  0100               	movlb	0	; () banked
   903  000C74  6F65               	movwf	LCD_String@string& (0+255),b
   904  000C76  0E00               	movlw	high main@temp
   905  000C78  6F66               	movwf	(LCD_String@string+1)& (0+255),b
   906  000C7A  ECB6  F00B         	call	_LCD_String	;wreg free
   907                           
   908                           ;main.c: 115:           _delay((unsigned long)((100)*(8000000/4000.0)));
   909  000C7E  0E02               	movlw	2
   910  000C80  0100               	movlb	0	; () banked
   911  000C82  6FC7               	movwf	(??_main+1)& (0+255),b
   912  000C84  0E04               	movlw	4
   913  000C86  6FC6               	movwf	??_main& (0+255),b
   914  000C88  0EBA               	movlw	186
   915  000C8A                     u3547:
   916  000C8A  2EE8               	decfsz	wreg,f,c
   917  000C8C  D7FE               	bra	u3547
   918  000C8E  2FC6               	decfsz	??_main& (0+255),f,b
   919  000C90  D7FC               	bra	u3547
   920  000C92  2FC7               	decfsz	(??_main+1)& (0+255),f,b
   921  000C94  D7FA               	bra	u3547
   922  000C96  F000               	nop	
   923  000C98                     l3261:
   924                           
   925                           ;main.c: 101:       while(robot_mode == 0)
   926  000C98  502C               	movf	_robot_mode,w,c	;volatile
   927  000C9A  A4D8               	btfss	status,2,c
   928  000C9C  D003               	goto	l3265
   929  000C9E  D761               	goto	l3243
   930  000CA0                     l3263:
   931                           
   932                           ;main.c: 120:       {;main.c: 122:           robot_mode = 2;
   933  000CA0  0E02               	movlw	2
   934  000CA2  6E2C               	movwf	_robot_mode,c	;volatile
   935  000CA4                     l3265:
   936                           
   937                           ;main.c: 119:       while(robot_mode == 1)
   938  000CA4  042C               	decf	_robot_mode,w,c	;volatile
   939  000CA6  A4D8               	btfss	status,2,c
   940  000CA8  D02D               	goto	u3520
   941  000CAA  D7FA               	goto	l3263
   942  000CAC                     l3267:
   943                           
   944                           ;main.c: 129:           {;main.c: 130:               ClearLCD();
   945  000CAC  EC1D  F00D         	call	_ClearLCD	;wreg free
   946                           
   947                           ;main.c: 131:               LCD_String("RESETTING ROBOT");
   948  000CB0  0E21               	movlw	low STR_3
   949  000CB2  0100               	movlb	0	; () banked
   950  000CB4  6F65               	movwf	LCD_String@string& (0+255),b
   951  000CB6  0E03               	movlw	high STR_3
   952  000CB8  6F66               	movwf	(LCD_String@string+1)& (0+255),b
   953  000CBA  ECB6  F00B         	call	_LCD_String	;wreg free
   954                           
   955                           ;main.c: 132:               for(int i=0; i<10;i++)
   956  000CBE  0E00               	movlw	0
   957  000CC0  0100               	movlb	0	; () banked
   958  000CC2  6FEB               	movwf	(main@i+1)& (0+255),b
   959  000CC4  0E00               	movlw	0
   960  000CC6  6FEA               	movwf	main@i& (0+255),b
   961  000CC8                     l3277:
   962                           
   963                           ; BSR set to: 0
   964                           ;main.c: 133:               {;main.c: 134:                   _delay((unsigned long)((100
      +                          )*(8000000/4000.0)));
   965  000CC8  0E02               	movlw	2
   966  000CCA  0100               	movlb	0	; () banked
   967  000CCC  6FC7               	movwf	(??_main+1)& (0+255),b
   968  000CCE  0E04               	movlw	4
   969  000CD0  6FC6               	movwf	??_main& (0+255),b
   970  000CD2  0EBA               	movlw	186
   971  000CD4                     u3557:
   972  000CD4  2EE8               	decfsz	wreg,f,c
   973  000CD6  D7FE               	bra	u3557
   974  000CD8  2FC6               	decfsz	??_main& (0+255),f,b
   975  000CDA  D7FC               	bra	u3557
   976  000CDC  2FC7               	decfsz	(??_main+1)& (0+255),f,b
   977  000CDE  D7FA               	bra	u3557
   978  000CE0  F000               	nop	
   979                           
   980                           ;main.c: 135:               }
   981  000CE2  0100               	movlb	0	; () banked
   982  000CE4  4BEA               	infsnz	main@i& (0+255),f,b
   983  000CE6  2BEB               	incf	(main@i+1)& (0+255),f,b
   984  000CE8  BFEB               	btfsc	(main@i+1)& (0+255),7,b
   985  000CEA  D7EE               	goto	l3277
   986  000CEC  51EB               	movf	(main@i+1)& (0+255),w,b
   987  000CEE  E104               	bnz	u3510
   988  000CF0  0E0A               	movlw	10
   989  000CF2  5DEA               	subwf	main@i& (0+255),w,b
   990  000CF4  A0D8               	btfss	status,0,c
   991  000CF6  D7E8               	goto	l3277
   992  000CF8                     u3510:
   993                           
   994                           ; BSR set to: 0
   995                           ;main.c: 136:               ClearLCD();
   996  000CF8  EC1D  F00D         	call	_ClearLCD	;wreg free
   997                           
   998                           ;main.c: 137:               robot_mode = 0;
   999  000CFC  0E00               	movlw	0
  1000  000CFE  6E2C               	movwf	_robot_mode,c	;volatile
  1001  000D00                     l3285:
  1002                           
  1003                           ;main.c: 128:           while(PORTDbits.RD2 == 1)
  1004  000D00  B483               	btfsc	3971,2,c	;volatile
  1005  000D02  D7D4               	goto	l3267
  1006  000D04                     u3520:
  1007                           
  1008                           ;main.c: 126:       while(robot_mode == 2)
  1009  000D04  0E02               	movlw	2
  1010  000D06  182C               	xorwf	_robot_mode,w,c	;volatile
  1011  000D08  A4D8               	btfss	status,2,c
  1012  000D0A  D7C6               	goto	l3261
  1013  000D0C  D7F9               	goto	l3285
  1014  000D0E                     __end_of_main:
  1015                           	opt callstack 0
  1016                           
  1017 ;; *************** function _sprintf *****************
  1018 ;; Defined at:
  1019 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  s               2   86[BANK0 ] PTR unsigned char 
  1022 ;;		 -> main@temp(32), 
  1023 ;;  fmt             2   88[BANK0 ] PTR const unsigned char 
  1024 ;;		 -> STR_2(5), 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  f               6   96[BANK0 ] struct _IO_FILE
  1027 ;;  ap              2   94[BANK0 ] PTR void [1]
  1028 ;;		 -> ?_sprintf(2), 
  1029 ;;  ret             2    0        int 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2   86[BANK0 ] int 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1039 ;;      Params:         0       6       0       0
  1040 ;;      Locals:         0      10       0       0
  1041 ;;      Temps:          0       0       0       0
  1042 ;;      Totals:         0      16       0       0
  1043 ;;Total ram usage:       16 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:   14
  1046 ;; This function calls:
  1047 ;;		_vfprintf
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text1
  1054  001882                     __ptext1:
  1055                           	opt callstack 0
  1056  001882                     _sprintf:
  1057                           	opt callstack 16
  1058                           
  1059                           ;incstack = 0
  1060  001882  0EBA               	movlw	low (?_sprintf+4)
  1061  001884  0100               	movlb	0	; () banked
  1062  001886  6FBE               	movwf	sprintf@ap& (0+255),b
  1063  001888  0E00               	movlw	high (?_sprintf+4)
  1064  00188A  6FBF               	movwf	(sprintf@ap+1)& (0+255),b
  1065  00188C  C0B6  F0C0         	movff	sprintf@s,sprintf@f
  1066  001890  C0B7  F0C1         	movff	sprintf@s+1,sprintf@f+1
  1067                           
  1068                           ; BSR set to: 0
  1069  001894  0E00               	movlw	0
  1070  001896  6FC3               	movwf	(sprintf@f+3)& (0+255),b
  1071  001898  0E00               	movlw	0
  1072  00189A  6FC2               	movwf	(sprintf@f+2)& (0+255),b
  1073                           
  1074                           ; BSR set to: 0
  1075  00189C  0E00               	movlw	0
  1076  00189E  6FC5               	movwf	(sprintf@f+5)& (0+255),b
  1077  0018A0  0E00               	movlw	0
  1078  0018A2  6FC4               	movwf	(sprintf@f+4)& (0+255),b
  1079                           
  1080                           ; BSR set to: 0
  1081  0018A4  0EC0               	movlw	low sprintf@f
  1082  0018A6  6FAE               	movwf	vfprintf@fp& (0+255),b
  1083  0018A8  0E00               	movlw	high sprintf@f
  1084  0018AA  6FAF               	movwf	(vfprintf@fp+1)& (0+255),b
  1085  0018AC  C0B8  F0B0         	movff	sprintf@fmt,vfprintf@fmt
  1086  0018B0  C0B9  F0B1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1087  0018B4  0EBE               	movlw	low sprintf@ap
  1088  0018B6  6FB2               	movwf	vfprintf@ap& (0+255),b
  1089  0018B8  0E00               	movlw	high sprintf@ap
  1090  0018BA  6FB3               	movwf	(vfprintf@ap+1)& (0+255),b
  1091  0018BC  EC16  F00C         	call	_vfprintf	;wreg free
  1092  0018C0  0100               	movlb	0	; () banked
  1093  0018C2  51C2               	movf	(sprintf@f+2)& (0+255),w,b
  1094  0018C4  25B6               	addwf	sprintf@s& (0+255),w,b
  1095  0018C6  6ED9               	movwf	fsr2l,c
  1096  0018C8  51C3               	movf	(sprintf@f+3)& (0+255),w,b
  1097  0018CA  21B7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1098  0018CC  6EDA               	movwf	fsr2h,c
  1099  0018CE  0E00               	movlw	0
  1100  0018D0  6EDF               	movwf	indf2,c
  1101                           
  1102                           ; BSR set to: 0
  1103  0018D2  0012               	return		;funcret
  1104  0018D4                     __end_of_sprintf:
  1105                           	opt callstack 0
  1106                           
  1107 ;; *************** function _vfprintf *****************
  1108 ;; Defined at:
  1109 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  1112 ;;		 -> sprintf@f(6), 
  1113 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  1114 ;;		 -> STR_2(5), 
  1115 ;;  ap              2   82[BANK0 ] PTR PTR void 
  1116 ;;		 -> sprintf@ap(2), 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  cfmt            2   84[BANK0 ] PTR unsigned char 
  1119 ;;		 -> STR_2(5), 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  2   78[BANK0 ] int 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1129 ;;      Params:         0       6       0       0
  1130 ;;      Locals:         0       2       0       0
  1131 ;;      Temps:          0       0       0       0
  1132 ;;      Totals:         0       8       0       0
  1133 ;;Total ram usage:        8 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:   13
  1136 ;; This function calls:
  1137 ;;		_vfpfcnvrt
  1138 ;; This function is called by:
  1139 ;;		_sprintf
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text2
  1144  00182C                     __ptext2:
  1145                           	opt callstack 0
  1146  00182C                     _vfprintf:
  1147                           	opt callstack 16
  1148                           
  1149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;incstack = 0
  1153  00182C  C0B0  F0B4         	movff	vfprintf@fmt,vfprintf@cfmt
  1154  001830  C0B1  F0B5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1155                           
  1156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1157  001834  0E00               	movlw	0
  1158  001836  0100               	movlb	0	; () banked
  1159  001838  6FED               	movwf	(_nout+1)& (0+255),b
  1160  00183A  0E00               	movlw	0
  1161  00183C  6FEC               	movwf	_nout& (0+255),b
  1162                           
  1163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1164  00183E  D013               	goto	l3147
  1165  001840                     l3145:
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1169  001840  C0AE  F09C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1170  001844  C0AF  F09D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1171  001848  0EB4               	movlw	low vfprintf@cfmt
  1172  00184A  6F9E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1173  00184C  0E00               	movlw	high vfprintf@cfmt
  1174  00184E  6F9F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1175  001850  C0B2  F0A0         	movff	vfprintf@ap,vfpfcnvrt@ap
  1176  001854  C0B3  F0A1         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1177  001858  EC87  F006         	call	_vfpfcnvrt	;wreg free
  1178  00185C  0100               	movlb	0	; () banked
  1179  00185E  519C               	movf	?_vfpfcnvrt& (0+255),w,b
  1180  001860  27EC               	addwf	_nout& (0+255),f,b
  1181  001862  519D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1182  001864  23ED               	addwfc	(_nout+1)& (0+255),f,b
  1183  001866                     l3147:
  1184                           
  1185                           ; BSR set to: 0
  1186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1187  001866  C0B4  FFF6         	movff	vfprintf@cfmt,tblptrl
  1188  00186A  C0B5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1189  00186E                     	if	0	;tblptru may be non-zero
  1190  00186E                     	endif
  1191  00186E                     	if	0	;tblptru may be non-zero
  1192  00186E                     	endif
  1193  00186E  0008               	tblrd		*
  1194  001870  50F5               	movf	tablat,w,c
  1195  001872  0900               	iorlw	0
  1196  001874  A4D8               	btfss	status,2,c
  1197  001876  D7E4               	goto	l3145
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1201  001878  C0EC  F0AE         	movff	_nout,?_vfprintf
  1202  00187C  C0ED  F0AF         	movff	_nout+1,?_vfprintf+1
  1203                           
  1204                           ; BSR set to: 0
  1205  001880  0012               	return		;funcret
  1206  001882                     __end_of_vfprintf:
  1207                           	opt callstack 0
  1208                           
  1209 ;; *************** function _vfpfcnvrt *****************
  1210 ;; Defined at:
  1211 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
  1214 ;;		 -> sprintf@f(6), 
  1215 ;;  fmt             2   62[BANK0 ] PTR PTR unsigned char 
  1216 ;;		 -> vfprintf@cfmt(2), 
  1217 ;;  ap              2   64[BANK0 ] PTR PTR void 
  1218 ;;		 -> sprintf@ap(2), 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  llu             8   70[BANK0 ] unsigned long long 
  1221 ;;  ll              8    0        long long 
  1222 ;;  f               4    0        long long 
  1223 ;;  vp              3    0        PTR void 
  1224 ;;  ct              3    0        unsigned char [3]
  1225 ;;  cp              3    0        PTR unsigned char 
  1226 ;;  i               2    0        int 
  1227 ;;  done            2    0        int 
  1228 ;;  c               1    0        unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  2   60[BANK0 ] int 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1238 ;;      Params:         0       6       0       0
  1239 ;;      Locals:         0       8       0       0
  1240 ;;      Temps:          0       4       0       0
  1241 ;;      Totals:         0      18       0       0
  1242 ;;Total ram usage:       18 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:   12
  1245 ;; This function calls:
  1246 ;;		_fputc
  1247 ;;		_utoa
  1248 ;; This function is called by:
  1249 ;;		_vfprintf
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text3
  1254  000D0E                     __ptext3:
  1255                           	opt callstack 0
  1256  000D0E                     _vfpfcnvrt:
  1257                           	opt callstack 16
  1258                           
  1259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;incstack = 0
  1263  000D0E  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1264  000D12  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1265  000D16  CFDE FFF6          	movff	postinc2,tblptrl
  1266  000D1A  CFDD FFF7          	movff	postdec2,tblptrh
  1267  000D1E                     	if	0	;tblptru may be non-zero
  1268  000D1E                     	endif
  1269  000D1E                     	if	0	;tblptru may be non-zero
  1270  000D1E                     	endif
  1271  000D1E  0008               	tblrd		*
  1272  000D20  50F5               	movf	tablat,w,c
  1273  000D22  0A25               	xorlw	37
  1274  000D24  A4D8               	btfss	status,2,c
  1275  000D26  D08F               	goto	l3079
  1276                           
  1277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1278  000D28  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1279  000D2C  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1280  000D30  2ADE               	incf	postinc2,f,c
  1281  000D32  0E00               	movlw	0
  1282  000D34  22DD               	addwfc	postdec2,f,c
  1283                           
  1284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1285  000D36  0E00               	movlw	0
  1286  000D38  0100               	movlb	0	; () banked
  1287  000D3A  6FEF               	movwf	(_width+1)& (0+255),b
  1288  000D3C  0E00               	movlw	0
  1289  000D3E  6FEE               	movwf	_width& (0+255),b
  1290  000D40  C0EE  F0F2         	movff	_width,_flags
  1291  000D44  C0EF  F0F3         	movff	_width+1,_flags+1
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1295  000D48  69F0               	setf	_prec& (0+255),b
  1296  000D4A  69F1               	setf	(_prec+1)& (0+255),b
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1300  000D4C  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1301  000D50  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1302  000D54  CFDE FFF6          	movff	postinc2,tblptrl
  1303  000D58  CFDD FFF7          	movff	postdec2,tblptrh
  1304  000D5C                     	if	0	;tblptru may be non-zero
  1305  000D5C                     	endif
  1306  000D5C                     	if	0	;tblptru may be non-zero
  1307  000D5C                     	endif
  1308  000D5C  0008               	tblrd		*
  1309  000D5E  50F5               	movf	tablat,w,c
  1310  000D60  0A75               	xorlw	117
  1311  000D62  A4D8               	btfss	status,2,c
  1312  000D64  D040               	goto	l3063
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1316  000D66  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1317  000D6A  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1318  000D6E  2ADE               	incf	postinc2,f,c
  1319  000D70  0E00               	movlw	0
  1320  000D72  22DD               	addwfc	postdec2,f,c
  1321                           
  1322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1323  000D74  C0A0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1324  000D78  C0A1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1325  000D7C  CFDF F0A2          	movff	indf2,??_vfpfcnvrt
  1326  000D80  0E02               	movlw	2
  1327  000D82  26DE               	addwf	postinc2,f,c
  1328  000D84  CFDF F0A3          	movff	indf2,??_vfpfcnvrt+1
  1329  000D88  0E00               	movlw	0
  1330  000D8A  22DD               	addwfc	postdec2,f,c
  1331  000D8C  C0A2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1332  000D90  C0A3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1333  000D94  CFDE F0A4          	movff	postinc2,??_vfpfcnvrt+2
  1334  000D98  CFDD F0A5          	movff	postdec2,??_vfpfcnvrt+3
  1335  000D9C  C0A4  F0A6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1336  000DA0  C0A5  F0A7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1337  000DA4  6BA8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1338  000DA6  6BA9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1339  000DA8  6BAA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1340  000DAA  6BAB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1341  000DAC  6BAC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1342  000DAE  6BAD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1346  000DB0  C09C  F07C         	movff	vfpfcnvrt@fp,utoa@fp
  1347  000DB4  C09D  F07D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1348  000DB8  C0A6  F07E         	movff	vfpfcnvrt@llu,utoa@d
  1349  000DBC  C0A7  F07F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1350  000DC0  C0A8  F080         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1351  000DC4  C0A9  F081         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1352  000DC8  C0AA  F082         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1353  000DCC  C0AB  F083         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1354  000DD0  C0AC  F084         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1355  000DD4  C0AD  F085         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1356  000DD8  ECD4  F004         	call	_utoa	;wreg free
  1357  000DDC  C07C  F09C         	movff	?_utoa,?_vfpfcnvrt
  1358  000DE0  C07D  F09D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1359  000DE4  0012               	return	
  1360  000DE6                     l3063:
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1364  000DE6  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1365  000DEA  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1366  000DEE  CFDE FFF6          	movff	postinc2,tblptrl
  1367  000DF2  CFDD FFF7          	movff	postdec2,tblptrh
  1368  000DF6                     	if	0	;tblptru may be non-zero
  1369  000DF6                     	endif
  1370  000DF6                     	if	0	;tblptru may be non-zero
  1371  000DF6                     	endif
  1372  000DF6  0008               	tblrd		*
  1373  000DF8  50F5               	movf	tablat,w,c
  1374  000DFA  0A25               	xorlw	37
  1375  000DFC  A4D8               	btfss	status,2,c
  1376  000DFE  D017               	goto	l3073
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1380  000E00  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1381  000E04  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1382  000E08  2ADE               	incf	postinc2,f,c
  1383  000E0A  0E00               	movlw	0
  1384  000E0C  22DD               	addwfc	postdec2,f,c
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1388  000E0E  0E00               	movlw	0
  1389  000E10  6F62               	movwf	(fputc@c+1)& (0+255),b
  1390  000E12  0E25               	movlw	37
  1391  000E14  6F61               	movwf	fputc@c& (0+255),b
  1392  000E16  C09C  F063         	movff	vfpfcnvrt@fp,fputc@fp
  1393  000E1A  C09D  F064         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1394  000E1E  EC13  F00A         	call	_fputc	;wreg free
  1395  000E22                     l3069:
  1396                           
  1397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1398  000E22  0E00               	movlw	0
  1399  000E24  0100               	movlb	0	; () banked
  1400  000E26  6F9D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1401  000E28  0E01               	movlw	1
  1402  000E2A  6F9C               	movwf	?_vfpfcnvrt& (0+255),b
  1403  000E2C  0012               	return	
  1404  000E2E                     l3073:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1408  000E2E  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1409  000E32  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1410  000E36  2ADE               	incf	postinc2,f,c
  1411  000E38  0E00               	movlw	0
  1412  000E3A  22DD               	addwfc	postdec2,f,c
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1416  000E3C  0E00               	movlw	0
  1417  000E3E  6F9D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1418  000E40  0E00               	movlw	0
  1419  000E42  6F9C               	movwf	?_vfpfcnvrt& (0+255),b
  1420  000E44  0012               	return	
  1421  000E46                     l3079:
  1422                           
  1423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1424  000E46  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1425  000E4A  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1426  000E4E  CFDE FFF6          	movff	postinc2,tblptrl
  1427  000E52  CFDD FFF7          	movff	postdec2,tblptrh
  1428  000E56                     	if	0	;tblptru may be non-zero
  1429  000E56                     	endif
  1430  000E56                     	if	0	;tblptru may be non-zero
  1431  000E56                     	endif
  1432  000E56  0008               	tblrd		*
  1433  000E58  50F5               	movf	tablat,w,c
  1434  000E5A  0100               	movlb	0	; () banked
  1435  000E5C  6F61               	movwf	fputc@c& (0+255),b
  1436  000E5E  6B62               	clrf	(fputc@c+1)& (0+255),b
  1437  000E60  C09C  F063         	movff	vfpfcnvrt@fp,fputc@fp
  1438  000E64  C09D  F064         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1439  000E68  EC13  F00A         	call	_fputc	;wreg free
  1440                           
  1441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1442  000E6C  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  000E70  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  000E74  2ADE               	incf	postinc2,f,c
  1445  000E76  0E00               	movlw	0
  1446  000E78  22DD               	addwfc	postdec2,f,c
  1447  000E7A  D7D3               	goto	l3069
  1448  000E7C                     __end_of_vfpfcnvrt:
  1449                           	opt callstack 0
  1450                           
  1451 ;; *************** function _utoa *****************
  1452 ;; Defined at:
  1453 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  1456 ;;		 -> sprintf@f(6), 
  1457 ;;  d               8   30[BANK0 ] unsigned long long 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  n               8   50[BANK0 ] unsigned long long 
  1460 ;;  i               2   58[BANK0 ] int 
  1461 ;;  w               2   48[BANK0 ] int 
  1462 ;;  p               2   46[BANK0 ] int 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  2   28[BANK0 ] int 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1472 ;;      Params:         0      10       0       0
  1473 ;;      Locals:         0      14       0       0
  1474 ;;      Temps:          0       8       0       0
  1475 ;;      Totals:         0      32       0       0
  1476 ;;Total ram usage:       32 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:   11
  1479 ;; This function calls:
  1480 ;;		___lodiv
  1481 ;;		___lomod
  1482 ;;		_pad
  1483 ;; This function is called by:
  1484 ;;		_vfpfcnvrt
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text4
  1489  0009A8                     __ptext4:
  1490                           	opt callstack 0
  1491  0009A8                     _utoa:
  1492                           	opt callstack 16
  1493                           
  1494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1495                           
  1496                           ;incstack = 0
  1497  0009A8  0100               	movlb	0	; () banked
  1498  0009AA  AFF1               	btfss	(_prec+1)& (0+255),7,b
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1502  0009AC  93F2               	bcf	_flags& (0+255),1,b
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1506  0009AE  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  1507  0009B0  D005               	goto	u3220
  1508  0009B2  51F1               	movf	(_prec+1)& (0+255),w,b
  1509  0009B4  E108               	bnz	l289
  1510  0009B6  05F0               	decf	_prec& (0+255),w,b
  1511  0009B8  B0D8               	btfsc	status,0,c
  1512  0009BA  D005               	goto	l289
  1513  0009BC                     u3220:
  1514                           
  1515                           ; BSR set to: 0
  1516  0009BC  0E00               	movlw	0
  1517  0009BE  6F8F               	movwf	(utoa@p+1)& (0+255),b
  1518  0009C0  0E01               	movlw	1
  1519  0009C2  6F8E               	movwf	utoa@p& (0+255),b
  1520  0009C4  D004               	goto	l291
  1521  0009C6                     l289:
  1522                           
  1523                           ; BSR set to: 0
  1524  0009C6  C0F0  F08E         	movff	_prec,utoa@p
  1525  0009CA  C0F1  F08F         	movff	_prec+1,utoa@p+1
  1526  0009CE                     l291:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1530  0009CE  C0EE  F090         	movff	_width,utoa@w
  1531  0009D2  C0EF  F091         	movff	_width+1,utoa@w+1
  1532                           
  1533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1534  0009D6  C07E  F092         	movff	utoa@d,utoa@n
  1535  0009DA  C07F  F093         	movff	utoa@d+1,utoa@n+1
  1536  0009DE  C080  F094         	movff	utoa@d+2,utoa@n+2
  1537  0009E2  C081  F095         	movff	utoa@d+3,utoa@n+3
  1538  0009E6  C082  F096         	movff	utoa@d+4,utoa@n+4
  1539  0009EA  C083  F097         	movff	utoa@d+5,utoa@n+5
  1540  0009EE  C084  F098         	movff	utoa@d+6,utoa@n+6
  1541  0009F2  C085  F099         	movff	utoa@d+7,utoa@n+7
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1545  0009F6  0E00               	movlw	0
  1546  0009F8  6F9B               	movwf	(utoa@i+1)& (0+255),b
  1547  0009FA  0E1F               	movlw	31
  1548  0009FC  6F9A               	movwf	utoa@i& (0+255),b
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1552  0009FE  0E00               	movlw	0
  1553  000A00  0101               	movlb	1	; () banked
  1554  000A02  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1555                           
  1556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1557  000A04  D077               	goto	l3025
  1558  000A06                     l3015:
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1562  000A06  079A               	decf	utoa@i& (0+255),f,b
  1563  000A08  A0D8               	btfss	status,0,c
  1564  000A0A  079B               	decf	(utoa@i+1)& (0+255),f,b
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1568  000A0C  0E00               	movlw	low _dbuf
  1569  000A0E  259A               	addwf	utoa@i& (0+255),w,b
  1570  000A10  6ED9               	movwf	fsr2l,c
  1571  000A12  0E01               	movlw	high _dbuf
  1572  000A14  219B               	addwfc	(utoa@i+1)& (0+255),w,b
  1573  000A16  6EDA               	movwf	fsr2h,c
  1574  000A18  C092  F061         	movff	utoa@n,___lomod@dividend
  1575  000A1C  C093  F062         	movff	utoa@n+1,___lomod@dividend+1
  1576  000A20  C094  F063         	movff	utoa@n+2,___lomod@dividend+2
  1577  000A24  C095  F064         	movff	utoa@n+3,___lomod@dividend+3
  1578  000A28  C096  F065         	movff	utoa@n+4,___lomod@dividend+4
  1579  000A2C  C097  F066         	movff	utoa@n+5,___lomod@dividend+5
  1580  000A30  C098  F067         	movff	utoa@n+6,___lomod@dividend+6
  1581  000A34  C099  F068         	movff	utoa@n+7,___lomod@dividend+7
  1582  000A38  0E0A               	movlw	10
  1583  000A3A  6F69               	movwf	___lomod@divisor& (0+255),b
  1584  000A3C  0E00               	movlw	0
  1585  000A3E  6F6A               	movwf	(___lomod@divisor+1)& (0+255),b
  1586  000A40  0E00               	movlw	0
  1587  000A42  6F6B               	movwf	(___lomod@divisor+2)& (0+255),b
  1588  000A44  0E00               	movlw	0
  1589  000A46  6F6C               	movwf	(___lomod@divisor+3)& (0+255),b
  1590  000A48  0E00               	movlw	0
  1591  000A4A  6F6D               	movwf	(___lomod@divisor+4)& (0+255),b
  1592  000A4C  0E00               	movlw	0
  1593  000A4E  6F6E               	movwf	(___lomod@divisor+5)& (0+255),b
  1594  000A50  0E00               	movlw	0
  1595  000A52  6F6F               	movwf	(___lomod@divisor+6)& (0+255),b
  1596  000A54  0E00               	movlw	0
  1597  000A56  6F70               	movwf	(___lomod@divisor+7)& (0+255),b
  1598  000A58  ECBB  F009         	call	___lomod	;wreg free
  1599  000A5C  C061  F086         	movff	?___lomod,??_utoa
  1600  000A60  C062  F087         	movff	?___lomod+1,??_utoa+1
  1601  000A64  C063  F088         	movff	?___lomod+2,??_utoa+2
  1602  000A68  C064  F089         	movff	?___lomod+3,??_utoa+3
  1603  000A6C  C065  F08A         	movff	?___lomod+4,??_utoa+4
  1604  000A70  C066  F08B         	movff	?___lomod+5,??_utoa+5
  1605  000A74  C067  F08C         	movff	?___lomod+6,??_utoa+6
  1606  000A78  C068  F08D         	movff	?___lomod+7,??_utoa+7
  1607  000A7C  0100               	movlb	0	; () banked
  1608  000A7E  5186               	movf	??_utoa& (0+255),w,b
  1609  000A80  0F30               	addlw	48
  1610  000A82  6EDF               	movwf	indf2,c
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1614  000A84  078E               	decf	utoa@p& (0+255),f,b
  1615  000A86  A0D8               	btfss	status,0,c
  1616  000A88  078F               	decf	(utoa@p+1)& (0+255),f,b
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1620  000A8A  0790               	decf	utoa@w& (0+255),f,b
  1621  000A8C  A0D8               	btfss	status,0,c
  1622  000A8E  0791               	decf	(utoa@w+1)& (0+255),f,b
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1626  000A90  C092  F061         	movff	utoa@n,___lodiv@dividend
  1627  000A94  C093  F062         	movff	utoa@n+1,___lodiv@dividend+1
  1628  000A98  C094  F063         	movff	utoa@n+2,___lodiv@dividend+2
  1629  000A9C  C095  F064         	movff	utoa@n+3,___lodiv@dividend+3
  1630  000AA0  C096  F065         	movff	utoa@n+4,___lodiv@dividend+4
  1631  000AA4  C097  F066         	movff	utoa@n+5,___lodiv@dividend+5
  1632  000AA8  C098  F067         	movff	utoa@n+6,___lodiv@dividend+6
  1633  000AAC  C099  F068         	movff	utoa@n+7,___lodiv@dividend+7
  1634  000AB0  0E0A               	movlw	10
  1635  000AB2  6F69               	movwf	___lodiv@divisor& (0+255),b
  1636  000AB4  0E00               	movlw	0
  1637  000AB6  6F6A               	movwf	(___lodiv@divisor+1)& (0+255),b
  1638  000AB8  0E00               	movlw	0
  1639  000ABA  6F6B               	movwf	(___lodiv@divisor+2)& (0+255),b
  1640  000ABC  0E00               	movlw	0
  1641  000ABE  6F6C               	movwf	(___lodiv@divisor+3)& (0+255),b
  1642  000AC0  0E00               	movlw	0
  1643  000AC2  6F6D               	movwf	(___lodiv@divisor+4)& (0+255),b
  1644  000AC4  0E00               	movlw	0
  1645  000AC6  6F6E               	movwf	(___lodiv@divisor+5)& (0+255),b
  1646  000AC8  0E00               	movlw	0
  1647  000ACA  6F6F               	movwf	(___lodiv@divisor+6)& (0+255),b
  1648  000ACC  0E00               	movlw	0
  1649  000ACE  6F70               	movwf	(___lodiv@divisor+7)& (0+255),b
  1650  000AD0  ECF5  F008         	call	___lodiv	;wreg free
  1651  000AD4  C061  F092         	movff	?___lodiv,utoa@n
  1652  000AD8  C062  F093         	movff	?___lodiv+1,utoa@n+1
  1653  000ADC  C063  F094         	movff	?___lodiv+2,utoa@n+2
  1654  000AE0  C064  F095         	movff	?___lodiv+3,utoa@n+3
  1655  000AE4  C065  F096         	movff	?___lodiv+4,utoa@n+4
  1656  000AE8  C066  F097         	movff	?___lodiv+5,utoa@n+5
  1657  000AEC  C067  F098         	movff	?___lodiv+6,utoa@n+6
  1658  000AF0  C068  F099         	movff	?___lodiv+7,utoa@n+7
  1659  000AF4                     l3025:
  1660                           
  1661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1662  000AF4  0100               	movlb	0	; () banked
  1663  000AF6  519A               	movf	utoa@i& (0+255),w,b
  1664  000AF8  119B               	iorwf	(utoa@i+1)& (0+255),w,b
  1665  000AFA  B4D8               	btfsc	status,2,c
  1666  000AFC  D01A               	goto	u3270
  1667                           
  1668                           ; BSR set to: 0
  1669  000AFE  5192               	movf	utoa@n& (0+255),w,b
  1670  000B00  1193               	iorwf	(utoa@n+1)& (0+255),w,b
  1671  000B02  1194               	iorwf	(utoa@n+2)& (0+255),w,b
  1672  000B04  1195               	iorwf	(utoa@n+3)& (0+255),w,b
  1673  000B06  1196               	iorwf	(utoa@n+4)& (0+255),w,b
  1674  000B08  1197               	iorwf	(utoa@n+5)& (0+255),w,b
  1675  000B0A  1198               	iorwf	(utoa@n+6)& (0+255),w,b
  1676  000B0C  1199               	iorwf	(utoa@n+7)& (0+255),w,b
  1677  000B0E  A4D8               	btfss	status,2,c
  1678  000B10  D77A               	goto	l3015
  1679                           
  1680                           ; BSR set to: 0
  1681  000B12  BF8F               	btfsc	(utoa@p+1)& (0+255),7,b
  1682  000B14  D005               	goto	u3250
  1683  000B16  518F               	movf	(utoa@p+1)& (0+255),w,b
  1684  000B18  E102               	bnz	u3251
  1685  000B1A  058E               	decf	utoa@p& (0+255),w,b
  1686  000B1C  B0D8               	btfsc	status,0,c
  1687  000B1E                     u3251:
  1688  000B1E  D773               	goto	l3015
  1689  000B20                     u3250:
  1690                           
  1691                           ; BSR set to: 0
  1692  000B20  BF91               	btfsc	(utoa@w+1)& (0+255),7,b
  1693  000B22  D007               	goto	u3270
  1694  000B24  5191               	movf	(utoa@w+1)& (0+255),w,b
  1695  000B26  E103               	bnz	u3260
  1696  000B28  0590               	decf	utoa@w& (0+255),w,b
  1697  000B2A  A0D8               	btfss	status,0,c
  1698  000B2C  D002               	goto	u3270
  1699  000B2E                     u3260:
  1700                           
  1701                           ; BSR set to: 0
  1702  000B2E  B3F2               	btfsc	_flags& (0+255),1,b
  1703  000B30  D76A               	goto	l3015
  1704  000B32                     u3270:
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1708  000B32  C07C  F071         	movff	utoa@fp,pad@fp
  1709  000B36  C07D  F072         	movff	utoa@fp+1,pad@fp+1
  1710  000B3A  0E00               	movlw	low _dbuf
  1711  000B3C  259A               	addwf	utoa@i& (0+255),w,b
  1712  000B3E  6F73               	movwf	pad@buf& (0+255),b
  1713  000B40  0E01               	movlw	high _dbuf
  1714  000B42  219B               	addwfc	(utoa@i+1)& (0+255),w,b
  1715  000B44  6F74               	movwf	(pad@buf+1)& (0+255),b
  1716  000B46  C090  F075         	movff	utoa@w,pad@p
  1717  000B4A  C091  F076         	movff	utoa@w+1,pad@p+1
  1718  000B4E  EC64  F00A         	call	_pad	;wreg free
  1719  000B52  C071  F07C         	movff	?_pad,?_utoa
  1720  000B56  C072  F07D         	movff	?_pad+1,?_utoa+1
  1721  000B5A  0012               	return		;funcret
  1722  000B5C                     __end_of_utoa:
  1723                           	opt callstack 0
  1724                           
  1725 ;; *************** function _pad *****************
  1726 ;; Defined at:
  1727 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  1730 ;;		 -> sprintf@f(6), 
  1731 ;;  buf             2   19[BANK0 ] PTR unsigned char 
  1732 ;;		 -> dbuf(32), 
  1733 ;;  p               2   21[BANK0 ] int 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  w               2   26[BANK0 ] int 
  1736 ;;  i               2   24[BANK0 ] int 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  2   17[BANK0 ] int 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1746 ;;      Params:         0       6       0       0
  1747 ;;      Locals:         0       4       0       0
  1748 ;;      Temps:          0       1       0       0
  1749 ;;      Totals:         0      11       0       0
  1750 ;;Total ram usage:       11 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:   10
  1753 ;; This function calls:
  1754 ;;		_fputc
  1755 ;;		_fputs
  1756 ;;		_strlen
  1757 ;; This function is called by:
  1758 ;;		_utoa
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text5
  1763  0014C8                     __ptext5:
  1764                           	opt callstack 0
  1765  0014C8                     _pad:
  1766                           	opt callstack 16
  1767                           
  1768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1769                           
  1770                           ;incstack = 0
  1771  0014C8  0100               	movlb	0	; () banked
  1772  0014CA  A1F2               	btfss	_flags& (0+255),0,b
  1773  0014CC  D00A               	goto	l2941
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1777  0014CE  C073  F06A         	movff	pad@buf,fputs@s
  1778  0014D2  C074  F06B         	movff	pad@buf+1,fputs@s+1
  1779  0014D6  C071  F06C         	movff	pad@fp,fputs@fp
  1780  0014DA  C072  F06D         	movff	pad@fp+1,fputs@fp+1
  1781  0014DE  EC6A  F00C         	call	_fputs	;wreg free
  1782  0014E2                     l2941:
  1783                           
  1784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1785  0014E2  0100               	movlb	0	; () banked
  1786  0014E4  BF76               	btfsc	(pad@p+1)& (0+255),7,b
  1787  0014E6  D005               	goto	l2945
  1788                           
  1789                           ; BSR set to: 0
  1790  0014E8  C075  F07A         	movff	pad@p,pad@w
  1791  0014EC  C076  F07B         	movff	pad@p+1,pad@w+1
  1792  0014F0  D004               	goto	l279
  1793  0014F2                     l2945:
  1794                           
  1795                           ; BSR set to: 0
  1796  0014F2  0E00               	movlw	0
  1797  0014F4  6F7B               	movwf	(pad@w+1)& (0+255),b
  1798  0014F6  0E00               	movlw	0
  1799  0014F8  6F7A               	movwf	pad@w& (0+255),b
  1800  0014FA                     l279:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1804  0014FA  0E00               	movlw	0
  1805  0014FC  6F79               	movwf	(pad@i+1)& (0+255),b
  1806  0014FE  0E00               	movlw	0
  1807  001500  6F78               	movwf	pad@i& (0+255),b
  1808                           
  1809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1810  001502  D00D               	goto	l2951
  1811  001504                     l2947:
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1815  001504  0E00               	movlw	0
  1816  001506  6F62               	movwf	(fputc@c+1)& (0+255),b
  1817  001508  0E20               	movlw	32
  1818  00150A  6F61               	movwf	fputc@c& (0+255),b
  1819  00150C  C071  F063         	movff	pad@fp,fputc@fp
  1820  001510  C072  F064         	movff	pad@fp+1,fputc@fp+1
  1821  001514  EC13  F00A         	call	_fputc	;wreg free
  1822                           
  1823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1824  001518  0100               	movlb	0	; () banked
  1825  00151A  4B78               	infsnz	pad@i& (0+255),f,b
  1826  00151C  2B79               	incf	(pad@i+1)& (0+255),f,b
  1827  00151E                     l2951:
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1831  00151E  517A               	movf	pad@w& (0+255),w,b
  1832  001520  5D78               	subwf	pad@i& (0+255),w,b
  1833  001522  5179               	movf	(pad@i+1)& (0+255),w,b
  1834  001524  0A80               	xorlw	128
  1835  001526  6F77               	movwf	??_pad& (0+255),b
  1836  001528  517B               	movf	(pad@w+1)& (0+255),w,b
  1837  00152A  0A80               	xorlw	128
  1838  00152C  5977               	subwfb	??_pad& (0+255),w,b
  1839  00152E  A0D8               	btfss	status,0,c
  1840  001530  D7E9               	goto	l2947
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1844  001532  B1F2               	btfsc	_flags& (0+255),0,b
  1845  001534  D00A               	goto	l2955
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1849  001536  C073  F06A         	movff	pad@buf,fputs@s
  1850  00153A  C074  F06B         	movff	pad@buf+1,fputs@s+1
  1851  00153E  C071  F06C         	movff	pad@fp,fputs@fp
  1852  001542  C072  F06D         	movff	pad@fp+1,fputs@fp+1
  1853  001546  EC6A  F00C         	call	_fputs	;wreg free
  1854  00154A                     l2955:
  1855                           
  1856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1857  00154A  C073  F061         	movff	pad@buf,strlen@s
  1858  00154E  C074  F062         	movff	pad@buf+1,strlen@s+1
  1859  001552  ECEF  F00C         	call	_strlen	;wreg free
  1860  001556  0100               	movlb	0	; () banked
  1861  001558  517A               	movf	pad@w& (0+255),w,b
  1862  00155A  2561               	addwf	?_strlen& (0+255),w,b
  1863  00155C  6F71               	movwf	?_pad& (0+255),b
  1864  00155E  517B               	movf	(pad@w+1)& (0+255),w,b
  1865  001560  2162               	addwfc	(?_strlen+1)& (0+255),w,b
  1866  001562  6F72               	movwf	(?_pad+1)& (0+255),b
  1867                           
  1868                           ; BSR set to: 0
  1869  001564  0012               	return		;funcret
  1870  001566                     __end_of_pad:
  1871                           	opt callstack 0
  1872                           
  1873 ;; *************** function _strlen *****************
  1874 ;; Defined at:
  1875 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  s               2    1[BANK0 ] PTR const unsigned char 
  1878 ;;		 -> dbuf(32), 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  a               2    3[BANK0 ] PTR const unsigned char 
  1881 ;;		 -> dbuf(32), 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  2    1[BANK0 ] unsigned int 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1891 ;;      Params:         0       2       0       0
  1892 ;;      Locals:         0       2       0       0
  1893 ;;      Temps:          0       0       0       0
  1894 ;;      Totals:         0       4       0       0
  1895 ;;Total ram usage:        4 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    7
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_pad
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text6
  1906  0019DE                     __ptext6:
  1907                           	opt callstack 0
  1908  0019DE                     _strlen:
  1909                           	opt callstack 18
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;incstack = 0
  1913  0019DE  C061  F063         	movff	strlen@s,strlen@a
  1914  0019E2  C062  F064         	movff	strlen@s+1,strlen@a+1
  1915  0019E6  D003               	goto	l2925
  1916  0019E8                     l2923:
  1917  0019E8  0100               	movlb	0	; () banked
  1918  0019EA  4B61               	infsnz	strlen@s& (0+255),f,b
  1919  0019EC  2B62               	incf	(strlen@s+1)& (0+255),f,b
  1920  0019EE                     l2925:
  1921  0019EE  C061  FFD9         	movff	strlen@s,fsr2l
  1922  0019F2  C062  FFDA         	movff	strlen@s+1,fsr2h
  1923  0019F6  50DF               	movf	indf2,w,c
  1924  0019F8  A4D8               	btfss	status,2,c
  1925  0019FA  D7F6               	goto	l2923
  1926  0019FC  0100               	movlb	0	; () banked
  1927  0019FE  5163               	movf	strlen@a& (0+255),w,b
  1928  001A00  5D61               	subwf	strlen@s& (0+255),w,b
  1929  001A02  6F61               	movwf	?_strlen& (0+255),b
  1930  001A04  5164               	movf	(strlen@a+1)& (0+255),w,b
  1931  001A06  5962               	subwfb	(strlen@s+1)& (0+255),w,b
  1932  001A08  6F62               	movwf	(?_strlen+1)& (0+255),b
  1933                           
  1934                           ; BSR set to: 0
  1935  001A0A  0012               	return		;funcret
  1936  001A0C                     __end_of_strlen:
  1937                           	opt callstack 0
  1938                           
  1939 ;; *************** function _fputs *****************
  1940 ;; Defined at:
  1941 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  s               2   10[BANK0 ] PTR const unsigned char 
  1944 ;;		 -> dbuf(32), 
  1945 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  1946 ;;		 -> sprintf@f(6), 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  i               2   15[BANK0 ] int 
  1949 ;;  c               1   14[BANK0 ] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  2   10[BANK0 ] int 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1959 ;;      Params:         0       4       0       0
  1960 ;;      Locals:         0       3       0       0
  1961 ;;      Temps:          0       0       0       0
  1962 ;;      Totals:         0       7       0       0
  1963 ;;Total ram usage:        7 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    9
  1966 ;; This function calls:
  1967 ;;		_fputc
  1968 ;; This function is called by:
  1969 ;;		_pad
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text7
  1974  0018D4                     __ptext7:
  1975                           	opt callstack 0
  1976  0018D4                     _fputs:
  1977                           	opt callstack 16
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;incstack = 0
  1981  0018D4  0E00               	movlw	0
  1982  0018D6  0100               	movlb	0	; () banked
  1983  0018D8  6F70               	movwf	(fputs@i+1)& (0+255),b
  1984  0018DA  0E00               	movlw	0
  1985  0018DC  6F6F               	movwf	fputs@i& (0+255),b
  1986  0018DE  D00C               	goto	l2919
  1987  0018E0                     l2915:
  1988                           
  1989                           ; BSR set to: 0
  1990  0018E0  C06E  F061         	movff	fputs@c,fputc@c
  1991  0018E4  6B62               	clrf	(fputc@c+1)& (0+255),b
  1992  0018E6  C06C  F063         	movff	fputs@fp,fputc@fp
  1993  0018EA  C06D  F064         	movff	fputs@fp+1,fputc@fp+1
  1994  0018EE  EC13  F00A         	call	_fputc	;wreg free
  1995  0018F2  0100               	movlb	0	; () banked
  1996  0018F4  4B6F               	infsnz	fputs@i& (0+255),f,b
  1997  0018F6  2B70               	incf	(fputs@i+1)& (0+255),f,b
  1998  0018F8                     l2919:
  1999                           
  2000                           ; BSR set to: 0
  2001  0018F8  516F               	movf	fputs@i& (0+255),w,b
  2002  0018FA  256A               	addwf	fputs@s& (0+255),w,b
  2003  0018FC  6ED9               	movwf	fsr2l,c
  2004  0018FE  5170               	movf	(fputs@i+1)& (0+255),w,b
  2005  001900  216B               	addwfc	(fputs@s+1)& (0+255),w,b
  2006  001902  6EDA               	movwf	fsr2h,c
  2007  001904  50DF               	movf	indf2,w,c
  2008  001906  6F6E               	movwf	fputs@c& (0+255),b
  2009  001908  516E               	movf	fputs@c& (0+255),w,b
  2010  00190A  B4D8               	btfsc	status,2,c
  2011  00190C  0012               	return	
  2012  00190E  D7E8               	goto	l2915
  2013  001910                     __end_of_fputs:
  2014                           	opt callstack 0
  2015                           
  2016 ;; *************** function _fputc *****************
  2017 ;; Defined at:
  2018 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  c               2    1[BANK0 ] int 
  2021 ;;  fp              2    3[BANK0 ] PTR struct _IO_FILE
  2022 ;;		 -> sprintf@f(6), 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  2    1[BANK0 ] int 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2034 ;;      Params:         0       4       0       0
  2035 ;;      Locals:         0       0       0       0
  2036 ;;      Temps:          0       5       0       0
  2037 ;;      Totals:         0       9       0       0
  2038 ;;Total ram usage:        9 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    8
  2041 ;; This function calls:
  2042 ;;		_putch
  2043 ;; This function is called by:
  2044 ;;		_pad
  2045 ;;		_vfpfcnvrt
  2046 ;;		_fputs
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text8
  2051  001426                     __ptext8:
  2052                           	opt callstack 0
  2053  001426                     _fputc:
  2054                           	opt callstack 16
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;incstack = 0
  2058  001426  0100               	movlb	0	; () banked
  2059  001428  5163               	movf	fputc@fp& (0+255),w,b
  2060  00142A  1164               	iorwf	(fputc@fp+1)& (0+255),w,b
  2061  00142C  B4D8               	btfsc	status,2,c
  2062  00142E  D004               	goto	u3050
  2063                           
  2064                           ; BSR set to: 0
  2065  001430  5163               	movf	fputc@fp& (0+255),w,b
  2066  001432  1164               	iorwf	(fputc@fp+1)& (0+255),w,b
  2067  001434  A4D8               	btfss	status,2,c
  2068  001436  D004               	goto	l2905
  2069  001438                     u3050:
  2070                           
  2071                           ; BSR set to: 0
  2072  001438  5161               	movf	fputc@c& (0+255),w,b
  2073  00143A  EC73  F00D         	call	_putch
  2074  00143E  0012               	return	
  2075  001440                     l2905:
  2076                           
  2077                           ; BSR set to: 0
  2078  001440  EE20 F004          	lfsr	2,4
  2079  001444  5163               	movf	fputc@fp& (0+255),w,b
  2080  001446  26D9               	addwf	fsr2l,f,c
  2081  001448  5164               	movf	(fputc@fp+1)& (0+255),w,b
  2082  00144A  22DA               	addwfc	fsr2h,f,c
  2083  00144C  50DE               	movf	postinc2,w,c
  2084  00144E  10DE               	iorwf	postinc2,w,c
  2085  001450  B4D8               	btfsc	status,2,c
  2086  001452  D016               	goto	u3070
  2087                           
  2088                           ; BSR set to: 0
  2089  001454  EE20 F004          	lfsr	2,4
  2090  001458  5163               	movf	fputc@fp& (0+255),w,b
  2091  00145A  26D9               	addwf	fsr2l,f,c
  2092  00145C  5164               	movf	(fputc@fp+1)& (0+255),w,b
  2093  00145E  22DA               	addwfc	fsr2h,f,c
  2094  001460  EE10 F002          	lfsr	1,2
  2095  001464  5163               	movf	fputc@fp& (0+255),w,b
  2096  001466  26E1               	addwf	fsr1l,f,c
  2097  001468  5164               	movf	(fputc@fp+1)& (0+255),w,b
  2098  00146A  22E2               	addwfc	fsr1h,f,c
  2099  00146C  50DE               	movf	postinc2,w,c
  2100  00146E  5CE6               	subwf	postinc1,w,c
  2101  001470  50E6               	movf	postinc1,w,c
  2102  001472  0A80               	xorlw	128
  2103  001474  6F69               	movwf	(??_fputc+4)& (0+255),b
  2104  001476  50DE               	movf	postinc2,w,c
  2105  001478  0A80               	xorlw	128
  2106  00147A  5969               	subwfb	(??_fputc+4)& (0+255),w,b
  2107  00147C  B0D8               	btfsc	status,0,c
  2108  00147E  0012               	return	
  2109  001480                     u3070:
  2110                           
  2111                           ; BSR set to: 0
  2112  001480  EE20 F002          	lfsr	2,2
  2113  001484  5163               	movf	fputc@fp& (0+255),w,b
  2114  001486  26D9               	addwf	fsr2l,f,c
  2115  001488  5164               	movf	(fputc@fp+1)& (0+255),w,b
  2116  00148A  22DA               	addwfc	fsr2h,f,c
  2117  00148C  CFDE F065          	movff	postinc2,??_fputc
  2118  001490  CFDD F066          	movff	postdec2,??_fputc+1
  2119  001494  C063  FFD9         	movff	fputc@fp,fsr2l
  2120  001498  C064  FFDA         	movff	fputc@fp+1,fsr2h
  2121  00149C  CFDE F067          	movff	postinc2,??_fputc+2
  2122  0014A0  CFDD F068          	movff	postdec2,??_fputc+3
  2123  0014A4  5165               	movf	??_fputc& (0+255),w,b
  2124  0014A6  2567               	addwf	(??_fputc+2)& (0+255),w,b
  2125  0014A8  6ED9               	movwf	fsr2l,c
  2126  0014AA  5166               	movf	(??_fputc+1)& (0+255),w,b
  2127  0014AC  2168               	addwfc	(??_fputc+3)& (0+255),w,b
  2128  0014AE  6EDA               	movwf	fsr2h,c
  2129  0014B0  C061  FFDF         	movff	fputc@c,indf2
  2130  0014B4  EE20 F002          	lfsr	2,2
  2131  0014B8  5163               	movf	fputc@fp& (0+255),w,b
  2132  0014BA  26D9               	addwf	fsr2l,f,c
  2133  0014BC  5164               	movf	(fputc@fp+1)& (0+255),w,b
  2134  0014BE  22DA               	addwfc	fsr2h,f,c
  2135  0014C0  2ADE               	incf	postinc2,f,c
  2136  0014C2  0E00               	movlw	0
  2137  0014C4  22DD               	addwfc	postdec2,f,c
  2138  0014C6  0012               	return		;funcret
  2139  0014C8                     __end_of_fputc:
  2140                           	opt callstack 0
  2141                           
  2142 ;; *************** function _putch *****************
  2143 ;; Defined at:
  2144 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  c               1    wreg     unsigned char 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  c               1    0[COMRAM] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2158 ;;      Params:         0       0       0       0
  2159 ;;      Locals:         0       0       0       0
  2160 ;;      Temps:          0       0       0       0
  2161 ;;      Totals:         0       0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    7
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_fputc
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text9
  2173  001AE6                     __ptext9:
  2174                           	opt callstack 0
  2175  001AE6                     _putch:
  2176                           	opt callstack 16
  2177                           
  2178                           ;incstack = 0
  2179  001AE6  0012               	return		;funcret
  2180  001AE8                     __end_of_putch:
  2181                           	opt callstack 0
  2182                           
  2183 ;; *************** function ___lomod *****************
  2184 ;; Defined at:
  2185 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  dividend        8    1[BANK0 ] unsigned long long 
  2188 ;;  divisor         8    9[BANK0 ] unsigned long long 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  counter         1   17[BANK0 ] unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  8    1[BANK0 ] unsigned long long 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2200 ;;      Params:         0      16       0       0
  2201 ;;      Locals:         0       1       0       0
  2202 ;;      Temps:          0       0       0       0
  2203 ;;      Totals:         0      17       0       0
  2204 ;;Total ram usage:       17 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    7
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_utoa
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text10
  2215  001376                     __ptext10:
  2216                           	opt callstack 0
  2217  001376                     ___lomod:
  2218                           	opt callstack 19
  2219                           
  2220                           ;incstack = 0
  2221  001376  0100               	movlb	0	; () banked
  2222  001378  5169               	movf	___lomod@divisor& (0+255),w,b
  2223  00137A  116A               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  2224  00137C  116B               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  2225  00137E  116C               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  2226  001380  116D               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  2227  001382  116E               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  2228  001384  116F               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  2229  001386  1170               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  2230  001388  B4D8               	btfsc	status,2,c
  2231  00138A  D03C               	goto	l762
  2232                           
  2233                           ; BSR set to: 0
  2234  00138C  0E01               	movlw	1
  2235  00138E  6F71               	movwf	___lomod@counter& (0+255),b
  2236  001390  D00A               	goto	l2987
  2237  001392                     l2985:
  2238                           
  2239                           ; BSR set to: 0
  2240  001392  90D8               	bcf	status,0,c
  2241  001394  3769               	rlcf	___lomod@divisor& (0+255),f,b
  2242  001396  376A               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  2243  001398  376B               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  2244  00139A  376C               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  2245  00139C  376D               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  2246  00139E  376E               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  2247  0013A0  376F               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  2248  0013A2  3770               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  2249  0013A4  2B71               	incf	___lomod@counter& (0+255),f,b
  2250  0013A6                     l2987:
  2251                           
  2252                           ; BSR set to: 0
  2253  0013A6  AF70               	btfss	(___lomod@divisor+7)& (0+255),7,b
  2254  0013A8  D7F4               	goto	l2985
  2255  0013AA                     u3190:
  2256                           
  2257                           ; BSR set to: 0
  2258  0013AA  5169               	movf	___lomod@divisor& (0+255),w,b
  2259  0013AC  5D61               	subwf	___lomod@dividend& (0+255),w,b
  2260  0013AE  516A               	movf	(___lomod@divisor+1)& (0+255),w,b
  2261  0013B0  5962               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  2262  0013B2  516B               	movf	(___lomod@divisor+2)& (0+255),w,b
  2263  0013B4  5963               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  2264  0013B6  516C               	movf	(___lomod@divisor+3)& (0+255),w,b
  2265  0013B8  5964               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  2266  0013BA  516D               	movf	(___lomod@divisor+4)& (0+255),w,b
  2267  0013BC  5965               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  2268  0013BE  516E               	movf	(___lomod@divisor+5)& (0+255),w,b
  2269  0013C0  5966               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  2270  0013C2  516F               	movf	(___lomod@divisor+6)& (0+255),w,b
  2271  0013C4  5967               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  2272  0013C6  5170               	movf	(___lomod@divisor+7)& (0+255),w,b
  2273  0013C8  5968               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  2274  0013CA  A0D8               	btfss	status,0,c
  2275  0013CC  D010               	goto	l2993
  2276                           
  2277                           ; BSR set to: 0
  2278  0013CE  5169               	movf	___lomod@divisor& (0+255),w,b
  2279  0013D0  5F61               	subwf	___lomod@dividend& (0+255),f,b
  2280  0013D2  516A               	movf	(___lomod@divisor+1)& (0+255),w,b
  2281  0013D4  5B62               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  2282  0013D6  516B               	movf	(___lomod@divisor+2)& (0+255),w,b
  2283  0013D8  5B63               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  2284  0013DA  516C               	movf	(___lomod@divisor+3)& (0+255),w,b
  2285  0013DC  5B64               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  2286  0013DE  516D               	movf	(___lomod@divisor+4)& (0+255),w,b
  2287  0013E0  5B65               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  2288  0013E2  516E               	movf	(___lomod@divisor+5)& (0+255),w,b
  2289  0013E4  5B66               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  2290  0013E6  516F               	movf	(___lomod@divisor+6)& (0+255),w,b
  2291  0013E8  5B67               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  2292  0013EA  5170               	movf	(___lomod@divisor+7)& (0+255),w,b
  2293  0013EC  5B68               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  2294  0013EE                     l2993:
  2295                           
  2296                           ; BSR set to: 0
  2297  0013EE  90D8               	bcf	status,0,c
  2298  0013F0  3370               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  2299  0013F2  336F               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  2300  0013F4  336E               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  2301  0013F6  336D               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  2302  0013F8  336C               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  2303  0013FA  336B               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  2304  0013FC  336A               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  2305  0013FE  3369               	rrcf	___lomod@divisor& (0+255),f,b
  2306                           
  2307                           ; BSR set to: 0
  2308  001400  2F71               	decfsz	___lomod@counter& (0+255),f,b
  2309  001402  D7D3               	goto	u3190
  2310  001404                     l762:
  2311                           
  2312                           ; BSR set to: 0
  2313  001404  C061  F061         	movff	___lomod@dividend,?___lomod
  2314  001408  C062  F062         	movff	___lomod@dividend+1,?___lomod+1
  2315  00140C  C063  F063         	movff	___lomod@dividend+2,?___lomod+2
  2316  001410  C064  F064         	movff	___lomod@dividend+3,?___lomod+3
  2317  001414  C065  F065         	movff	___lomod@dividend+4,?___lomod+4
  2318  001418  C066  F066         	movff	___lomod@dividend+5,?___lomod+5
  2319  00141C  C067  F067         	movff	___lomod@dividend+6,?___lomod+6
  2320  001420  C068  F068         	movff	___lomod@dividend+7,?___lomod+7
  2321                           
  2322                           ; BSR set to: 0
  2323  001424  0012               	return		;funcret
  2324  001426                     __end_of___lomod:
  2325                           	opt callstack 0
  2326                           
  2327 ;; *************** function ___lodiv *****************
  2328 ;; Defined at:
  2329 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  dividend        8    1[BANK0 ] unsigned long long 
  2332 ;;  divisor         8    9[BANK0 ] unsigned long long 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  quotient        8   17[BANK0 ] unsigned long long 
  2335 ;;  counter         1   25[BANK0 ] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  8    1[BANK0 ] unsigned long long 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2345 ;;      Params:         0      16       0       0
  2346 ;;      Locals:         0       9       0       0
  2347 ;;      Temps:          0       0       0       0
  2348 ;;      Totals:         0      25       0       0
  2349 ;;Total ram usage:       25 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    7
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_utoa
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text11
  2360  0011EA                     __ptext11:
  2361                           	opt callstack 0
  2362  0011EA                     ___lodiv:
  2363                           	opt callstack 19
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;incstack = 0
  2367  0011EA  EE20  F071         	lfsr	2,___lodiv@quotient
  2368  0011EE  0E07               	movlw	7
  2369  0011F0                     u3141:
  2370  0011F0  6ADE               	clrf	postinc2,c
  2371  0011F2  06E8               	decf	wreg,f,c
  2372  0011F4  E2FD               	bc	u3141
  2373  0011F6  0100               	movlb	0	; () banked
  2374  0011F8  5169               	movf	___lodiv@divisor& (0+255),w,b
  2375  0011FA  116A               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  2376  0011FC  116B               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  2377  0011FE  116C               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  2378  001200  116D               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  2379  001202  116E               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  2380  001204  116F               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  2381  001206  1170               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  2382  001208  B4D8               	btfsc	status,2,c
  2383  00120A  D046               	goto	l752
  2384                           
  2385                           ; BSR set to: 0
  2386  00120C  0E01               	movlw	1
  2387  00120E  6F79               	movwf	___lodiv@counter& (0+255),b
  2388  001210  D00A               	goto	l2967
  2389  001212                     l2965:
  2390                           
  2391                           ; BSR set to: 0
  2392  001212  90D8               	bcf	status,0,c
  2393  001214  3769               	rlcf	___lodiv@divisor& (0+255),f,b
  2394  001216  376A               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  2395  001218  376B               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  2396  00121A  376C               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  2397  00121C  376D               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  2398  00121E  376E               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  2399  001220  376F               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  2400  001222  3770               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  2401  001224  2B79               	incf	___lodiv@counter& (0+255),f,b
  2402  001226                     l2967:
  2403                           
  2404                           ; BSR set to: 0
  2405  001226  AF70               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  2406  001228  D7F4               	goto	l2965
  2407  00122A                     u3160:
  2408                           
  2409                           ; BSR set to: 0
  2410  00122A  90D8               	bcf	status,0,c
  2411  00122C  3771               	rlcf	___lodiv@quotient& (0+255),f,b
  2412  00122E  3772               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  2413  001230  3773               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  2414  001232  3774               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  2415  001234  3775               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  2416  001236  3776               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  2417  001238  3777               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  2418  00123A  3778               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  2419                           
  2420                           ; BSR set to: 0
  2421  00123C  5169               	movf	___lodiv@divisor& (0+255),w,b
  2422  00123E  5D61               	subwf	___lodiv@dividend& (0+255),w,b
  2423  001240  516A               	movf	(___lodiv@divisor+1)& (0+255),w,b
  2424  001242  5962               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  2425  001244  516B               	movf	(___lodiv@divisor+2)& (0+255),w,b
  2426  001246  5963               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  2427  001248  516C               	movf	(___lodiv@divisor+3)& (0+255),w,b
  2428  00124A  5964               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  2429  00124C  516D               	movf	(___lodiv@divisor+4)& (0+255),w,b
  2430  00124E  5965               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  2431  001250  516E               	movf	(___lodiv@divisor+5)& (0+255),w,b
  2432  001252  5966               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  2433  001254  516F               	movf	(___lodiv@divisor+6)& (0+255),w,b
  2434  001256  5967               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  2435  001258  5170               	movf	(___lodiv@divisor+7)& (0+255),w,b
  2436  00125A  5968               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  2437  00125C  A0D8               	btfss	status,0,c
  2438  00125E  D011               	goto	l2977
  2439                           
  2440                           ; BSR set to: 0
  2441  001260  5169               	movf	___lodiv@divisor& (0+255),w,b
  2442  001262  5F61               	subwf	___lodiv@dividend& (0+255),f,b
  2443  001264  516A               	movf	(___lodiv@divisor+1)& (0+255),w,b
  2444  001266  5B62               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  2445  001268  516B               	movf	(___lodiv@divisor+2)& (0+255),w,b
  2446  00126A  5B63               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  2447  00126C  516C               	movf	(___lodiv@divisor+3)& (0+255),w,b
  2448  00126E  5B64               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  2449  001270  516D               	movf	(___lodiv@divisor+4)& (0+255),w,b
  2450  001272  5B65               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  2451  001274  516E               	movf	(___lodiv@divisor+5)& (0+255),w,b
  2452  001276  5B66               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  2453  001278  516F               	movf	(___lodiv@divisor+6)& (0+255),w,b
  2454  00127A  5B67               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  2455  00127C  5170               	movf	(___lodiv@divisor+7)& (0+255),w,b
  2456  00127E  5B68               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  2457                           
  2458                           ; BSR set to: 0
  2459  001280  8171               	bsf	___lodiv@quotient& (0+255),0,b
  2460  001282                     l2977:
  2461                           
  2462                           ; BSR set to: 0
  2463  001282  90D8               	bcf	status,0,c
  2464  001284  3370               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  2465  001286  336F               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  2466  001288  336E               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  2467  00128A  336D               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  2468  00128C  336C               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  2469  00128E  336B               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  2470  001290  336A               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  2471  001292  3369               	rrcf	___lodiv@divisor& (0+255),f,b
  2472                           
  2473                           ; BSR set to: 0
  2474  001294  2F79               	decfsz	___lodiv@counter& (0+255),f,b
  2475  001296  D7C9               	goto	u3160
  2476  001298                     l752:
  2477                           
  2478                           ; BSR set to: 0
  2479  001298  C071  F061         	movff	___lodiv@quotient,?___lodiv
  2480  00129C  C072  F062         	movff	___lodiv@quotient+1,?___lodiv+1
  2481  0012A0  C073  F063         	movff	___lodiv@quotient+2,?___lodiv+2
  2482  0012A4  C074  F064         	movff	___lodiv@quotient+3,?___lodiv+3
  2483  0012A8  C075  F065         	movff	___lodiv@quotient+4,?___lodiv+4
  2484  0012AC  C076  F066         	movff	___lodiv@quotient+5,?___lodiv+5
  2485  0012B0  C077  F067         	movff	___lodiv@quotient+6,?___lodiv+6
  2486  0012B4  C078  F068         	movff	___lodiv@quotient+7,?___lodiv+7
  2487                           
  2488                           ; BSR set to: 0
  2489  0012B8  0012               	return		;funcret
  2490  0012BA                     __end_of___lodiv:
  2491                           	opt callstack 0
  2492                           
  2493 ;; *************** function _setup *****************
  2494 ;; Defined at:
  2495 ;;		line 34 in file "main.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2509 ;;      Params:         0       0       0       0
  2510 ;;      Locals:         0       0       0       0
  2511 ;;      Temps:          0       0       0       0
  2512 ;;      Totals:         0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:   11
  2516 ;; This function calls:
  2517 ;;		_init_LCD
  2518 ;;		_init_RFID
  2519 ;;		_init_sensors
  2520 ;; This function is called by:
  2521 ;;		_main
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text12
  2526  001A5A                     __ptext12:
  2527                           	opt callstack 0
  2528  001A5A                     _setup:
  2529                           	opt callstack 19
  2530                           
  2531                           ;main.c: 37:     OSCCON = 0x72;
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;incstack = 0
  2535  001A5A  0E72               	movlw	114
  2536  001A5C  6ED3               	movwf	4051,c	;volatile
  2537  001A5E                     l45:
  2538  001A5E  A4D3               	btfss	4051,2,c	;volatile
  2539  001A60  D7FE               	goto	l45
  2540                           
  2541                           ;main.c: 39:     INTCONbits.GIEH = 1;
  2542  001A62  8EF2               	bsf	4082,7,c	;volatile
  2543                           
  2544                           ;main.c: 40:     INTCONbits.GIEL = 1;
  2545  001A64  8CF2               	bsf	4082,6,c	;volatile
  2546                           
  2547                           ;main.c: 41:     RCONbits.IPEN=1;
  2548  001A66  8ED0               	bsf	4048,7,c	;volatile
  2549                           
  2550                           ;main.c: 44:     init_LCD();
  2551  001A68  EC88  F008         	call	_init_LCD	;wreg free
  2552                           
  2553                           ;main.c: 45:     init_RFID();
  2554  001A6C  EC4B  F00D         	call	_init_RFID	;wreg free
  2555                           
  2556                           ;main.c: 46:     init_sensors();
  2557  001A70  EC3C  F00D         	call	_init_sensors	;wreg free
  2558                           
  2559                           ;main.c: 48:     TRISDbits.RD2 = 1;
  2560  001A74  8495               	bsf	3989,2,c	;volatile
  2561  001A76  0012               	return		;funcret
  2562  001A78                     __end_of_setup:
  2563                           	opt callstack 0
  2564                           
  2565 ;; *************** function _init_sensors *****************
  2566 ;; Defined at:
  2567 ;;		line 13 in file "signal_processing.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  throwaway       2    0        int 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2581 ;;      Params:         0       0       0       0
  2582 ;;      Locals:         0       2       0       0
  2583 ;;      Temps:          0       0       0       0
  2584 ;;      Totals:         0       2       0       0
  2585 ;;Total ram usage:        2 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    7
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_setup
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text13
  2596  001A78                     __ptext13:
  2597                           	opt callstack 0
  2598  001A78                     _init_sensors:
  2599                           	opt callstack 22
  2600                           
  2601                           ;signal_processing.c: 16:     T5CON =0b00011001;
  2602                           
  2603                           ;incstack = 0
  2604  001A78  0E19               	movlw	25
  2605  001A7A  6EB7               	movwf	4023,c	;volatile
  2606                           
  2607                           ;signal_processing.c: 17:     TRISAbits.RA2 = 1;
  2608  001A7C  8492               	bsf	3986,2,c	;volatile
  2609                           
  2610                           ;signal_processing.c: 18:     TRISAbits.RA3 = 1;
  2611  001A7E  8692               	bsf	3986,3,c	;volatile
  2612                           
  2613                           ;signal_processing.c: 21:     ANSEL0 =0;
  2614  001A80  0E00               	movlw	0
  2615  001A82  6EB8               	movwf	4024,c	;volatile
  2616                           
  2617                           ;signal_processing.c: 22:     ANSEL1 =0;
  2618  001A84  0E00               	movlw	0
  2619  001A86  6EB9               	movwf	4025,c	;volatile
  2620                           
  2621                           ;signal_processing.c: 24:     DFLTCON = 0b00011000;
  2622  001A88  0E18               	movlw	24
  2623  001A8A  6E60               	movwf	3936,c	;volatile
  2624                           
  2625                           ;signal_processing.c: 25:     CAP1CON = 0b01000110;
  2626  001A8C  0E46               	movlw	70
  2627  001A8E  6E63               	movwf	3939,c	;volatile
  2628  001A90  5069               	movf	3945,w,c	;volatile
  2629  001A92  5068               	movf	3944,w,c	;volatile
  2630  001A94  0012               	return		;funcret
  2631  001A96                     __end_of_init_sensors:
  2632                           	opt callstack 0
  2633                           
  2634 ;; *************** function _init_RFID *****************
  2635 ;; Defined at:
  2636 ;;		line 13 in file "RFID.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2650 ;;      Params:         0       0       0       0
  2651 ;;      Locals:         0       0       0       0
  2652 ;;      Temps:          0       0       0       0
  2653 ;;      Totals:         0       0       0       0
  2654 ;;Total ram usage:        0 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    7
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_setup
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text14
  2665  001A96                     __ptext14:
  2666                           	opt callstack 0
  2667  001A96                     _init_RFID:
  2668                           	opt callstack 22
  2669                           
  2670                           ;RFID.c: 16:     TRISCbits.RC7 = 1;
  2671                           
  2672                           ;incstack = 0
  2673  001A96  8E94               	bsf	3988,7,c	;volatile
  2674                           
  2675                           ;RFID.c: 19:     SPBRG = 203;
  2676  001A98  0ECB               	movlw	203
  2677  001A9A  6EAF               	movwf	4015,c	;volatile
  2678                           
  2679                           ;RFID.c: 20:     SPBRGH = 0;
  2680  001A9C  0E00               	movlw	0
  2681  001A9E  6EB0               	movwf	4016,c	;volatile
  2682                           
  2683                           ;RFID.c: 22:     BAUDCONbits.BRG16=1;
  2684  001AA0  86AA               	bsf	4010,3,c	;volatile
  2685                           
  2686                           ;RFID.c: 23:     TXSTAbits.BRGH = 1;
  2687  001AA2  84AC               	bsf	4012,2,c	;volatile
  2688                           
  2689                           ;RFID.c: 24:     RCSTAbits.CREN = 1;
  2690  001AA4  88AB               	bsf	4011,4,c	;volatile
  2691                           
  2692                           ;RFID.c: 25:     RCSTAbits.SPEN = 1;
  2693  001AA6  8EAB               	bsf	4011,7,c	;volatile
  2694                           
  2695                           ;RFID.c: 26:     TXSTAbits.TXEN = 1;
  2696  001AA8  8AAC               	bsf	4012,5,c	;volatile
  2697                           
  2698                           ;RFID.c: 28:     PIE1bits.RC1IE = 1;
  2699  001AAA  8A9D               	bsf	3997,5,c	;volatile
  2700                           
  2701                           ;RFID.c: 29:     IPR1bits.RC1IP = 1;
  2702  001AAC  8A9F               	bsf	3999,5,c	;volatile
  2703  001AAE  0012               	return		;funcret
  2704  001AB0                     __end_of_init_RFID:
  2705                           	opt callstack 0
  2706                           
  2707 ;; *************** function _init_LCD *****************
  2708 ;; Defined at:
  2709 ;;		line 56 in file "LCDIO.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2723 ;;      Params:         0       0       0       0
  2724 ;;      Locals:         0       0       0       0
  2725 ;;      Temps:          0       1       0       0
  2726 ;;      Totals:         0       1       0       0
  2727 ;;Total ram usage:        1 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:   10
  2730 ;; This function calls:
  2731 ;;		_LCDout
  2732 ;;		_SendLCD
  2733 ;; This function is called by:
  2734 ;;		_setup
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text15
  2739  001110                     __ptext15:
  2740                           	opt callstack 0
  2741  001110                     _init_LCD:
  2742                           	opt callstack 19
  2743                           
  2744                           ;LCDIO.c: 59:  TRISCbits.RC0 = 0;
  2745                           
  2746                           ;incstack = 0
  2747  001110  9094               	bcf	3988,0,c	;volatile
  2748                           
  2749                           ;LCDIO.c: 60:  TRISAbits.RA7 = 0;
  2750  001112  9E92               	bcf	3986,7,c	;volatile
  2751                           
  2752                           ;LCDIO.c: 61:  TRISCbits.RC3 = 0;
  2753  001114  9694               	bcf	3988,3,c	;volatile
  2754                           
  2755                           ;LCDIO.c: 62:  TRISDbits.RD0 = 0;
  2756  001116  9095               	bcf	3989,0,c	;volatile
  2757                           
  2758                           ;LCDIO.c: 63:  TRISDbits.RD1 = 0;
  2759  001118  9295               	bcf	3989,1,c	;volatile
  2760                           
  2761                           ;LCDIO.c: 64:  TRISAbits.RA6 = 0;
  2762  00111A  9C92               	bcf	3986,6,c	;volatile
  2763                           
  2764                           ;LCDIO.c: 67:  LATDbits.LATD0 = 0;
  2765  00111C  908C               	bcf	3980,0,c	;volatile
  2766                           
  2767                           ;LCDIO.c: 68:  LATDbits.LATD1 = 0;
  2768  00111E  928C               	bcf	3980,1,c	;volatile
  2769                           
  2770                           ;LCDIO.c: 69:  LATCbits.LATC3 = 0;
  2771  001120  968B               	bcf	3979,3,c	;volatile
  2772                           
  2773                           ;LCDIO.c: 70:  LATCbits.LATC0 = 0;
  2774  001122  908B               	bcf	3979,0,c	;volatile
  2775                           
  2776                           ;LCDIO.c: 71:  LATAbits.LATA6 = 0;
  2777  001124  9C89               	bcf	3977,6,c	;volatile
  2778                           
  2779                           ;LCDIO.c: 72:  LATAbits.LATA7 = 0;
  2780  001126  9E89               	bcf	3977,7,c	;volatile
  2781                           
  2782                           ;LCDIO.c: 75:  _delay((unsigned long)((15)*(8000000/4000.0)));
  2783  001128  0E27               	movlw	39
  2784  00112A  0100               	movlb	0	; () banked
  2785  00112C  6F65               	movwf	??_init_LCD& (0+255),b
  2786  00112E  0EF5               	movlw	245
  2787  001130                     u3567:
  2788  001130  2EE8               	decfsz	wreg,f,c
  2789  001132  D7FE               	bra	u3567
  2790  001134  2F65               	decfsz	??_init_LCD& (0+255),f,b
  2791  001136  D7FC               	bra	u3567
  2792                           
  2793                           ;LCDIO.c: 76:  LCDout(0b0011);
  2794  001138  0E03               	movlw	3
  2795  00113A  EC3C  F00B         	call	_LCDout
  2796                           
  2797                           ;LCDIO.c: 77:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2798  00113E  0E0D               	movlw	13
  2799  001140  0100               	movlb	0	; () banked
  2800  001142  6F65               	movwf	??_init_LCD& (0+255),b
  2801  001144  0EFB               	movlw	251
  2802  001146                     u3577:
  2803  001146  2EE8               	decfsz	wreg,f,c
  2804  001148  D7FE               	bra	u3577
  2805  00114A  2F65               	decfsz	??_init_LCD& (0+255),f,b
  2806  00114C  D7FC               	bra	u3577
  2807  00114E  D000               	nop2	
  2808                           
  2809                           ;LCDIO.c: 78:  LCDout(0b0011);
  2810  001150  0E03               	movlw	3
  2811  001152  EC3C  F00B         	call	_LCDout
  2812                           
  2813                           ;LCDIO.c: 79:  _delay((unsigned long)((200)*(8000000/4000000.0)));
  2814  001156  0E85               	movlw	133
  2815  001158                     u3587:
  2816  001158  2EE8               	decfsz	wreg,f,c
  2817  00115A  D7FE               	bra	u3587
  2818  00115C  F000               	nop	
  2819                           
  2820                           ;LCDIO.c: 80:  LCDout(0b0011);
  2821  00115E  0E03               	movlw	3
  2822  001160  EC3C  F00B         	call	_LCDout
  2823                           
  2824                           ;LCDIO.c: 81:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2825  001164  0E21               	movlw	33
  2826  001166                     u3597:
  2827  001166  2EE8               	decfsz	wreg,f,c
  2828  001168  D7FE               	bra	u3597
  2829  00116A  F000               	nop	
  2830                           
  2831                           ;LCDIO.c: 82:  LCDout(0b0010);
  2832  00116C  0E02               	movlw	2
  2833  00116E  EC3C  F00B         	call	_LCDout
  2834                           
  2835                           ;LCDIO.c: 83:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2836  001172  0E21               	movlw	33
  2837  001174                     u3607:
  2838  001174  2EE8               	decfsz	wreg,f,c
  2839  001176  D7FE               	bra	u3607
  2840  001178  F000               	nop	
  2841                           
  2842                           ;LCDIO.c: 86:  SendLCD(0b00101000,0);
  2843  00117A  0E00               	movlw	0
  2844  00117C  0100               	movlb	0	; () banked
  2845  00117E  6F63               	movwf	SendLCD@type& (0+255),b
  2846  001180  0E28               	movlw	40
  2847  001182  EC88  F00C         	call	_SendLCD
  2848                           
  2849                           ;LCDIO.c: 87:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2850  001186  0E21               	movlw	33
  2851  001188                     u3617:
  2852  001188  2EE8               	decfsz	wreg,f,c
  2853  00118A  D7FE               	bra	u3617
  2854  00118C  F000               	nop	
  2855                           
  2856                           ;LCDIO.c: 90:  SendLCD(0b00001000,0);
  2857  00118E  0E00               	movlw	0
  2858  001190  0100               	movlb	0	; () banked
  2859  001192  6F63               	movwf	SendLCD@type& (0+255),b
  2860  001194  0E08               	movlw	8
  2861  001196  EC88  F00C         	call	_SendLCD
  2862                           
  2863                           ;LCDIO.c: 91:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2864  00119A  0E21               	movlw	33
  2865  00119C                     u3627:
  2866  00119C  2EE8               	decfsz	wreg,f,c
  2867  00119E  D7FE               	bra	u3627
  2868  0011A0  F000               	nop	
  2869                           
  2870                           ;LCDIO.c: 94:  SendLCD(0b00000001,0);
  2871  0011A2  0E00               	movlw	0
  2872  0011A4  0100               	movlb	0	; () banked
  2873  0011A6  6F63               	movwf	SendLCD@type& (0+255),b
  2874  0011A8  0E01               	movlw	1
  2875  0011AA  EC88  F00C         	call	_SendLCD
  2876                           
  2877                           ;LCDIO.c: 95:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2878  0011AE  0E0D               	movlw	13
  2879  0011B0  0100               	movlb	0	; () banked
  2880  0011B2  6F65               	movwf	??_init_LCD& (0+255),b
  2881  0011B4  0EFB               	movlw	251
  2882  0011B6                     u3637:
  2883  0011B6  2EE8               	decfsz	wreg,f,c
  2884  0011B8  D7FE               	bra	u3637
  2885  0011BA  2F65               	decfsz	??_init_LCD& (0+255),f,b
  2886  0011BC  D7FC               	bra	u3637
  2887  0011BE  D000               	nop2	
  2888                           
  2889                           ;LCDIO.c: 98:  SendLCD(0b00000110,0);
  2890  0011C0  0E00               	movlw	0
  2891  0011C2  0100               	movlb	0	; () banked
  2892  0011C4  6F63               	movwf	SendLCD@type& (0+255),b
  2893  0011C6  0E06               	movlw	6
  2894  0011C8  EC88  F00C         	call	_SendLCD
  2895                           
  2896                           ;LCDIO.c: 99:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2897  0011CC  0E21               	movlw	33
  2898  0011CE                     u3647:
  2899  0011CE  2EE8               	decfsz	wreg,f,c
  2900  0011D0  D7FE               	bra	u3647
  2901  0011D2  F000               	nop	
  2902                           
  2903                           ;LCDIO.c: 102:  SendLCD(0b00001100,0);
  2904  0011D4  0E00               	movlw	0
  2905  0011D6  0100               	movlb	0	; () banked
  2906  0011D8  6F63               	movwf	SendLCD@type& (0+255),b
  2907  0011DA  0E0C               	movlw	12
  2908  0011DC  EC88  F00C         	call	_SendLCD
  2909                           
  2910                           ;LCDIO.c: 103:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2911  0011E0  0E21               	movlw	33
  2912  0011E2                     u3657:
  2913  0011E2  2EE8               	decfsz	wreg,f,c
  2914  0011E4  D7FE               	bra	u3657
  2915  0011E6  F000               	nop	
  2916  0011E8  0012               	return		;funcret
  2917  0011EA                     __end_of_init_LCD:
  2918                           	opt callstack 0
  2919                           
  2920 ;; *************** function ___xxtofl *****************
  2921 ;; Defined at:
  2922 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  sign            1    wreg     unsigned char 
  2925 ;;  val             4    1[BANK0 ] long 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  sign            1    9[BANK0 ] unsigned char 
  2928 ;;  arg             4   11[BANK0 ] unsigned long 
  2929 ;;  exp             1   10[BANK0 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  4    1[BANK0 ] unsigned char 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2939 ;;      Params:         0       4       0       0
  2940 ;;      Locals:         0       6       0       0
  2941 ;;      Temps:          0       4       0       0
  2942 ;;      Totals:         0      14       0       0
  2943 ;;Total ram usage:       14 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    7
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text16
  2954  000FCC                     __ptext16:
  2955                           	opt callstack 0
  2956  000FCC                     ___xxtofl:
  2957                           	opt callstack 23
  2958                           
  2959                           ;incstack = 0
  2960                           ;___xxtofl@sign stored from wreg
  2961  000FCC  0100               	movlb	0	; () banked
  2962  000FCE  6F69               	movwf	___xxtofl@sign& (0+255),b
  2963  000FD0  0100               	movlb	0	; () banked
  2964  000FD2  5169               	movf	___xxtofl@sign& (0+255),w,b
  2965  000FD4  A4D8               	btfss	status,2,c
  2966                           
  2967                           ; BSR set to: 0
  2968  000FD6  AF64               	btfss	(___xxtofl@val+3)& (0+255),7,b
  2969  000FD8  D01A               	goto	l969
  2970                           
  2971                           ; BSR set to: 0
  2972  000FDA  C061  F065         	movff	___xxtofl@val,??___xxtofl
  2973  000FDE  C062  F066         	movff	___xxtofl@val+1,??___xxtofl+1
  2974  000FE2  C063  F067         	movff	___xxtofl@val+2,??___xxtofl+2
  2975  000FE6  C064  F068         	movff	___xxtofl@val+3,??___xxtofl+3
  2976  000FEA  1F65               	comf	??___xxtofl& (0+255),f,b
  2977  000FEC  1F66               	comf	(??___xxtofl+1)& (0+255),f,b
  2978  000FEE  1F67               	comf	(??___xxtofl+2)& (0+255),f,b
  2979  000FF0  1F68               	comf	(??___xxtofl+3)& (0+255),f,b
  2980  000FF2  2B65               	incf	??___xxtofl& (0+255),f,b
  2981  000FF4  0E00               	movlw	0
  2982  000FF6  2366               	addwfc	(??___xxtofl+1)& (0+255),f,b
  2983  000FF8  2367               	addwfc	(??___xxtofl+2)& (0+255),f,b
  2984  000FFA  2368               	addwfc	(??___xxtofl+3)& (0+255),f,b
  2985  000FFC  C065  F06B         	movff	??___xxtofl,___xxtofl@arg
  2986  001000  C066  F06C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2987  001004  C067  F06D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2988  001008  C068  F06E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2989  00100C  D008               	goto	l3201
  2990  00100E                     l969:
  2991                           
  2992                           ; BSR set to: 0
  2993  00100E  C061  F06B         	movff	___xxtofl@val,___xxtofl@arg
  2994  001012  C062  F06C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2995  001016  C063  F06D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2996  00101A  C064  F06E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2997  00101E                     l3201:
  2998                           
  2999                           ; BSR set to: 0
  3000  00101E  5161               	movf	___xxtofl@val& (0+255),w,b
  3001  001020  1162               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  3002  001022  1163               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  3003  001024  1164               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  3004  001026  A4D8               	btfss	status,2,c
  3005  001028  D009               	goto	l3207
  3006                           
  3007                           ; BSR set to: 0
  3008  00102A  0E00               	movlw	0
  3009  00102C  6F61               	movwf	?___xxtofl& (0+255),b
  3010  00102E  0E00               	movlw	0
  3011  001030  6F62               	movwf	(?___xxtofl+1)& (0+255),b
  3012  001032  0E00               	movlw	0
  3013  001034  6F63               	movwf	(?___xxtofl+2)& (0+255),b
  3014  001036  0E00               	movlw	0
  3015  001038  6F64               	movwf	(?___xxtofl+3)& (0+255),b
  3016  00103A  0012               	return	
  3017  00103C                     l3207:
  3018                           
  3019                           ; BSR set to: 0
  3020  00103C  0E96               	movlw	150
  3021  00103E  6F6A               	movwf	___xxtofl@exp& (0+255),b
  3022  001040  D006               	goto	l3211
  3023  001042                     l3209:
  3024                           
  3025                           ; BSR set to: 0
  3026  001042  2B6A               	incf	___xxtofl@exp& (0+255),f,b
  3027  001044  90D8               	bcf	status,0,c
  3028  001046  336E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3029  001048  336D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3030  00104A  336C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3031  00104C  336B               	rrcf	___xxtofl@arg& (0+255),f,b
  3032  00104E                     l3211:
  3033                           
  3034                           ; BSR set to: 0
  3035  00104E  0E00               	movlw	0
  3036  001050  156B               	andwf	___xxtofl@arg& (0+255),w,b
  3037  001052  6F65               	movwf	??___xxtofl& (0+255),b
  3038  001054  0E00               	movlw	0
  3039  001056  156C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3040  001058  6F66               	movwf	(??___xxtofl+1)& (0+255),b
  3041  00105A  0E00               	movlw	0
  3042  00105C  156D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3043  00105E  6F67               	movwf	(??___xxtofl+2)& (0+255),b
  3044  001060  0EFE               	movlw	254
  3045  001062  156E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3046  001064  6F68               	movwf	(??___xxtofl+3)& (0+255),b
  3047  001066  5165               	movf	??___xxtofl& (0+255),w,b
  3048  001068  1166               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3049  00106A  1167               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3050  00106C  1168               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3051  00106E  B4D8               	btfsc	status,2,c
  3052  001070  D00D               	goto	l976
  3053  001072  D7E7               	goto	l3209
  3054  001074                     l3213:
  3055                           
  3056                           ; BSR set to: 0
  3057  001074  2B6A               	incf	___xxtofl@exp& (0+255),f,b
  3058                           
  3059                           ; BSR set to: 0
  3060  001076  0E01               	movlw	1
  3061  001078  276B               	addwf	___xxtofl@arg& (0+255),f,b
  3062  00107A  0E00               	movlw	0
  3063  00107C  236C               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3064  00107E  236D               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3065  001080  236E               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3066                           
  3067                           ; BSR set to: 0
  3068  001082  90D8               	bcf	status,0,c
  3069  001084  336E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3070  001086  336D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3071  001088  336C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3072  00108A  336B               	rrcf	___xxtofl@arg& (0+255),f,b
  3073  00108C                     l976:
  3074                           
  3075                           ; BSR set to: 0
  3076  00108C  0E00               	movlw	0
  3077  00108E  156B               	andwf	___xxtofl@arg& (0+255),w,b
  3078  001090  6F65               	movwf	??___xxtofl& (0+255),b
  3079  001092  0E00               	movlw	0
  3080  001094  156C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3081  001096  6F66               	movwf	(??___xxtofl+1)& (0+255),b
  3082  001098  0E00               	movlw	0
  3083  00109A  156D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3084  00109C  6F67               	movwf	(??___xxtofl+2)& (0+255),b
  3085  00109E  0EFF               	movlw	255
  3086  0010A0  156E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3087  0010A2  6F68               	movwf	(??___xxtofl+3)& (0+255),b
  3088  0010A4  5165               	movf	??___xxtofl& (0+255),w,b
  3089  0010A6  1166               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3090  0010A8  1167               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3091  0010AA  1168               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3092  0010AC  B4D8               	btfsc	status,2,c
  3093  0010AE  D007               	goto	l3221
  3094  0010B0  D7E1               	goto	l3213
  3095  0010B2                     l3219:
  3096                           
  3097                           ; BSR set to: 0
  3098  0010B2  076A               	decf	___xxtofl@exp& (0+255),f,b
  3099  0010B4  90D8               	bcf	status,0,c
  3100  0010B6  376B               	rlcf	___xxtofl@arg& (0+255),f,b
  3101  0010B8  376C               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3102  0010BA  376D               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3103  0010BC  376E               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3104  0010BE                     l3221:
  3105                           
  3106                           ; BSR set to: 0
  3107  0010BE  BF6D               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3108  0010C0  D003               	goto	u3450
  3109                           
  3110                           ; BSR set to: 0
  3111  0010C2  0E02               	movlw	2
  3112  0010C4  616A               	cpfslt	___xxtofl@exp& (0+255),b
  3113  0010C6  D7F5               	goto	l3219
  3114  0010C8                     u3450:
  3115                           
  3116                           ; BSR set to: 0
  3117  0010C8  A16A               	btfss	___xxtofl@exp& (0+255),0,b
  3118                           
  3119                           ; BSR set to: 0
  3120  0010CA  9F6D               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  3121                           
  3122                           ; BSR set to: 0
  3123  0010CC  90D8               	bcf	status,0,c
  3124  0010CE  336A               	rrcf	___xxtofl@exp& (0+255),f,b
  3125                           
  3126                           ; BSR set to: 0
  3127  0010D0  C06A  F065         	movff	___xxtofl@exp,??___xxtofl
  3128  0010D4  6B66               	clrf	(??___xxtofl+1)& (0+255),b
  3129  0010D6  6B67               	clrf	(??___xxtofl+2)& (0+255),b
  3130  0010D8  6B68               	clrf	(??___xxtofl+3)& (0+255),b
  3131  0010DA  C065  F068         	movff	??___xxtofl,??___xxtofl+3
  3132  0010DE  6B67               	clrf	(??___xxtofl+2)& (0+255),b
  3133  0010E0  6B66               	clrf	(??___xxtofl+1)& (0+255),b
  3134  0010E2  6B65               	clrf	??___xxtofl& (0+255),b
  3135  0010E4  5165               	movf	??___xxtofl& (0+255),w,b
  3136  0010E6  136B               	iorwf	___xxtofl@arg& (0+255),f,b
  3137  0010E8  5166               	movf	(??___xxtofl+1)& (0+255),w,b
  3138  0010EA  136C               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  3139  0010EC  5167               	movf	(??___xxtofl+2)& (0+255),w,b
  3140  0010EE  136D               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  3141  0010F0  5168               	movf	(??___xxtofl+3)& (0+255),w,b
  3142  0010F2  136E               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  3143                           
  3144                           ; BSR set to: 0
  3145  0010F4  5169               	movf	___xxtofl@sign& (0+255),w,b
  3146  0010F6  A4D8               	btfss	status,2,c
  3147                           
  3148                           ; BSR set to: 0
  3149  0010F8  AF64               	btfss	(___xxtofl@val+3)& (0+255),7,b
  3150  0010FA  D001               	goto	l3237
  3151                           
  3152                           ; BSR set to: 0
  3153  0010FC  8F6E               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  3154  0010FE                     l3237:
  3155                           
  3156                           ; BSR set to: 0
  3157  0010FE  C06B  F061         	movff	___xxtofl@arg,?___xxtofl
  3158  001102  C06C  F062         	movff	___xxtofl@arg+1,?___xxtofl+1
  3159  001106  C06D  F063         	movff	___xxtofl@arg+2,?___xxtofl+2
  3160  00110A  C06E  F064         	movff	___xxtofl@arg+3,?___xxtofl+3
  3161                           
  3162                           ; BSR set to: 0
  3163  00110E  0012               	return		;funcret
  3164  001110                     __end_of___xxtofl:
  3165                           	opt callstack 0
  3166                           
  3167 ;; *************** function ___fltol *****************
  3168 ;; Defined at:
  3169 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  f1              4   56[BANK0 ] unsigned char 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  exp1            1   65[BANK0 ] unsigned char 
  3174 ;;  sign1           1   64[BANK0 ] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  4   56[BANK0 ] long 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3184 ;;      Params:         0       4       0       0
  3185 ;;      Locals:         0       2       0       0
  3186 ;;      Temps:          0       4       0       0
  3187 ;;      Totals:         0      10       0       0
  3188 ;;Total ram usage:       10 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    7
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_main
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text17
  3199  0012BA                     __ptext17:
  3200                           	opt callstack 0
  3201  0012BA                     ___fltol:
  3202                           	opt callstack 23
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;incstack = 0
  3206  0012BA  0100               	movlb	0	; () banked
  3207  0012BC  359A               	rlcf	(___fltol@f1+2)& (0+255),w,b
  3208  0012BE  359B               	rlcf	(___fltol@f1+3)& (0+255),w,b
  3209  0012C0  6FA1               	movwf	___fltol@exp1& (0+255),b
  3210  0012C2  51A1               	movf	___fltol@exp1& (0+255),w,b
  3211  0012C4  A4D8               	btfss	status,2,c
  3212  0012C6  D009               	goto	l2751
  3213  0012C8                     u2790:
  3214                           
  3215                           ; BSR set to: 0
  3216  0012C8  0E00               	movlw	0
  3217  0012CA  6F98               	movwf	?___fltol& (0+255),b
  3218  0012CC  0E00               	movlw	0
  3219  0012CE  6F99               	movwf	(?___fltol+1)& (0+255),b
  3220  0012D0  0E00               	movlw	0
  3221  0012D2  6F9A               	movwf	(?___fltol+2)& (0+255),b
  3222  0012D4  0E00               	movlw	0
  3223  0012D6  6F9B               	movwf	(?___fltol+3)& (0+255),b
  3224  0012D8  0012               	return	
  3225  0012DA                     l2751:
  3226                           
  3227                           ; BSR set to: 0
  3228  0012DA  C098  F09C         	movff	___fltol@f1,??___fltol
  3229  0012DE  C099  F09D         	movff	___fltol@f1+1,??___fltol+1
  3230  0012E2  C09A  F09E         	movff	___fltol@f1+2,??___fltol+2
  3231  0012E6  C09B  F09F         	movff	___fltol@f1+3,??___fltol+3
  3232  0012EA  0E20               	movlw	32
  3233  0012EC  D005               	goto	u2800
  3234  0012EE                     u2805:
  3235  0012EE  90D8               	bcf	status,0,c
  3236  0012F0  339F               	rrcf	(??___fltol+3)& (0+255),f,b
  3237  0012F2  339E               	rrcf	(??___fltol+2)& (0+255),f,b
  3238  0012F4  339D               	rrcf	(??___fltol+1)& (0+255),f,b
  3239  0012F6  339C               	rrcf	??___fltol& (0+255),f,b
  3240  0012F8                     u2800:
  3241  0012F8  2EE8               	decfsz	wreg,f,c
  3242  0012FA  D7F9               	goto	u2805
  3243  0012FC  519C               	movf	??___fltol& (0+255),w,b
  3244  0012FE  6FA0               	movwf	___fltol@sign1& (0+255),b
  3245                           
  3246                           ; BSR set to: 0
  3247  001300  8F9A               	bsf	(___fltol@f1+2)& (0+255),7,b
  3248                           
  3249                           ; BSR set to: 0
  3250  001302  0EFF               	movlw	255
  3251  001304  1798               	andwf	___fltol@f1& (0+255),f,b
  3252  001306  0EFF               	movlw	255
  3253  001308  1799               	andwf	(___fltol@f1+1)& (0+255),f,b
  3254  00130A  0EFF               	movlw	255
  3255  00130C  179A               	andwf	(___fltol@f1+2)& (0+255),f,b
  3256  00130E  0E00               	movlw	0
  3257  001310  179B               	andwf	(___fltol@f1+3)& (0+255),f,b
  3258                           
  3259                           ; BSR set to: 0
  3260  001312  0E96               	movlw	150
  3261  001314  5FA1               	subwf	___fltol@exp1& (0+255),f,b
  3262                           
  3263                           ; BSR set to: 0
  3264  001316  AFA1               	btfss	___fltol@exp1& (0+255),7,b
  3265  001318  D00D               	goto	l2771
  3266                           
  3267                           ; BSR set to: 0
  3268  00131A  51A1               	movf	___fltol@exp1& (0+255),w,b
  3269  00131C  0A80               	xorlw	128
  3270  00131E  0F97               	addlw	151
  3271  001320  A0D8               	btfss	status,0,c
  3272  001322  D7D2               	goto	u2790
  3273  001324                     l2767:
  3274                           
  3275                           ; BSR set to: 0
  3276  001324  90D8               	bcf	status,0,c
  3277  001326  339B               	rrcf	(___fltol@f1+3)& (0+255),f,b
  3278  001328  339A               	rrcf	(___fltol@f1+2)& (0+255),f,b
  3279  00132A  3399               	rrcf	(___fltol@f1+1)& (0+255),f,b
  3280  00132C  3398               	rrcf	___fltol@f1& (0+255),f,b
  3281                           
  3282                           ; BSR set to: 0
  3283  00132E  3FA1               	incfsz	___fltol@exp1& (0+255),f,b
  3284  001330  D7F9               	goto	l2767
  3285  001332  D00D               	goto	u2840
  3286  001334                     l2771:
  3287                           
  3288                           ; BSR set to: 0
  3289  001334  0E1F               	movlw	31
  3290  001336  65A1               	cpfsgt	___fltol@exp1& (0+255),b
  3291  001338  D007               	goto	l2779
  3292  00133A  D7C6               	goto	u2790
  3293  00133C                     l2777:
  3294                           
  3295                           ; BSR set to: 0
  3296  00133C  90D8               	bcf	status,0,c
  3297  00133E  3798               	rlcf	___fltol@f1& (0+255),f,b
  3298  001340  3799               	rlcf	(___fltol@f1+1)& (0+255),f,b
  3299  001342  379A               	rlcf	(___fltol@f1+2)& (0+255),f,b
  3300  001344  379B               	rlcf	(___fltol@f1+3)& (0+255),f,b
  3301  001346  07A1               	decf	___fltol@exp1& (0+255),f,b
  3302  001348                     l2779:
  3303                           
  3304                           ; BSR set to: 0
  3305  001348  51A1               	movf	___fltol@exp1& (0+255),w,b
  3306  00134A  A4D8               	btfss	status,2,c
  3307  00134C  D7F7               	goto	l2777
  3308  00134E                     u2840:
  3309                           
  3310                           ; BSR set to: 0
  3311  00134E  51A0               	movf	___fltol@sign1& (0+255),w,b
  3312  001350  B4D8               	btfsc	status,2,c
  3313  001352  D008               	goto	l2785
  3314                           
  3315                           ; BSR set to: 0
  3316  001354  1F9B               	comf	(___fltol@f1+3)& (0+255),f,b
  3317  001356  1F9A               	comf	(___fltol@f1+2)& (0+255),f,b
  3318  001358  1F99               	comf	(___fltol@f1+1)& (0+255),f,b
  3319  00135A  6D98               	negf	___fltol@f1& (0+255),b
  3320  00135C  0E00               	movlw	0
  3321  00135E  2399               	addwfc	(___fltol@f1+1)& (0+255),f,b
  3322  001360  239A               	addwfc	(___fltol@f1+2)& (0+255),f,b
  3323  001362  239B               	addwfc	(___fltol@f1+3)& (0+255),f,b
  3324  001364                     l2785:
  3325                           
  3326                           ; BSR set to: 0
  3327  001364  C098  F098         	movff	___fltol@f1,?___fltol
  3328  001368  C099  F099         	movff	___fltol@f1+1,?___fltol+1
  3329  00136C  C09A  F09A         	movff	___fltol@f1+2,?___fltol+2
  3330  001370  C09B  F09B         	movff	___fltol@f1+3,?___fltol+3
  3331                           
  3332                           ; BSR set to: 0
  3333  001374  0012               	return		;funcret
  3334  001376                     __end_of___fltol:
  3335                           	opt callstack 0
  3336                           
  3337 ;; *************** function ___flmul *****************
  3338 ;; Defined at:
  3339 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  b               4   15[BANK0 ] long 
  3342 ;;  a               4   19[BANK0 ] long 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  prod            4   34[BANK0 ] struct .
  3345 ;;  grs             4   28[BANK0 ] unsigned long 
  3346 ;;  temp            2   38[BANK0 ] struct .
  3347 ;;  bexp            1   33[BANK0 ] unsigned char 
  3348 ;;  aexp            1   32[BANK0 ] unsigned char 
  3349 ;;  sign            1   27[BANK0 ] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  4   15[BANK0 ] unsigned char 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0, prodl, prodh
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3359 ;;      Params:         0       8       0       0
  3360 ;;      Locals:         0      13       0       0
  3361 ;;      Temps:          0       4       0       0
  3362 ;;      Totals:         0      25       0       0
  3363 ;;Total ram usage:       25 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    7
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text18
  3374  000346                     __ptext18:
  3375                           	opt callstack 0
  3376  000346                     ___flmul:
  3377                           	opt callstack 23
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;incstack = 0
  3381  000346  0100               	movlb	0	; () banked
  3382  000348  5172               	movf	(___flmul@b+3)& (0+255),w,b
  3383  00034A  0B80               	andlw	128
  3384  00034C  6F7B               	movwf	___flmul@sign& (0+255),b
  3385  00034E  5172               	movf	(___flmul@b+3)& (0+255),w,b
  3386  000350  2572               	addwf	(___flmul@b+3)& (0+255),w,b
  3387  000352  6F81               	movwf	___flmul@bexp& (0+255),b
  3388                           
  3389                           ; BSR set to: 0
  3390  000354  BF71               	btfsc	(___flmul@b+2)& (0+255),7,b
  3391                           
  3392                           ; BSR set to: 0
  3393  000356  8181               	bsf	___flmul@bexp& (0+255),0,b
  3394                           
  3395                           ; BSR set to: 0
  3396  000358  5181               	movf	___flmul@bexp& (0+255),w,b
  3397  00035A  B4D8               	btfsc	status,2,c
  3398  00035C  D00D               	goto	l2629
  3399                           
  3400                           ; BSR set to: 0
  3401  00035E  2981               	incf	___flmul@bexp& (0+255),w,b
  3402  000360  A4D8               	btfss	status,2,c
  3403  000362  D008               	goto	l2627
  3404                           
  3405                           ; BSR set to: 0
  3406  000364  0E00               	movlw	0
  3407  000366  6F6F               	movwf	___flmul@b& (0+255),b
  3408  000368  0E00               	movlw	0
  3409  00036A  6F70               	movwf	(___flmul@b+1)& (0+255),b
  3410  00036C  0E00               	movlw	0
  3411  00036E  6F71               	movwf	(___flmul@b+2)& (0+255),b
  3412  000370  0E00               	movlw	0
  3413  000372  6F72               	movwf	(___flmul@b+3)& (0+255),b
  3414  000374                     l2627:
  3415                           
  3416                           ; BSR set to: 0
  3417  000374  8F71               	bsf	(___flmul@b+2)& (0+255),7,b
  3418  000376  D008               	goto	l2631
  3419  000378                     l2629:
  3420                           
  3421                           ; BSR set to: 0
  3422  000378  0E00               	movlw	0
  3423  00037A  6F6F               	movwf	___flmul@b& (0+255),b
  3424  00037C  0E00               	movlw	0
  3425  00037E  6F70               	movwf	(___flmul@b+1)& (0+255),b
  3426  000380  0E00               	movlw	0
  3427  000382  6F71               	movwf	(___flmul@b+2)& (0+255),b
  3428  000384  0E00               	movlw	0
  3429  000386  6F72               	movwf	(___flmul@b+3)& (0+255),b
  3430  000388                     l2631:
  3431                           
  3432                           ; BSR set to: 0
  3433  000388  5176               	movf	(___flmul@a+3)& (0+255),w,b
  3434  00038A  0B80               	andlw	128
  3435  00038C  1B7B               	xorwf	___flmul@sign& (0+255),f,b
  3436                           
  3437                           ; BSR set to: 0
  3438  00038E  5176               	movf	(___flmul@a+3)& (0+255),w,b
  3439  000390  2576               	addwf	(___flmul@a+3)& (0+255),w,b
  3440  000392  6F80               	movwf	___flmul@aexp& (0+255),b
  3441                           
  3442                           ; BSR set to: 0
  3443  000394  BF75               	btfsc	(___flmul@a+2)& (0+255),7,b
  3444                           
  3445                           ; BSR set to: 0
  3446  000396  8180               	bsf	___flmul@aexp& (0+255),0,b
  3447                           
  3448                           ; BSR set to: 0
  3449  000398  5180               	movf	___flmul@aexp& (0+255),w,b
  3450  00039A  B4D8               	btfsc	status,2,c
  3451  00039C  D00D               	goto	l2647
  3452                           
  3453                           ; BSR set to: 0
  3454  00039E  2980               	incf	___flmul@aexp& (0+255),w,b
  3455  0003A0  A4D8               	btfss	status,2,c
  3456  0003A2  D008               	goto	l2645
  3457                           
  3458                           ; BSR set to: 0
  3459  0003A4  0E00               	movlw	0
  3460  0003A6  6F73               	movwf	___flmul@a& (0+255),b
  3461  0003A8  0E00               	movlw	0
  3462  0003AA  6F74               	movwf	(___flmul@a+1)& (0+255),b
  3463  0003AC  0E00               	movlw	0
  3464  0003AE  6F75               	movwf	(___flmul@a+2)& (0+255),b
  3465  0003B0  0E00               	movlw	0
  3466  0003B2  6F76               	movwf	(___flmul@a+3)& (0+255),b
  3467  0003B4                     l2645:
  3468                           
  3469                           ; BSR set to: 0
  3470  0003B4  8F75               	bsf	(___flmul@a+2)& (0+255),7,b
  3471  0003B6  D008               	goto	l928
  3472  0003B8                     l2647:
  3473                           
  3474                           ; BSR set to: 0
  3475  0003B8  0E00               	movlw	0
  3476  0003BA  6F73               	movwf	___flmul@a& (0+255),b
  3477  0003BC  0E00               	movlw	0
  3478  0003BE  6F74               	movwf	(___flmul@a+1)& (0+255),b
  3479  0003C0  0E00               	movlw	0
  3480  0003C2  6F75               	movwf	(___flmul@a+2)& (0+255),b
  3481  0003C4  0E00               	movlw	0
  3482  0003C6  6F76               	movwf	(___flmul@a+3)& (0+255),b
  3483  0003C8                     l928:
  3484                           
  3485                           ; BSR set to: 0
  3486  0003C8  5180               	movf	___flmul@aexp& (0+255),w,b
  3487  0003CA  B4D8               	btfsc	status,2,c
  3488  0003CC  D003               	goto	u2670
  3489                           
  3490                           ; BSR set to: 0
  3491  0003CE  5181               	movf	___flmul@bexp& (0+255),w,b
  3492  0003D0  A4D8               	btfss	status,2,c
  3493  0003D2  D009               	goto	l2655
  3494  0003D4                     u2670:
  3495                           
  3496                           ; BSR set to: 0
  3497  0003D4  0E00               	movlw	0
  3498  0003D6  6F6F               	movwf	?___flmul& (0+255),b
  3499  0003D8  0E00               	movlw	0
  3500  0003DA  6F70               	movwf	(?___flmul+1)& (0+255),b
  3501  0003DC  0E00               	movlw	0
  3502  0003DE  6F71               	movwf	(?___flmul+2)& (0+255),b
  3503  0003E0  0E00               	movlw	0
  3504  0003E2  6F72               	movwf	(?___flmul+3)& (0+255),b
  3505  0003E4  0012               	return	
  3506  0003E6                     l2655:
  3507                           
  3508                           ; BSR set to: 0
  3509  0003E6  5175               	movf	(___flmul@a+2)& (0+255),w,b
  3510  0003E8  036F               	mulwf	___flmul@b& (0+255),b
  3511  0003EA  CFF3 F086          	movff	prodl,___flmul@temp
  3512  0003EE  CFF4 F087          	movff	prodh,___flmul@temp+1
  3513                           
  3514                           ; BSR set to: 0
  3515  0003F2  5186               	movf	___flmul@temp& (0+255),w,b
  3516  0003F4  6F7C               	movwf	___flmul@grs& (0+255),b
  3517  0003F6  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
  3518  0003F8  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
  3519  0003FA  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
  3520                           
  3521                           ; BSR set to: 0
  3522  0003FC  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3523  0003FE  6F82               	movwf	___flmul@prod& (0+255),b
  3524  000400  6B83               	clrf	(___flmul@prod+1)& (0+255),b
  3525  000402  6B84               	clrf	(___flmul@prod+2)& (0+255),b
  3526  000404  6B85               	clrf	(___flmul@prod+3)& (0+255),b
  3527  000406  5174               	movf	(___flmul@a+1)& (0+255),w,b
  3528  000408  0370               	mulwf	(___flmul@b+1)& (0+255),b
  3529  00040A  CFF3 F086          	movff	prodl,___flmul@temp
  3530  00040E  CFF4 F087          	movff	prodh,___flmul@temp+1
  3531                           
  3532                           ; BSR set to: 0
  3533  000412  5186               	movf	___flmul@temp& (0+255),w,b
  3534  000414  277C               	addwf	___flmul@grs& (0+255),f,b
  3535  000416  0E00               	movlw	0
  3536  000418  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3537  00041A  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3538  00041C  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3539                           
  3540                           ; BSR set to: 0
  3541  00041E  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3542  000420  2782               	addwf	___flmul@prod& (0+255),f,b
  3543  000422  0E00               	movlw	0
  3544  000424  2383               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3545  000426  2384               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3546  000428  2385               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3547  00042A  5173               	movf	___flmul@a& (0+255),w,b
  3548  00042C  0371               	mulwf	(___flmul@b+2)& (0+255),b
  3549  00042E  CFF3 F086          	movff	prodl,___flmul@temp
  3550  000432  CFF4 F087          	movff	prodh,___flmul@temp+1
  3551                           
  3552                           ; BSR set to: 0
  3553  000436  5186               	movf	___flmul@temp& (0+255),w,b
  3554  000438  277C               	addwf	___flmul@grs& (0+255),f,b
  3555  00043A  0E00               	movlw	0
  3556  00043C  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3557  00043E  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3558  000440  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3559                           
  3560                           ; BSR set to: 0
  3561  000442  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3562  000444  2782               	addwf	___flmul@prod& (0+255),f,b
  3563  000446  0E00               	movlw	0
  3564  000448  2383               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3565  00044A  2384               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3566  00044C  2385               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3567                           
  3568                           ; BSR set to: 0
  3569  00044E  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  3570  000452  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  3571  000456  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  3572  00045A  6B7C               	clrf	___flmul@grs& (0+255),b
  3573                           
  3574                           ; BSR set to: 0
  3575  00045C  5173               	movf	___flmul@a& (0+255),w,b
  3576  00045E  0370               	mulwf	(___flmul@b+1)& (0+255),b
  3577  000460  CFF3 F086          	movff	prodl,___flmul@temp
  3578  000464  CFF4 F087          	movff	prodh,___flmul@temp+1
  3579                           
  3580                           ; BSR set to: 0
  3581  000468  5186               	movf	___flmul@temp& (0+255),w,b
  3582  00046A  277C               	addwf	___flmul@grs& (0+255),f,b
  3583  00046C  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3584  00046E  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3585  000470  0E00               	movlw	0
  3586  000472  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3587  000474  0E00               	movlw	0
  3588  000476  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3589                           
  3590                           ; BSR set to: 0
  3591  000478  5174               	movf	(___flmul@a+1)& (0+255),w,b
  3592  00047A  036F               	mulwf	___flmul@b& (0+255),b
  3593  00047C  CFF3 F086          	movff	prodl,___flmul@temp
  3594  000480  CFF4 F087          	movff	prodh,___flmul@temp+1
  3595                           
  3596                           ; BSR set to: 0
  3597  000484  5186               	movf	___flmul@temp& (0+255),w,b
  3598  000486  277C               	addwf	___flmul@grs& (0+255),f,b
  3599  000488  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3600  00048A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3601  00048C  0E00               	movlw	0
  3602  00048E  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3603  000490  0E00               	movlw	0
  3604  000492  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3605                           
  3606                           ; BSR set to: 0
  3607  000494  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  3608  000498  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  3609  00049C  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  3610  0004A0  6B7C               	clrf	___flmul@grs& (0+255),b
  3611  0004A2  5173               	movf	___flmul@a& (0+255),w,b
  3612  0004A4  036F               	mulwf	___flmul@b& (0+255),b
  3613  0004A6  CFF3 F086          	movff	prodl,___flmul@temp
  3614  0004AA  CFF4 F087          	movff	prodh,___flmul@temp+1
  3615                           
  3616                           ; BSR set to: 0
  3617  0004AE  5186               	movf	___flmul@temp& (0+255),w,b
  3618  0004B0  277C               	addwf	___flmul@grs& (0+255),f,b
  3619  0004B2  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3620  0004B4  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3621  0004B6  0E00               	movlw	0
  3622  0004B8  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3623  0004BA  0E00               	movlw	0
  3624  0004BC  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3625                           
  3626                           ; BSR set to: 0
  3627  0004BE  5175               	movf	(___flmul@a+2)& (0+255),w,b
  3628  0004C0  0370               	mulwf	(___flmul@b+1)& (0+255),b
  3629  0004C2  CFF3 F086          	movff	prodl,___flmul@temp
  3630  0004C6  CFF4 F087          	movff	prodh,___flmul@temp+1
  3631  0004CA  5186               	movf	___flmul@temp& (0+255),w,b
  3632  0004CC  2782               	addwf	___flmul@prod& (0+255),f,b
  3633  0004CE  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3634  0004D0  2383               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3635  0004D2  0E00               	movlw	0
  3636  0004D4  2384               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3637  0004D6  0E00               	movlw	0
  3638  0004D8  2385               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3639                           
  3640                           ; BSR set to: 0
  3641  0004DA  5174               	movf	(___flmul@a+1)& (0+255),w,b
  3642  0004DC  0371               	mulwf	(___flmul@b+2)& (0+255),b
  3643  0004DE  CFF3 F086          	movff	prodl,___flmul@temp
  3644  0004E2  CFF4 F087          	movff	prodh,___flmul@temp+1
  3645                           
  3646                           ; BSR set to: 0
  3647  0004E6  5186               	movf	___flmul@temp& (0+255),w,b
  3648  0004E8  2782               	addwf	___flmul@prod& (0+255),f,b
  3649  0004EA  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3650  0004EC  2383               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3651  0004EE  0E00               	movlw	0
  3652  0004F0  2384               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3653  0004F2  0E00               	movlw	0
  3654  0004F4  2385               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3655  0004F6  5175               	movf	(___flmul@a+2)& (0+255),w,b
  3656  0004F8  0371               	mulwf	(___flmul@b+2)& (0+255),b
  3657  0004FA  CFF3 F086          	movff	prodl,___flmul@temp
  3658  0004FE  CFF4 F087          	movff	prodh,___flmul@temp+1
  3659                           
  3660                           ; BSR set to: 0
  3661  000502  5186               	movf	___flmul@temp& (0+255),w,b
  3662  000504  6F77               	movwf	??___flmul& (0+255),b
  3663  000506  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3664  000508  6F78               	movwf	(??___flmul+1)& (0+255),b
  3665  00050A  6B79               	clrf	(??___flmul+2)& (0+255),b
  3666  00050C  6B7A               	clrf	(??___flmul+3)& (0+255),b
  3667  00050E  C079  F07A         	movff	??___flmul+2,??___flmul+3
  3668  000512  C078  F079         	movff	??___flmul+1,??___flmul+2
  3669  000516  C077  F078         	movff	??___flmul,??___flmul+1
  3670  00051A  6B77               	clrf	??___flmul& (0+255),b
  3671  00051C  5177               	movf	??___flmul& (0+255),w,b
  3672  00051E  2782               	addwf	___flmul@prod& (0+255),f,b
  3673  000520  5178               	movf	(??___flmul+1)& (0+255),w,b
  3674  000522  2383               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3675  000524  5179               	movf	(??___flmul+2)& (0+255),w,b
  3676  000526  2384               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3677  000528  517A               	movf	(??___flmul+3)& (0+255),w,b
  3678  00052A  2385               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3679                           
  3680                           ; BSR set to: 0
  3681  00052C  C07C  F077         	movff	___flmul@grs,??___flmul
  3682  000530  C07D  F078         	movff	___flmul@grs+1,??___flmul+1
  3683  000534  C07E  F079         	movff	___flmul@grs+2,??___flmul+2
  3684  000538  C07F  F07A         	movff	___flmul@grs+3,??___flmul+3
  3685  00053C  0E19               	movlw	25
  3686  00053E  D005               	goto	u2680
  3687  000540                     u2685:
  3688  000540  90D8               	bcf	status,0,c
  3689  000542  337A               	rrcf	(??___flmul+3)& (0+255),f,b
  3690  000544  3379               	rrcf	(??___flmul+2)& (0+255),f,b
  3691  000546  3378               	rrcf	(??___flmul+1)& (0+255),f,b
  3692  000548  3377               	rrcf	??___flmul& (0+255),f,b
  3693  00054A                     u2680:
  3694  00054A  2EE8               	decfsz	wreg,f,c
  3695  00054C  D7F9               	goto	u2685
  3696  00054E  5177               	movf	??___flmul& (0+255),w,b
  3697  000550  2782               	addwf	___flmul@prod& (0+255),f,b
  3698  000552  5178               	movf	(??___flmul+1)& (0+255),w,b
  3699  000554  2383               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3700  000556  5179               	movf	(??___flmul+2)& (0+255),w,b
  3701  000558  2384               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3702  00055A  517A               	movf	(??___flmul+3)& (0+255),w,b
  3703  00055C  2385               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3704                           
  3705                           ; BSR set to: 0
  3706  00055E  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  3707  000562  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  3708  000566  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  3709  00056A  6B7C               	clrf	___flmul@grs& (0+255),b
  3710                           
  3711                           ; BSR set to: 0
  3712  00056C  5180               	movf	___flmul@aexp& (0+255),w,b
  3713  00056E  C081  F077         	movff	___flmul@bexp,??___flmul
  3714  000572  6B78               	clrf	(??___flmul+1)& (0+255),b
  3715  000574  2777               	addwf	??___flmul& (0+255),f,b
  3716  000576  0E00               	movlw	0
  3717  000578  2378               	addwfc	(??___flmul+1)& (0+255),f,b
  3718  00057A  0E82               	movlw	130
  3719  00057C  2577               	addwf	??___flmul& (0+255),w,b
  3720  00057E  6F86               	movwf	___flmul@temp& (0+255),b
  3721  000580  0EFF               	movlw	255
  3722  000582  2178               	addwfc	(??___flmul+1)& (0+255),w,b
  3723  000584  6F87               	movwf	(___flmul@temp+1)& (0+255),b
  3724  000586  D00F               	goto	l2703
  3725  000588                     l2697:
  3726                           
  3727                           ; BSR set to: 0
  3728  000588  90D8               	bcf	status,0,c
  3729  00058A  3782               	rlcf	___flmul@prod& (0+255),f,b
  3730  00058C  3783               	rlcf	(___flmul@prod+1)& (0+255),f,b
  3731  00058E  3784               	rlcf	(___flmul@prod+2)& (0+255),f,b
  3732  000590  3785               	rlcf	(___flmul@prod+3)& (0+255),f,b
  3733                           
  3734                           ; BSR set to: 0
  3735  000592  BF7F               	btfsc	(___flmul@grs+3)& (0+255),7,b
  3736                           
  3737                           ; BSR set to: 0
  3738  000594  8182               	bsf	___flmul@prod& (0+255),0,b
  3739                           
  3740                           ; BSR set to: 0
  3741  000596  90D8               	bcf	status,0,c
  3742  000598  377C               	rlcf	___flmul@grs& (0+255),f,b
  3743  00059A  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  3744  00059C  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  3745  00059E  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  3746  0005A0  0786               	decf	___flmul@temp& (0+255),f,b
  3747  0005A2  A0D8               	btfss	status,0,c
  3748  0005A4  0787               	decf	(___flmul@temp+1)& (0+255),f,b
  3749  0005A6                     l2703:
  3750                           
  3751                           ; BSR set to: 0
  3752  0005A6  AF84               	btfss	(___flmul@prod+2)& (0+255),7,b
  3753  0005A8  D7EF               	goto	l2697
  3754                           
  3755                           ; BSR set to: 0
  3756  0005AA  0E00               	movlw	0
  3757  0005AC  6F80               	movwf	___flmul@aexp& (0+255),b
  3758                           
  3759                           ; BSR set to: 0
  3760  0005AE  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  3761  0005B0  D017               	goto	l937
  3762                           
  3763                           ; BSR set to: 0
  3764  0005B2  0EFF               	movlw	255
  3765  0005B4  157C               	andwf	___flmul@grs& (0+255),w,b
  3766  0005B6  6F77               	movwf	??___flmul& (0+255),b
  3767  0005B8  0EFF               	movlw	255
  3768  0005BA  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
  3769  0005BC  6F78               	movwf	(??___flmul+1)& (0+255),b
  3770  0005BE  0EFF               	movlw	255
  3771  0005C0  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
  3772  0005C2  6F79               	movwf	(??___flmul+2)& (0+255),b
  3773  0005C4  0E7F               	movlw	127
  3774  0005C6  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
  3775  0005C8  6F7A               	movwf	(??___flmul+3)& (0+255),b
  3776  0005CA  5177               	movf	??___flmul& (0+255),w,b
  3777  0005CC  1178               	iorwf	(??___flmul+1)& (0+255),w,b
  3778  0005CE  1179               	iorwf	(??___flmul+2)& (0+255),w,b
  3779  0005D0  117A               	iorwf	(??___flmul+3)& (0+255),w,b
  3780  0005D2  B4D8               	btfsc	status,2,c
  3781  0005D4  D003               	goto	l938
  3782  0005D6                     u2720:
  3783                           
  3784                           ; BSR set to: 0
  3785  0005D6  0E01               	movlw	1
  3786  0005D8  6F80               	movwf	___flmul@aexp& (0+255),b
  3787  0005DA  D002               	goto	l937
  3788  0005DC                     l938:
  3789                           
  3790                           ; BSR set to: 0
  3791  0005DC  B182               	btfsc	___flmul@prod& (0+255),0,b
  3792  0005DE  D7FB               	goto	u2720
  3793  0005E0                     l937:
  3794                           
  3795                           ; BSR set to: 0
  3796  0005E0  5180               	movf	___flmul@aexp& (0+255),w,b
  3797  0005E2  B4D8               	btfsc	status,2,c
  3798  0005E4  D01F               	goto	l2723
  3799                           
  3800                           ; BSR set to: 0
  3801  0005E6  0E01               	movlw	1
  3802  0005E8  2782               	addwf	___flmul@prod& (0+255),f,b
  3803  0005EA  0E00               	movlw	0
  3804  0005EC  2383               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3805  0005EE  2384               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3806  0005F0  2385               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3807                           
  3808                           ; BSR set to: 0
  3809  0005F2  A185               	btfss	(___flmul@prod+3)& (0+255),0,b
  3810  0005F4  D017               	goto	l2723
  3811                           
  3812                           ; BSR set to: 0
  3813  0005F6  C082  F077         	movff	___flmul@prod,??___flmul
  3814  0005FA  C083  F078         	movff	___flmul@prod+1,??___flmul+1
  3815  0005FE  C084  F079         	movff	___flmul@prod+2,??___flmul+2
  3816  000602  C085  F07A         	movff	___flmul@prod+3,??___flmul+3
  3817  000606  357A               	rlcf	(??___flmul+3)& (0+255),w,b
  3818  000608  337A               	rrcf	(??___flmul+3)& (0+255),f,b
  3819  00060A  3379               	rrcf	(??___flmul+2)& (0+255),f,b
  3820  00060C  3378               	rrcf	(??___flmul+1)& (0+255),f,b
  3821  00060E  3377               	rrcf	??___flmul& (0+255),f,b
  3822  000610  C077  F082         	movff	??___flmul,___flmul@prod
  3823  000614  C078  F083         	movff	??___flmul+1,___flmul@prod+1
  3824  000618  C079  F084         	movff	??___flmul+2,___flmul@prod+2
  3825  00061C  C07A  F085         	movff	??___flmul+3,___flmul@prod+3
  3826                           
  3827                           ; BSR set to: 0
  3828  000620  4B86               	infsnz	___flmul@temp& (0+255),f,b
  3829  000622  2B87               	incf	(___flmul@temp+1)& (0+255),f,b
  3830  000624                     l2723:
  3831                           
  3832                           ; BSR set to: 0
  3833  000624  BF87               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3834  000626  D00D               	goto	l2727
  3835  000628  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3836  00062A  E103               	bnz	u2760
  3837  00062C  2986               	incf	___flmul@temp& (0+255),w,b
  3838  00062E  A0D8               	btfss	status,0,c
  3839  000630  D008               	goto	l2727
  3840  000632                     u2760:
  3841                           
  3842                           ; BSR set to: 0
  3843  000632  0E00               	movlw	0
  3844  000634  6F82               	movwf	___flmul@prod& (0+255),b
  3845  000636  0E00               	movlw	0
  3846  000638  6F83               	movwf	(___flmul@prod+1)& (0+255),b
  3847  00063A  0E80               	movlw	128
  3848  00063C  6F84               	movwf	(___flmul@prod+2)& (0+255),b
  3849  00063E  0E7F               	movlw	127
  3850  000640  D020               	goto	L1
  3851  000642                     l2727:
  3852                           
  3853                           ; BSR set to: 0
  3854  000642  BF87               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3855  000644  D005               	goto	u2770
  3856  000646  5187               	movf	(___flmul@temp+1)& (0+255),w,b
  3857  000648  E10E               	bnz	l945
  3858  00064A  0586               	decf	___flmul@temp& (0+255),w,b
  3859  00064C  B0D8               	btfsc	status,0,c
  3860  00064E  D00B               	goto	l945
  3861  000650                     u2770:
  3862                           
  3863                           ; BSR set to: 0
  3864  000650  0E00               	movlw	0
  3865  000652  6F82               	movwf	___flmul@prod& (0+255),b
  3866  000654  0E00               	movlw	0
  3867  000656  6F83               	movwf	(___flmul@prod+1)& (0+255),b
  3868  000658  0E00               	movlw	0
  3869  00065A  6F84               	movwf	(___flmul@prod+2)& (0+255),b
  3870  00065C  0E00               	movlw	0
  3871  00065E  6F85               	movwf	(___flmul@prod+3)& (0+255),b
  3872  000660  0E00               	movlw	0
  3873  000662  6F7B               	movwf	___flmul@sign& (0+255),b
  3874  000664  D00F               	goto	l2739
  3875  000666                     l945:
  3876                           
  3877                           ; BSR set to: 0
  3878  000666  C086  F081         	movff	___flmul@temp,___flmul@bexp
  3879                           
  3880                           ; BSR set to: 0
  3881  00066A  0EFF               	movlw	255
  3882  00066C  1782               	andwf	___flmul@prod& (0+255),f,b
  3883  00066E  0EFF               	movlw	255
  3884  000670  1783               	andwf	(___flmul@prod+1)& (0+255),f,b
  3885  000672  0E7F               	movlw	127
  3886  000674  1784               	andwf	(___flmul@prod+2)& (0+255),f,b
  3887  000676  0E00               	movlw	0
  3888  000678  1785               	andwf	(___flmul@prod+3)& (0+255),f,b
  3889                           
  3890                           ; BSR set to: 0
  3891  00067A  B181               	btfsc	___flmul@bexp& (0+255),0,b
  3892                           
  3893                           ; BSR set to: 0
  3894  00067C  8F84               	bsf	(___flmul@prod+2)& (0+255),7,b
  3895                           
  3896                           ; BSR set to: 0
  3897  00067E  90D8               	bcf	status,0,c
  3898  000680  3181               	rrcf	___flmul@bexp& (0+255),w,b
  3899  000682                     L1:
  3900  000682  6F85               	movwf	(___flmul@prod+3)& (0+255),b
  3901  000684                     l2739:
  3902                           
  3903                           ; BSR set to: 0
  3904  000684  517B               	movf	___flmul@sign& (0+255),w,b
  3905  000686  1385               	iorwf	(___flmul@prod+3)& (0+255),f,b
  3906                           
  3907                           ; BSR set to: 0
  3908  000688  C082  F06F         	movff	___flmul@prod,?___flmul
  3909  00068C  C083  F070         	movff	___flmul@prod+1,?___flmul+1
  3910  000690  C084  F071         	movff	___flmul@prod+2,?___flmul+2
  3911  000694  C085  F072         	movff	___flmul@prod+3,?___flmul+3
  3912                           
  3913                           ; BSR set to: 0
  3914  000698  0012               	return		;funcret
  3915  00069A                     __end_of___flmul:
  3916                           	opt callstack 0
  3917                           
  3918 ;; *************** function ___fladd *****************
  3919 ;; Defined at:
  3920 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  b               4   40[BANK0 ] unsigned char 
  3923 ;;  a               4   44[BANK0 ] unsigned char 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  grs             1   55[BANK0 ] unsigned char 
  3926 ;;  bexp            1   54[BANK0 ] unsigned char 
  3927 ;;  aexp            1   53[BANK0 ] unsigned char 
  3928 ;;  signs           1   52[BANK0 ] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  4   40[BANK0 ] unsigned char 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3938 ;;      Params:         0       8       0       0
  3939 ;;      Locals:         0       4       0       0
  3940 ;;      Temps:          0       4       0       0
  3941 ;;      Totals:         0      16       0       0
  3942 ;;Total ram usage:       16 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    7
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_main
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text19
  3953  00069A                     __ptext19:
  3954                           	opt callstack 0
  3955  00069A                     ___fladd:
  3956                           	opt callstack 23
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;incstack = 0
  3960  00069A  0100               	movlb	0	; () banked
  3961  00069C  518B               	movf	(___fladd@b+3)& (0+255),w,b
  3962  00069E  0B80               	andlw	128
  3963  0006A0  6F94               	movwf	___fladd@signs& (0+255),b
  3964  0006A2  518B               	movf	(___fladd@b+3)& (0+255),w,b
  3965  0006A4  258B               	addwf	(___fladd@b+3)& (0+255),w,b
  3966  0006A6  6F96               	movwf	___fladd@bexp& (0+255),b
  3967                           
  3968                           ; BSR set to: 0
  3969  0006A8  BF8A               	btfsc	(___fladd@b+2)& (0+255),7,b
  3970                           
  3971                           ; BSR set to: 0
  3972  0006AA  8196               	bsf	___fladd@bexp& (0+255),0,b
  3973                           
  3974                           ; BSR set to: 0
  3975  0006AC  5196               	movf	___fladd@bexp& (0+255),w,b
  3976  0006AE  B4D8               	btfsc	status,2,c
  3977  0006B0  D00D               	goto	l2429
  3978                           
  3979                           ; BSR set to: 0
  3980  0006B2  2996               	incf	___fladd@bexp& (0+255),w,b
  3981  0006B4  A4D8               	btfss	status,2,c
  3982  0006B6  D008               	goto	l2425
  3983                           
  3984                           ; BSR set to: 0
  3985  0006B8  0E00               	movlw	0
  3986  0006BA  6F88               	movwf	___fladd@b& (0+255),b
  3987  0006BC  0E00               	movlw	0
  3988  0006BE  6F89               	movwf	(___fladd@b+1)& (0+255),b
  3989  0006C0  0E00               	movlw	0
  3990  0006C2  6F8A               	movwf	(___fladd@b+2)& (0+255),b
  3991  0006C4  0E00               	movlw	0
  3992  0006C6  6F8B               	movwf	(___fladd@b+3)& (0+255),b
  3993  0006C8                     l2425:
  3994                           
  3995                           ; BSR set to: 0
  3996  0006C8  8F8A               	bsf	(___fladd@b+2)& (0+255),7,b
  3997  0006CA  D006               	goto	L2
  3998  0006CC                     l2429:
  3999                           
  4000                           ; BSR set to: 0
  4001  0006CC  0E00               	movlw	0
  4002  0006CE  6F88               	movwf	___fladd@b& (0+255),b
  4003  0006D0  0E00               	movlw	0
  4004  0006D2  6F89               	movwf	(___fladd@b+1)& (0+255),b
  4005  0006D4  0E00               	movlw	0
  4006  0006D6  6F8A               	movwf	(___fladd@b+2)& (0+255),b
  4007  0006D8                     L2:
  4008  0006D8  0E00               	movlw	0
  4009  0006DA  6F8B               	movwf	(___fladd@b+3)& (0+255),b
  4010                           
  4011                           ; BSR set to: 0
  4012  0006DC  518F               	movf	(___fladd@a+3)& (0+255),w,b
  4013  0006DE  0B80               	andlw	128
  4014  0006E0  6F95               	movwf	___fladd@aexp& (0+255),b
  4015                           
  4016                           ; BSR set to: 0
  4017  0006E2  5194               	movf	___fladd@signs& (0+255),w,b
  4018  0006E4  1995               	xorwf	___fladd@aexp& (0+255),w,b
  4019  0006E6  A4D8               	btfss	status,2,c
  4020                           
  4021                           ; BSR set to: 0
  4022  0006E8  8D94               	bsf	___fladd@signs& (0+255),6,b
  4023                           
  4024                           ; BSR set to: 0
  4025  0006EA  518F               	movf	(___fladd@a+3)& (0+255),w,b
  4026  0006EC  258F               	addwf	(___fladd@a+3)& (0+255),w,b
  4027  0006EE  6F95               	movwf	___fladd@aexp& (0+255),b
  4028                           
  4029                           ; BSR set to: 0
  4030  0006F0  BF8E               	btfsc	(___fladd@a+2)& (0+255),7,b
  4031                           
  4032                           ; BSR set to: 0
  4033  0006F2  8195               	bsf	___fladd@aexp& (0+255),0,b
  4034                           
  4035                           ; BSR set to: 0
  4036  0006F4  5195               	movf	___fladd@aexp& (0+255),w,b
  4037  0006F6  B4D8               	btfsc	status,2,c
  4038  0006F8  D00D               	goto	l2453
  4039                           
  4040                           ; BSR set to: 0
  4041  0006FA  2995               	incf	___fladd@aexp& (0+255),w,b
  4042  0006FC  A4D8               	btfss	status,2,c
  4043  0006FE  D008               	goto	l2449
  4044                           
  4045                           ; BSR set to: 0
  4046  000700  0E00               	movlw	0
  4047  000702  6F8C               	movwf	___fladd@a& (0+255),b
  4048  000704  0E00               	movlw	0
  4049  000706  6F8D               	movwf	(___fladd@a+1)& (0+255),b
  4050  000708  0E00               	movlw	0
  4051  00070A  6F8E               	movwf	(___fladd@a+2)& (0+255),b
  4052  00070C  0E00               	movlw	0
  4053  00070E  6F8F               	movwf	(___fladd@a+3)& (0+255),b
  4054  000710                     l2449:
  4055                           
  4056                           ; BSR set to: 0
  4057  000710  8F8E               	bsf	(___fladd@a+2)& (0+255),7,b
  4058  000712  D006               	goto	L3
  4059  000714                     l2453:
  4060                           
  4061                           ; BSR set to: 0
  4062  000714  0E00               	movlw	0
  4063  000716  6F8C               	movwf	___fladd@a& (0+255),b
  4064  000718  0E00               	movlw	0
  4065  00071A  6F8D               	movwf	(___fladd@a+1)& (0+255),b
  4066  00071C  0E00               	movlw	0
  4067  00071E  6F8E               	movwf	(___fladd@a+2)& (0+255),b
  4068  000720                     L3:
  4069  000720  0E00               	movlw	0
  4070  000722  6F8F               	movwf	(___fladd@a+3)& (0+255),b
  4071                           
  4072                           ; BSR set to: 0
  4073  000724  5196               	movf	___fladd@bexp& (0+255),w,b
  4074  000726  5D95               	subwf	___fladd@aexp& (0+255),w,b
  4075  000728  B0D8               	btfsc	status,0,c
  4076  00072A  D022               	goto	l2491
  4077                           
  4078                           ; BSR set to: 0
  4079  00072C  AD94               	btfss	___fladd@signs& (0+255),6,b
  4080  00072E  D002               	goto	l2461
  4081                           
  4082                           ; BSR set to: 0
  4083  000730  0E80               	movlw	128
  4084  000732  1B94               	xorwf	___fladd@signs& (0+255),f,b
  4085  000734                     l2461:
  4086                           
  4087                           ; BSR set to: 0
  4088  000734  C096  F097         	movff	___fladd@bexp,___fladd@grs
  4089                           
  4090                           ; BSR set to: 0
  4091  000738  C095  F096         	movff	___fladd@aexp,___fladd@bexp
  4092                           
  4093                           ; BSR set to: 0
  4094  00073C  C097  F095         	movff	___fladd@grs,___fladd@aexp
  4095                           
  4096                           ; BSR set to: 0
  4097  000740  C088  F097         	movff	___fladd@b,___fladd@grs
  4098                           
  4099                           ; BSR set to: 0
  4100  000744  C08C  F088         	movff	___fladd@a,___fladd@b
  4101                           
  4102                           ; BSR set to: 0
  4103  000748  C097  F08C         	movff	___fladd@grs,___fladd@a
  4104                           
  4105                           ; BSR set to: 0
  4106  00074C  C089  F097         	movff	___fladd@b+1,___fladd@grs
  4107                           
  4108                           ; BSR set to: 0
  4109  000750  C08D  F089         	movff	___fladd@a+1,___fladd@b+1
  4110                           
  4111                           ; BSR set to: 0
  4112  000754  C097  F08D         	movff	___fladd@grs,___fladd@a+1
  4113                           
  4114                           ; BSR set to: 0
  4115  000758  C08A  F097         	movff	___fladd@b+2,___fladd@grs
  4116                           
  4117                           ; BSR set to: 0
  4118  00075C  C08E  F08A         	movff	___fladd@a+2,___fladd@b+2
  4119                           
  4120                           ; BSR set to: 0
  4121  000760  C097  F08E         	movff	___fladd@grs,___fladd@a+2
  4122                           
  4123                           ; BSR set to: 0
  4124  000764  C08B  F097         	movff	___fladd@b+3,___fladd@grs
  4125                           
  4126                           ; BSR set to: 0
  4127  000768  C08F  F08B         	movff	___fladd@a+3,___fladd@b+3
  4128                           
  4129                           ; BSR set to: 0
  4130  00076C  C097  F08F         	movff	___fladd@grs,___fladd@a+3
  4131  000770                     l2491:
  4132                           
  4133                           ; BSR set to: 0
  4134  000770  0E00               	movlw	0
  4135  000772  6F97               	movwf	___fladd@grs& (0+255),b
  4136                           
  4137                           ; BSR set to: 0
  4138  000774  5196               	movf	___fladd@bexp& (0+255),w,b
  4139  000776  C095  F090         	movff	___fladd@aexp,??___fladd
  4140  00077A  6B91               	clrf	(??___fladd+1)& (0+255),b
  4141  00077C  5F90               	subwf	??___fladd& (0+255),f,b
  4142  00077E  0E00               	movlw	0
  4143  000780  5B91               	subwfb	(??___fladd+1)& (0+255),f,b
  4144  000782  BF91               	btfsc	(??___fladd+1)& (0+255),7,b
  4145  000784  D02C               	goto	l843
  4146  000786  5191               	movf	(??___fladd+1)& (0+255),w,b
  4147  000788  E104               	bnz	u2300
  4148  00078A  0E1A               	movlw	26
  4149  00078C  5D90               	subwf	??___fladd& (0+255),w,b
  4150  00078E  A0D8               	btfss	status,0,c
  4151  000790  D026               	goto	l843
  4152  000792                     u2300:
  4153                           
  4154                           ; BSR set to: 0
  4155  000792  5188               	movf	___fladd@b& (0+255),w,b
  4156  000794  1189               	iorwf	(___fladd@b+1)& (0+255),w,b
  4157  000796  118A               	iorwf	(___fladd@b+2)& (0+255),w,b
  4158  000798  118B               	iorwf	(___fladd@b+3)& (0+255),w,b
  4159  00079A  B4D8               	btfsc	status,2,c
  4160  00079C  D002               	goto	u2310
  4161  00079E  0E01               	movlw	1
  4162  0007A0  D001               	goto	u2320
  4163  0007A2                     u2310:
  4164  0007A2  0E00               	movlw	0
  4165  0007A4                     u2320:
  4166  0007A4  6F97               	movwf	___fladd@grs& (0+255),b
  4167                           
  4168                           ; BSR set to: 0
  4169  0007A6  0E00               	movlw	0
  4170  0007A8  6F88               	movwf	___fladd@b& (0+255),b
  4171  0007AA  0E00               	movlw	0
  4172  0007AC  6F89               	movwf	(___fladd@b+1)& (0+255),b
  4173  0007AE  0E00               	movlw	0
  4174  0007B0  6F8A               	movwf	(___fladd@b+2)& (0+255),b
  4175  0007B2  0E00               	movlw	0
  4176  0007B4  6F8B               	movwf	(___fladd@b+3)& (0+255),b
  4177                           
  4178                           ; BSR set to: 0
  4179  0007B6  C095  F096         	movff	___fladd@aexp,___fladd@bexp
  4180  0007BA  D015               	goto	u2350
  4181  0007BC                     l844:
  4182                           
  4183                           ; BSR set to: 0
  4184  0007BC  A197               	btfss	___fladd@grs& (0+255),0,b
  4185  0007BE  D005               	goto	l2503
  4186                           
  4187                           ; BSR set to: 0
  4188  0007C0  90D8               	bcf	status,0,c
  4189  0007C2  3197               	rrcf	___fladd@grs& (0+255),w,b
  4190  0007C4  0901               	iorlw	1
  4191  0007C6  6F97               	movwf	___fladd@grs& (0+255),b
  4192  0007C8  D002               	goto	l2505
  4193  0007CA                     l2503:
  4194                           
  4195                           ; BSR set to: 0
  4196  0007CA  90D8               	bcf	status,0,c
  4197  0007CC  3397               	rrcf	___fladd@grs& (0+255),f,b
  4198  0007CE                     l2505:
  4199                           
  4200                           ; BSR set to: 0
  4201  0007CE  B188               	btfsc	___fladd@b& (0+255),0,b
  4202                           
  4203                           ; BSR set to: 0
  4204  0007D0  8F97               	bsf	___fladd@grs& (0+255),7,b
  4205                           
  4206                           ; BSR set to: 0
  4207  0007D2  358B               	rlcf	(___fladd@b+3)& (0+255),w,b
  4208  0007D4  338B               	rrcf	(___fladd@b+3)& (0+255),f,b
  4209  0007D6  338A               	rrcf	(___fladd@b+2)& (0+255),f,b
  4210  0007D8  3389               	rrcf	(___fladd@b+1)& (0+255),f,b
  4211  0007DA  3388               	rrcf	___fladd@b& (0+255),f,b
  4212                           
  4213                           ; BSR set to: 0
  4214  0007DC  2B96               	incf	___fladd@bexp& (0+255),f,b
  4215  0007DE                     l843:
  4216                           
  4217                           ; BSR set to: 0
  4218  0007DE  5195               	movf	___fladd@aexp& (0+255),w,b
  4219  0007E0  5D96               	subwf	___fladd@bexp& (0+255),w,b
  4220  0007E2  A0D8               	btfss	status,0,c
  4221  0007E4  D7EB               	goto	l844
  4222  0007E6                     u2350:
  4223                           
  4224                           ; BSR set to: 0
  4225  0007E6  BD94               	btfsc	___fladd@signs& (0+255),6,b
  4226  0007E8  D028               	goto	l2537
  4227                           
  4228                           ; BSR set to: 0
  4229  0007EA  5196               	movf	___fladd@bexp& (0+255),w,b
  4230  0007EC  A4D8               	btfss	status,2,c
  4231  0007EE  D009               	goto	l2519
  4232                           
  4233                           ; BSR set to: 0
  4234  0007F0  0E00               	movlw	0
  4235  0007F2  6F88               	movwf	?___fladd& (0+255),b
  4236  0007F4  0E00               	movlw	0
  4237  0007F6  6F89               	movwf	(?___fladd+1)& (0+255),b
  4238  0007F8  0E00               	movlw	0
  4239  0007FA  6F8A               	movwf	(?___fladd+2)& (0+255),b
  4240  0007FC  0E00               	movlw	0
  4241  0007FE  6F8B               	movwf	(?___fladd+3)& (0+255),b
  4242  000800  0012               	return	
  4243  000802                     l2519:
  4244                           
  4245                           ; BSR set to: 0
  4246  000802  518C               	movf	___fladd@a& (0+255),w,b
  4247  000804  2788               	addwf	___fladd@b& (0+255),f,b
  4248  000806  518D               	movf	(___fladd@a+1)& (0+255),w,b
  4249  000808  2389               	addwfc	(___fladd@b+1)& (0+255),f,b
  4250  00080A  518E               	movf	(___fladd@a+2)& (0+255),w,b
  4251  00080C  238A               	addwfc	(___fladd@b+2)& (0+255),f,b
  4252  00080E  518F               	movf	(___fladd@a+3)& (0+255),w,b
  4253  000810  238B               	addwfc	(___fladd@b+3)& (0+255),f,b
  4254                           
  4255                           ; BSR set to: 0
  4256  000812  A18B               	btfss	(___fladd@b+3)& (0+255),0,b
  4257  000814  D071               	goto	u2480
  4258                           
  4259                           ; BSR set to: 0
  4260  000816  A197               	btfss	___fladd@grs& (0+255),0,b
  4261  000818  D005               	goto	l2527
  4262                           
  4263                           ; BSR set to: 0
  4264  00081A  90D8               	bcf	status,0,c
  4265  00081C  3197               	rrcf	___fladd@grs& (0+255),w,b
  4266  00081E  0901               	iorlw	1
  4267  000820  6F97               	movwf	___fladd@grs& (0+255),b
  4268  000822  D002               	goto	l2529
  4269  000824                     l2527:
  4270                           
  4271                           ; BSR set to: 0
  4272  000824  90D8               	bcf	status,0,c
  4273  000826  3397               	rrcf	___fladd@grs& (0+255),f,b
  4274  000828                     l2529:
  4275                           
  4276                           ; BSR set to: 0
  4277  000828  B188               	btfsc	___fladd@b& (0+255),0,b
  4278                           
  4279                           ; BSR set to: 0
  4280  00082A  8F97               	bsf	___fladd@grs& (0+255),7,b
  4281                           
  4282                           ; BSR set to: 0
  4283  00082C  358B               	rlcf	(___fladd@b+3)& (0+255),w,b
  4284  00082E  338B               	rrcf	(___fladd@b+3)& (0+255),f,b
  4285  000830  338A               	rrcf	(___fladd@b+2)& (0+255),f,b
  4286  000832  3389               	rrcf	(___fladd@b+1)& (0+255),f,b
  4287  000834  3388               	rrcf	___fladd@b& (0+255),f,b
  4288                           
  4289                           ; BSR set to: 0
  4290  000836  2B96               	incf	___fladd@bexp& (0+255),f,b
  4291  000838  D05F               	goto	u2480
  4292  00083A                     l2537:
  4293                           
  4294                           ; BSR set to: 0
  4295  00083A  518C               	movf	___fladd@a& (0+255),w,b
  4296  00083C  5D88               	subwf	___fladd@b& (0+255),w,b
  4297  00083E  518D               	movf	(___fladd@a+1)& (0+255),w,b
  4298  000840  5989               	subwfb	(___fladd@b+1)& (0+255),w,b
  4299  000842  518E               	movf	(___fladd@a+2)& (0+255),w,b
  4300  000844  598A               	subwfb	(___fladd@b+2)& (0+255),w,b
  4301  000846  518B               	movf	(___fladd@b+3)& (0+255),w,b
  4302  000848  0A80               	xorlw	128
  4303  00084A  6F90               	movwf	??___fladd& (0+255),b
  4304  00084C  518F               	movf	(___fladd@a+3)& (0+255),w,b
  4305  00084E  0A80               	xorlw	128
  4306  000850  5990               	subwfb	??___fladd& (0+255),w,b
  4307  000852  B0D8               	btfsc	status,0,c
  4308  000854  D025               	goto	l2547
  4309                           
  4310                           ; BSR set to: 0
  4311  000856  5188               	movf	___fladd@b& (0+255),w,b
  4312  000858  5D8C               	subwf	___fladd@a& (0+255),w,b
  4313  00085A  6F90               	movwf	??___fladd& (0+255),b
  4314  00085C  5189               	movf	(___fladd@b+1)& (0+255),w,b
  4315  00085E  598D               	subwfb	(___fladd@a+1)& (0+255),w,b
  4316  000860  6F91               	movwf	(??___fladd+1)& (0+255),b
  4317  000862  518A               	movf	(___fladd@b+2)& (0+255),w,b
  4318  000864  598E               	subwfb	(___fladd@a+2)& (0+255),w,b
  4319  000866  6F92               	movwf	(??___fladd+2)& (0+255),b
  4320  000868  518B               	movf	(___fladd@b+3)& (0+255),w,b
  4321  00086A  598F               	subwfb	(___fladd@a+3)& (0+255),w,b
  4322  00086C  6F93               	movwf	(??___fladd+3)& (0+255),b
  4323  00086E  0EFF               	movlw	255
  4324  000870  2590               	addwf	??___fladd& (0+255),w,b
  4325  000872  6F88               	movwf	___fladd@b& (0+255),b
  4326  000874  0EFF               	movlw	255
  4327  000876  2191               	addwfc	(??___fladd+1)& (0+255),w,b
  4328  000878  6F89               	movwf	(___fladd@b+1)& (0+255),b
  4329  00087A  0EFF               	movlw	255
  4330  00087C  2192               	addwfc	(??___fladd+2)& (0+255),w,b
  4331  00087E  6F8A               	movwf	(___fladd@b+2)& (0+255),b
  4332  000880  0EFF               	movlw	255
  4333  000882  2193               	addwfc	(??___fladd+3)& (0+255),w,b
  4334  000884  6F8B               	movwf	(___fladd@b+3)& (0+255),b
  4335  000886  0E80               	movlw	128
  4336  000888  1B94               	xorwf	___fladd@signs& (0+255),f,b
  4337                           
  4338                           ; BSR set to: 0
  4339  00088A  6D97               	negf	___fladd@grs& (0+255),b
  4340                           
  4341                           ; BSR set to: 0
  4342  00088C  5197               	movf	___fladd@grs& (0+255),w,b
  4343  00088E  A4D8               	btfss	status,2,c
  4344  000890  D00F               	goto	l859
  4345                           
  4346                           ; BSR set to: 0
  4347  000892  0E01               	movlw	1
  4348  000894  2788               	addwf	___fladd@b& (0+255),f,b
  4349  000896  0E00               	movlw	0
  4350  000898  2389               	addwfc	(___fladd@b+1)& (0+255),f,b
  4351  00089A  238A               	addwfc	(___fladd@b+2)& (0+255),f,b
  4352  00089C  238B               	addwfc	(___fladd@b+3)& (0+255),f,b
  4353  00089E  D008               	goto	l859
  4354  0008A0                     l2547:
  4355                           
  4356                           ; BSR set to: 0
  4357  0008A0  518C               	movf	___fladd@a& (0+255),w,b
  4358  0008A2  5F88               	subwf	___fladd@b& (0+255),f,b
  4359  0008A4  518D               	movf	(___fladd@a+1)& (0+255),w,b
  4360  0008A6  5B89               	subwfb	(___fladd@b+1)& (0+255),f,b
  4361  0008A8  518E               	movf	(___fladd@a+2)& (0+255),w,b
  4362  0008AA  5B8A               	subwfb	(___fladd@b+2)& (0+255),f,b
  4363  0008AC  518F               	movf	(___fladd@a+3)& (0+255),w,b
  4364  0008AE  5B8B               	subwfb	(___fladd@b+3)& (0+255),f,b
  4365  0008B0                     l859:
  4366                           
  4367                           ; BSR set to: 0
  4368  0008B0  5188               	movf	___fladd@b& (0+255),w,b
  4369  0008B2  1189               	iorwf	(___fladd@b+1)& (0+255),w,b
  4370  0008B4  118A               	iorwf	(___fladd@b+2)& (0+255),w,b
  4371  0008B6  118B               	iorwf	(___fladd@b+3)& (0+255),w,b
  4372  0008B8  A4D8               	btfss	status,2,c
  4373  0008BA  D01C               	goto	l2571
  4374                           
  4375                           ; BSR set to: 0
  4376  0008BC  5197               	movf	___fladd@grs& (0+255),w,b
  4377  0008BE  A4D8               	btfss	status,2,c
  4378  0008C0  D019               	goto	l2571
  4379                           
  4380                           ; BSR set to: 0
  4381  0008C2  0E00               	movlw	0
  4382  0008C4  6F88               	movwf	?___fladd& (0+255),b
  4383  0008C6  0E00               	movlw	0
  4384  0008C8  6F89               	movwf	(?___fladd+1)& (0+255),b
  4385  0008CA  0E00               	movlw	0
  4386  0008CC  6F8A               	movwf	(?___fladd+2)& (0+255),b
  4387  0008CE  0E00               	movlw	0
  4388  0008D0  6F8B               	movwf	(?___fladd+3)& (0+255),b
  4389  0008D2  0012               	return	
  4390  0008D4                     l2555:
  4391                           
  4392                           ; BSR set to: 0
  4393  0008D4  90D8               	bcf	status,0,c
  4394  0008D6  3788               	rlcf	___fladd@b& (0+255),f,b
  4395  0008D8  3789               	rlcf	(___fladd@b+1)& (0+255),f,b
  4396  0008DA  378A               	rlcf	(___fladd@b+2)& (0+255),f,b
  4397  0008DC  378B               	rlcf	(___fladd@b+3)& (0+255),f,b
  4398                           
  4399                           ; BSR set to: 0
  4400  0008DE  BF97               	btfsc	___fladd@grs& (0+255),7,b
  4401                           
  4402                           ; BSR set to: 0
  4403  0008E0  8188               	bsf	___fladd@b& (0+255),0,b
  4404                           
  4405                           ; BSR set to: 0
  4406  0008E2  A197               	btfss	___fladd@grs& (0+255),0,b
  4407  0008E4  D002               	goto	l2565
  4408                           
  4409                           ; BSR set to: 0
  4410  0008E6  80D8               	bsf	status,0,c
  4411  0008E8  D001               	goto	L4
  4412  0008EA                     l2565:
  4413                           
  4414                           ; BSR set to: 0
  4415  0008EA  90D8               	bcf	status,0,c
  4416  0008EC                     L4:
  4417  0008EC  3797               	rlcf	___fladd@grs& (0+255),f,b
  4418                           
  4419                           ; BSR set to: 0
  4420  0008EE  5196               	movf	___fladd@bexp& (0+255),w,b
  4421  0008F0  A4D8               	btfss	status,2,c
  4422                           
  4423                           ; BSR set to: 0
  4424  0008F2  0796               	decf	___fladd@bexp& (0+255),f,b
  4425  0008F4                     l2571:
  4426                           
  4427                           ; BSR set to: 0
  4428  0008F4  AF8A               	btfss	(___fladd@b+2)& (0+255),7,b
  4429  0008F6  D7EE               	goto	l2555
  4430  0008F8                     u2480:
  4431                           
  4432                           ; BSR set to: 0
  4433  0008F8  0E00               	movlw	0
  4434  0008FA  6F95               	movwf	___fladd@aexp& (0+255),b
  4435                           
  4436                           ; BSR set to: 0
  4437  0008FC  AF97               	btfss	___fladd@grs& (0+255),7,b
  4438  0008FE  D00B               	goto	l868
  4439                           
  4440                           ; BSR set to: 0
  4441  000900  C097  F090         	movff	___fladd@grs,??___fladd
  4442  000904  0E7F               	movlw	127
  4443  000906  1790               	andwf	??___fladd& (0+255),f,b
  4444  000908  B4D8               	btfsc	status,2,c
  4445  00090A  D003               	goto	l869
  4446  00090C                     u2500:
  4447                           
  4448                           ; BSR set to: 0
  4449  00090C  0E01               	movlw	1
  4450  00090E  6F95               	movwf	___fladd@aexp& (0+255),b
  4451  000910  D002               	goto	l868
  4452  000912                     l869:
  4453                           
  4454                           ; BSR set to: 0
  4455  000912  B188               	btfsc	___fladd@b& (0+255),0,b
  4456  000914  D7FB               	goto	u2500
  4457  000916                     l868:
  4458                           
  4459                           ; BSR set to: 0
  4460  000916  5195               	movf	___fladd@aexp& (0+255),w,b
  4461  000918  B4D8               	btfsc	status,2,c
  4462  00091A  D020               	goto	l2591
  4463                           
  4464                           ; BSR set to: 0
  4465  00091C  0E01               	movlw	1
  4466  00091E  2788               	addwf	___fladd@b& (0+255),f,b
  4467  000920  0E00               	movlw	0
  4468  000922  2389               	addwfc	(___fladd@b+1)& (0+255),f,b
  4469  000924  238A               	addwfc	(___fladd@b+2)& (0+255),f,b
  4470  000926  238B               	addwfc	(___fladd@b+3)& (0+255),f,b
  4471                           
  4472                           ; BSR set to: 0
  4473  000928  A18B               	btfss	(___fladd@b+3)& (0+255),0,b
  4474  00092A  D018               	goto	l2591
  4475                           
  4476                           ; BSR set to: 0
  4477  00092C  C088  F090         	movff	___fladd@b,??___fladd
  4478  000930  C089  F091         	movff	___fladd@b+1,??___fladd+1
  4479  000934  C08A  F092         	movff	___fladd@b+2,??___fladd+2
  4480  000938  C08B  F093         	movff	___fladd@b+3,??___fladd+3
  4481  00093C  3593               	rlcf	(??___fladd+3)& (0+255),w,b
  4482  00093E  3393               	rrcf	(??___fladd+3)& (0+255),f,b
  4483  000940  3392               	rrcf	(??___fladd+2)& (0+255),f,b
  4484  000942  3391               	rrcf	(??___fladd+1)& (0+255),f,b
  4485  000944  3390               	rrcf	??___fladd& (0+255),f,b
  4486  000946  C090  F088         	movff	??___fladd,___fladd@b
  4487  00094A  C091  F089         	movff	??___fladd+1,___fladd@b+1
  4488  00094E  C092  F08A         	movff	??___fladd+2,___fladd@b+2
  4489  000952  C093  F08B         	movff	??___fladd+3,___fladd@b+3
  4490  000956  2996               	incf	___fladd@bexp& (0+255),w,b
  4491  000958  A4D8               	btfss	status,2,c
  4492                           
  4493                           ; BSR set to: 0
  4494  00095A  2B96               	incf	___fladd@bexp& (0+255),f,b
  4495  00095C                     l2591:
  4496                           
  4497                           ; BSR set to: 0
  4498  00095C  2996               	incf	___fladd@bexp& (0+255),w,b
  4499  00095E  B4D8               	btfsc	status,2,c
  4500  000960  D003               	goto	u2560
  4501                           
  4502                           ; BSR set to: 0
  4503  000962  5196               	movf	___fladd@bexp& (0+255),w,b
  4504  000964  A4D8               	btfss	status,2,c
  4505  000966  D00D               	goto	l2599
  4506  000968                     u2560:
  4507                           
  4508                           ; BSR set to: 0
  4509  000968  0E00               	movlw	0
  4510  00096A  6F88               	movwf	___fladd@b& (0+255),b
  4511  00096C  0E00               	movlw	0
  4512  00096E  6F89               	movwf	(___fladd@b+1)& (0+255),b
  4513  000970  0E00               	movlw	0
  4514  000972  6F8A               	movwf	(___fladd@b+2)& (0+255),b
  4515  000974  0E00               	movlw	0
  4516  000976  6F8B               	movwf	(___fladd@b+3)& (0+255),b
  4517  000978  5196               	movf	___fladd@bexp& (0+255),w,b
  4518  00097A  A4D8               	btfss	status,2,c
  4519  00097C  D002               	goto	l2599
  4520                           
  4521                           ; BSR set to: 0
  4522  00097E  0E00               	movlw	0
  4523  000980  6F94               	movwf	___fladd@signs& (0+255),b
  4524  000982                     l2599:
  4525                           
  4526                           ; BSR set to: 0
  4527  000982  A196               	btfss	___fladd@bexp& (0+255),0,b
  4528  000984  D002               	goto	l2603
  4529                           
  4530                           ; BSR set to: 0
  4531  000986  8F8A               	bsf	(___fladd@b+2)& (0+255),7,b
  4532  000988  D001               	goto	l2605
  4533  00098A                     l2603:
  4534                           
  4535                           ; BSR set to: 0
  4536  00098A  9F8A               	bcf	(___fladd@b+2)& (0+255),7,b
  4537  00098C                     l2605:
  4538                           
  4539                           ; BSR set to: 0
  4540  00098C  90D8               	bcf	status,0,c
  4541  00098E  3196               	rrcf	___fladd@bexp& (0+255),w,b
  4542  000990  6F8B               	movwf	(___fladd@b+3)& (0+255),b
  4543                           
  4544                           ; BSR set to: 0
  4545  000992  BF94               	btfsc	___fladd@signs& (0+255),7,b
  4546                           
  4547                           ; BSR set to: 0
  4548  000994  8F8B               	bsf	(___fladd@b+3)& (0+255),7,b
  4549                           
  4550                           ; BSR set to: 0
  4551  000996  C088  F088         	movff	___fladd@b,?___fladd
  4552  00099A  C089  F089         	movff	___fladd@b+1,?___fladd+1
  4553  00099E  C08A  F08A         	movff	___fladd@b+2,?___fladd+2
  4554  0009A2  C08B  F08B         	movff	___fladd@b+3,?___fladd+3
  4555                           
  4556                           ; BSR set to: 0
  4557  0009A6  0012               	return		;funcret
  4558  0009A8                     __end_of___fladd:
  4559                           	opt callstack 0
  4560                           
  4561 ;; *************** function _SetLine *****************
  4562 ;; Defined at:
  4563 ;;		line 107 in file "LCDIO.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  line            1    wreg     unsigned char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  line            1    5[BANK0 ] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4577 ;;      Params:         0       0       0       0
  4578 ;;      Locals:         0       1       0       0
  4579 ;;      Temps:          0       0       0       0
  4580 ;;      Totals:         0       1       0       0
  4581 ;;Total ram usage:        1 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:   10
  4584 ;; This function calls:
  4585 ;;		_SendLCD
  4586 ;; This function is called by:
  4587 ;;		_main
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text20
  4592  001948                     __ptext20:
  4593                           	opt callstack 0
  4594  001948                     _SetLine:
  4595                           	opt callstack 20
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;incstack = 0
  4599                           ;SetLine@line stored from wreg
  4600  001948  0100               	movlb	0	; () banked
  4601  00194A  6F65               	movwf	SetLine@line& (0+255),b
  4602                           
  4603                           ;LCDIO.c: 109:     if(line == 1){
  4604  00194C  0100               	movlb	0	; () banked
  4605  00194E  0565               	decf	SetLine@line& (0+255),w,b
  4606  001950  A4D8               	btfss	status,2,c
  4607  001952  D005               	goto	l3167
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;LCDIO.c: 110:         SendLCD(0x80,0);
  4611  001954  0E00               	movlw	0
  4612  001956  6F63               	movwf	SendLCD@type& (0+255),b
  4613  001958  0E80               	movlw	128
  4614  00195A  EC88  F00C         	call	_SendLCD
  4615  00195E                     l3167:
  4616                           
  4617                           ;LCDIO.c: 113:     if(line == 2){
  4618  00195E  0E02               	movlw	2
  4619  001960  0100               	movlb	0	; () banked
  4620  001962  1965               	xorwf	SetLine@line& (0+255),w,b
  4621  001964  A4D8               	btfss	status,2,c
  4622  001966  D005               	goto	l3171
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;LCDIO.c: 114:         SendLCD(0xC0,0);
  4626  001968  0E00               	movlw	0
  4627  00196A  6F63               	movwf	SendLCD@type& (0+255),b
  4628  00196C  0EC0               	movlw	192
  4629  00196E  EC88  F00C         	call	_SendLCD
  4630  001972                     l3171:
  4631                           
  4632                           ;LCDIO.c: 116:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  4633  001972  0E21               	movlw	33
  4634  001974                     u3667:
  4635  001974  2EE8               	decfsz	wreg,f,c
  4636  001976  D7FE               	bra	u3667
  4637  001978  F000               	nop	
  4638  00197A  0012               	return		;funcret
  4639  00197C                     __end_of_SetLine:
  4640                           	opt callstack 0
  4641                           
  4642 ;; *************** function _LCD_String *****************
  4643 ;; Defined at:
  4644 ;;		line 119 in file "LCDIO.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  string          2    5[BANK0 ] PTR unsigned char 
  4647 ;;		 -> STR_5(16), STR_4(16), STR_3(16), main@temp(32), 
  4648 ;;		 -> STR_1(15), 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4660 ;;      Params:         0       2       0       0
  4661 ;;      Locals:         0       0       0       0
  4662 ;;      Temps:          0       0       0       0
  4663 ;;      Totals:         0       2       0       0
  4664 ;;Total ram usage:        2 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:   10
  4667 ;; This function calls:
  4668 ;;		_SendLCD
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text21
  4675  00176C                     __ptext21:
  4676                           	opt callstack 0
  4677  00176C                     _LCD_String:
  4678                           	opt callstack 20
  4679                           
  4680                           ;LCDIO.c: 121: while(*string != 0){
  4681                           
  4682                           ;incstack = 0
  4683  00176C  D01C               	goto	l3181
  4684  00176E                     l3175:
  4685                           
  4686                           ;LCDIO.c: 124: SendLCD(*string++,1);
  4687  00176E  0E01               	movlw	1
  4688  001770  0100               	movlb	0	; () banked
  4689  001772  6F63               	movwf	SendLCD@type& (0+255),b
  4690  001774  C065  FFF6         	movff	LCD_String@string,tblptrl
  4691  001778  C066  FFF7         	movff	LCD_String@string+1,tblptrh
  4692  00177C  6AF8               	clrf	tblptru,c
  4693  00177E  0E02               	movlw	(high __ramtop+-1)
  4694  001780  64F7               	cpfsgt	tblptrh,c
  4695  001782  D003               	bra	u3367
  4696  001784  0008               	tblrd		*
  4697  001786  50F5               	movf	tablat,w,c
  4698  001788  D005               	bra	u3360
  4699  00178A                     u3367:
  4700  00178A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4701  00178E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4702  001792  50EF               	movf	indf0,w,c
  4703  001794                     u3360:
  4704  001794  EC88  F00C         	call	_SendLCD
  4705  001798  0100               	movlb	0	; () banked
  4706  00179A  4B65               	infsnz	LCD_String@string& (0+255),f,b
  4707  00179C  2B66               	incf	(LCD_String@string+1)& (0+255),f,b
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;LCDIO.c: 125:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  4711  00179E  0E21               	movlw	33
  4712  0017A0                     u3677:
  4713  0017A0  2EE8               	decfsz	wreg,f,c
  4714  0017A2  D7FE               	bra	u3677
  4715  0017A4  F000               	nop	
  4716  0017A6                     l3181:
  4717                           
  4718                           ;LCDIO.c: 121: while(*string != 0){
  4719  0017A6  C065  FFF6         	movff	LCD_String@string,tblptrl
  4720  0017AA  C066  FFF7         	movff	LCD_String@string+1,tblptrh
  4721  0017AE  6AF8               	clrf	tblptru,c
  4722  0017B0  0E02               	movlw	(high __ramtop+-1)
  4723  0017B2  64F7               	cpfsgt	tblptrh,c
  4724  0017B4  D003               	bra	u3377
  4725  0017B6  0008               	tblrd		*
  4726  0017B8  50F5               	movf	tablat,w,c
  4727  0017BA  D005               	bra	u3370
  4728  0017BC                     u3377:
  4729  0017BC  CFF6 FFE9          	movff	tblptrl,fsr0l
  4730  0017C0  CFF7 FFEA          	movff	tblptrh,fsr0h
  4731  0017C4  50EF               	movf	indf0,w,c
  4732  0017C6                     u3370:
  4733  0017C6  0900               	iorlw	0
  4734  0017C8  B4D8               	btfsc	status,2,c
  4735  0017CA  0012               	return	
  4736  0017CC  D7D0               	goto	l3175
  4737  0017CE                     __end_of_LCD_String:
  4738                           	opt callstack 0
  4739                           
  4740 ;; *************** function _ClearLCD *****************
  4741 ;; Defined at:
  4742 ;;		line 137 in file "LCDIO.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0, cstack
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4756 ;;      Params:         0       0       0       0
  4757 ;;      Locals:         0       0       0       0
  4758 ;;      Temps:          0       1       0       0
  4759 ;;      Totals:         0       1       0       0
  4760 ;;Total ram usage:        1 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:   10
  4763 ;; This function calls:
  4764 ;;		_SendLCD
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text22
  4771  001A3A                     __ptext22:
  4772                           	opt callstack 0
  4773  001A3A                     _ClearLCD:
  4774                           	opt callstack 20
  4775                           
  4776                           ;LCDIO.c: 138:     SendLCD(0b00000001,0);
  4777                           
  4778                           ;incstack = 0
  4779  001A3A  0E00               	movlw	0
  4780  001A3C  0100               	movlb	0	; () banked
  4781  001A3E  6F63               	movwf	SendLCD@type& (0+255),b
  4782  001A40  0E01               	movlw	1
  4783  001A42  EC88  F00C         	call	_SendLCD
  4784                           
  4785                           ;LCDIO.c: 139:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4786  001A46  0E0D               	movlw	13
  4787  001A48  0100               	movlb	0	; () banked
  4788  001A4A  6F65               	movwf	??_ClearLCD& (0+255),b
  4789  001A4C  0EFB               	movlw	251
  4790  001A4E                     u3687:
  4791  001A4E  2EE8               	decfsz	wreg,f,c
  4792  001A50  D7FE               	bra	u3687
  4793  001A52  2F65               	decfsz	??_ClearLCD& (0+255),f,b
  4794  001A54  D7FC               	bra	u3687
  4795  001A56  D000               	nop2	
  4796  001A58  0012               	return		;funcret
  4797  001A5A                     __end_of_ClearLCD:
  4798                           	opt callstack 0
  4799                           
  4800 ;; *************** function _SendLCD *****************
  4801 ;; Defined at:
  4802 ;;		line 44 in file "LCDIO.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  Byte            1    wreg     unsigned char 
  4805 ;;  type            1    3[BANK0 ] unsigned char 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  Byte            1    4[BANK0 ] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4817 ;;      Params:         0       1       0       0
  4818 ;;      Locals:         0       1       0       0
  4819 ;;      Temps:          0       0       0       0
  4820 ;;      Totals:         0       2       0       0
  4821 ;;Total ram usage:        2 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    9
  4824 ;; This function calls:
  4825 ;;		_LCDout
  4826 ;; This function is called by:
  4827 ;;		_init_LCD
  4828 ;;		_SetLine
  4829 ;;		_LCD_String
  4830 ;;		_ClearLCD
  4831 ;;		_ShiftLeft
  4832 ;;		_ShiftRight
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text23
  4837  001910                     __ptext23:
  4838                           	opt callstack 0
  4839  001910                     _SendLCD:
  4840                           	opt callstack 19
  4841                           
  4842                           ;incstack = 0
  4843                           ;SendLCD@Byte stored from wreg
  4844  001910  0100               	movlb	0	; () banked
  4845  001912  6F64               	movwf	SendLCD@Byte& (0+255),b
  4846                           
  4847                           ;LCDIO.c: 47:  LATAbits.LATA7 = type;
  4848  001914  0100               	movlb	0	; () banked
  4849  001916  B163               	btfsc	SendLCD@type& (0+255),0,b
  4850  001918  D002               	bra	u3285
  4851  00191A  9E89               	bcf	3977,7,c	;volatile
  4852  00191C  D001               	bra	u3286
  4853  00191E                     u3285:
  4854  00191E  8E89               	bsf	3977,7,c	;volatile
  4855  001920                     u3286:
  4856                           
  4857                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
  4858  001920  0100               	movlb	0	; () banked
  4859  001922  3964               	swapf	SendLCD@Byte& (0+255),w,b
  4860  001924  0B0F               	andlw	15
  4861  001926  0B0F               	andlw	15
  4862  001928  EC3C  F00B         	call	_LCDout
  4863                           
  4864                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
  4865  00192C  0E06               	movlw	6
  4866  00192E                     u3697:
  4867  00192E  2EE8               	decfsz	wreg,f,c
  4868  001930  D7FE               	bra	u3697
  4869  001932  D000               	nop2	
  4870                           
  4871                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
  4872  001934  0100               	movlb	0	; () banked
  4873  001936  5164               	movf	SendLCD@Byte& (0+255),w,b
  4874  001938  0B0F               	andlw	15
  4875  00193A  EC3C  F00B         	call	_LCDout
  4876                           
  4877                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  4878  00193E  0E21               	movlw	33
  4879  001940                     u3707:
  4880  001940  2EE8               	decfsz	wreg,f,c
  4881  001942  D7FE               	bra	u3707
  4882  001944  F000               	nop	
  4883  001946  0012               	return		;funcret
  4884  001948                     __end_of_SendLCD:
  4885                           	opt callstack 0
  4886                           
  4887 ;; *************** function _LCDout *****************
  4888 ;; Defined at:
  4889 ;;		line 31 in file "LCDIO.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  number          1    wreg     unsigned char 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  number          1    2[BANK0 ] unsigned char 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      void 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0, cstack
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4903 ;;      Params:         0       0       0       0
  4904 ;;      Locals:         0       1       0       0
  4905 ;;      Temps:          0       1       0       0
  4906 ;;      Totals:         0       2       0       0
  4907 ;;Total ram usage:        2 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    8
  4910 ;; This function calls:
  4911 ;;		_E_TOG
  4912 ;; This function is called by:
  4913 ;;		_SendLCD
  4914 ;;		_init_LCD
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text24
  4919  001678                     __ptext24:
  4920                           	opt callstack 0
  4921  001678                     _LCDout:
  4922                           	opt callstack 19
  4923                           
  4924                           ;incstack = 0
  4925                           ;LCDout@number stored from wreg
  4926  001678  0100               	movlb	0	; () banked
  4927  00167A  6F62               	movwf	LCDout@number& (0+255),b
  4928                           
  4929                           ;LCDIO.c: 33:  LATCbits.LATC0 = (0b0001 & number);
  4930  00167C  C062  F061         	movff	LCDout@number,??_LCDout
  4931  001680  0E01               	movlw	1
  4932  001682  0100               	movlb	0	; () banked
  4933  001684  1761               	andwf	??_LCDout& (0+255),f,b
  4934  001686  508B               	movf	3979,w,c	;volatile
  4935  001688  1961               	xorwf	??_LCDout& (0+255),w,b
  4936  00168A  0BFE               	andlw	-2
  4937  00168C  1961               	xorwf	??_LCDout& (0+255),w,b
  4938  00168E  6E8B               	movwf	3979,c	;volatile
  4939                           
  4940                           ;LCDIO.c: 34:  LATCbits.LATC3 = (0b0010 & number) >> 1;
  4941  001690  C062  F061         	movff	LCDout@number,??_LCDout
  4942  001694  90D8               	bcf	status,0,c
  4943  001696  3361               	rrcf	??_LCDout& (0+255),f,b
  4944  001698  0E01               	movlw	1
  4945  00169A  1761               	andwf	??_LCDout& (0+255),f,b
  4946  00169C  4761               	rlncf	??_LCDout& (0+255),f,b
  4947  00169E  4761               	rlncf	??_LCDout& (0+255),f,b
  4948  0016A0  4761               	rlncf	??_LCDout& (0+255),f,b
  4949  0016A2  508B               	movf	3979,w,c	;volatile
  4950  0016A4  1961               	xorwf	??_LCDout& (0+255),w,b
  4951  0016A6  0BF7               	andlw	-9
  4952  0016A8  1961               	xorwf	??_LCDout& (0+255),w,b
  4953  0016AA  6E8B               	movwf	3979,c	;volatile
  4954                           
  4955                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
  4956  0016AC  C062  F061         	movff	LCDout@number,??_LCDout
  4957  0016B0  90D8               	bcf	status,0,c
  4958  0016B2  3361               	rrcf	??_LCDout& (0+255),f,b
  4959  0016B4  90D8               	bcf	status,0,c
  4960  0016B6  3361               	rrcf	??_LCDout& (0+255),f,b
  4961  0016B8  0E01               	movlw	1
  4962  0016BA  1761               	andwf	??_LCDout& (0+255),f,b
  4963  0016BC  508C               	movf	3980,w,c	;volatile
  4964  0016BE  1961               	xorwf	??_LCDout& (0+255),w,b
  4965  0016C0  0BFE               	andlw	-2
  4966  0016C2  1961               	xorwf	??_LCDout& (0+255),w,b
  4967  0016C4  6E8C               	movwf	3980,c	;volatile
  4968                           
  4969                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
  4970  0016C6  C062  F061         	movff	LCDout@number,??_LCDout
  4971  0016CA  90D8               	bcf	status,0,c
  4972  0016CC  3361               	rrcf	??_LCDout& (0+255),f,b
  4973  0016CE  90D8               	bcf	status,0,c
  4974  0016D0  3361               	rrcf	??_LCDout& (0+255),f,b
  4975  0016D2  90D8               	bcf	status,0,c
  4976  0016D4  3361               	rrcf	??_LCDout& (0+255),f,b
  4977  0016D6  0E01               	movlw	1
  4978  0016D8  1761               	andwf	??_LCDout& (0+255),f,b
  4979  0016DA  4761               	rlncf	??_LCDout& (0+255),f,b
  4980  0016DC  508C               	movf	3980,w,c	;volatile
  4981  0016DE  1961               	xorwf	??_LCDout& (0+255),w,b
  4982  0016E0  0BFD               	andlw	-3
  4983  0016E2  1961               	xorwf	??_LCDout& (0+255),w,b
  4984  0016E4  6E8C               	movwf	3980,c	;volatile
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;LCDIO.c: 39:  E_TOG();
  4988  0016E6  EC65  F00D         	call	_E_TOG	;wreg free
  4989                           
  4990                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
  4991  0016EA  0E03               	movlw	3
  4992  0016EC                     u3717:
  4993  0016EC  2EE8               	decfsz	wreg,f,c
  4994  0016EE  D7FE               	bra	u3717
  4995  0016F0  F000               	nop	
  4996  0016F2  0012               	return		;funcret
  4997  0016F4                     __end_of_LCDout:
  4998                           	opt callstack 0
  4999                           
  5000 ;; *************** function _E_TOG *****************
  5001 ;; Defined at:
  5002 ;;		line 23 in file "LCDIO.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5016 ;;      Params:         0       0       0       0
  5017 ;;      Locals:         0       0       0       0
  5018 ;;      Temps:          0       0       0       0
  5019 ;;      Totals:         0       0       0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    7
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_LCDout
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text25
  5031  001ACA                     __ptext25:
  5032                           	opt callstack 0
  5033  001ACA                     _E_TOG:
  5034                           	opt callstack 19
  5035                           
  5036                           ;LCDIO.c: 25: LATAbits.LATA6 = 1;
  5037                           
  5038                           ;incstack = 0
  5039  001ACA  8C89               	bsf	3977,6,c	;volatile
  5040                           
  5041                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
  5042  001ACC  0E03               	movlw	3
  5043  001ACE                     u3727:
  5044  001ACE  2EE8               	decfsz	wreg,f,c
  5045  001AD0  D7FE               	bra	u3727
  5046  001AD2  F000               	nop	
  5047                           
  5048                           ;LCDIO.c: 27: LATAbits.LATA6 = 0;
  5049  001AD4  9C89               	bcf	3977,6,c	;volatile
  5050  001AD6  0012               	return		;funcret
  5051  001AD8                     __end_of_E_TOG:
  5052                           	opt callstack 0
  5053                           
  5054 ;; *************** function _InterruptHandlerLow *****************
  5055 ;; Defined at:
  5056 ;;		line 84 in file "main.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		None
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5070 ;;      Params:         0       0       0       0
  5071 ;;      Locals:         0       0       0       0
  5072 ;;      Temps:          0       1       0       0
  5073 ;;      Totals:         0       1       0       0
  5074 ;;Total ram usage:        1 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    6
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		Interrupt level 1
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	intcodelo
  5085  000018                     __pintcodelo:
  5086                           	opt callstack 0
  5087  000018                     _InterruptHandlerLow:
  5088                           	opt callstack 16
  5089                           
  5090                           ;incstack = 0
  5091  000018  8039               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5092  00001A  CFE0 F060          	movff	bsr,??_InterruptHandlerLow
  5093  00001E  C060  FFE0         	movff	??_InterruptHandlerLow,bsr
  5094  000022  9039               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5095  000024  0010               	retfie	
  5096  000026                     __end_of_InterruptHandlerLow:
  5097                           	opt callstack 0
  5098                           
  5099 ;; *************** function _InterruptHandlerHigh *****************
  5100 ;; Defined at:
  5101 ;;		line 52 in file "main.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  throwaway       1    0        unsigned char 
  5106 ;;  RFID_flag       1   41[COMRAM] unsigned char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      void 
  5109 ;; Registers used:
  5110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5116 ;;      Params:         0       0       0       0
  5117 ;;      Locals:         2       0       0       0
  5118 ;;      Temps:         10       0       0       0
  5119 ;;      Totals:        12       0       0       0
  5120 ;;Total ram usage:       12 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    5
  5123 ;; This function calls:
  5124 ;;		_check_RFID
  5125 ;;		_processRFID
  5126 ;; This function is called by:
  5127 ;;		Interrupt level 2
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	intcode
  5132  000008                     __pintcode:
  5133                           	opt callstack 0
  5134  000008                     _InterruptHandlerHigh:
  5135                           	opt callstack 16
  5136                           
  5137                           ;incstack = 0
  5138  000008  8239               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5139  00000A  EFB3  F00A         	goto	int_func
  5140                           
  5141                           	psect	intcode_body
  5142  001566                     __pintcode_body:
  5143                           	opt callstack 16
  5144  001566                     int_func:
  5145                           	opt callstack 16
  5146  001566  CFE9 F01F          	movff	fsr0l,??_InterruptHandlerHigh
  5147  00156A  CFEA F020          	movff	fsr0h,??_InterruptHandlerHigh+1
  5148  00156E  CFE1 F021          	movff	fsr1l,??_InterruptHandlerHigh+2
  5149  001572  CFE2 F022          	movff	fsr1h,??_InterruptHandlerHigh+3
  5150  001576  CFD9 F023          	movff	fsr2l,??_InterruptHandlerHigh+4
  5151  00157A  CFDA F024          	movff	fsr2h,??_InterruptHandlerHigh+5
  5152  00157E  CFF6 F025          	movff	tblptrl,??_InterruptHandlerHigh+6
  5153  001582  CFF7 F026          	movff	tblptrh,??_InterruptHandlerHigh+7
  5154  001586  CFF8 F027          	movff	tblptru,??_InterruptHandlerHigh+8
  5155  00158A  CFF5 F028          	movff	tablat,??_InterruptHandlerHigh+9
  5156                           
  5157                           ;main.c: 56:     if((PIR1bits.RCIF) && (robot_mode == 0))
  5158  00158E  AA9E               	btfss	3998,5,c	;volatile
  5159  001590  D018               	goto	i2l53
  5160  001592  502C               	movf	_robot_mode,w,c	;volatile
  5161  001594  A4D8               	btfss	status,2,c
  5162  001596  D015               	goto	i2l53
  5163                           
  5164                           ;main.c: 57:     {;main.c: 61:         static char RFIDbuf[12];;main.c: 65:         char
      +                           RFID_flag = processRFID(RFIDbuf, RCREG);
  5165  001598  0E2D               	movlw	low InterruptHandlerHigh@RFIDbuf
  5166  00159A  6E06               	movwf	processRFID@RFIDbuf,c
  5167  00159C  0E00               	movlw	high InterruptHandlerHigh@RFIDbuf
  5168  00159E  6E07               	movwf	processRFID@RFIDbuf+1,c
  5169  0015A0  CFAE F008          	movff	4014,processRFID@latestChar	;volatile
  5170  0015A4  ECF8  F00A         	call	_processRFID	;wreg free
  5171  0015A8  6E2A               	movwf	InterruptHandlerHigh@RFID_flag,c
  5172                           
  5173                           ;main.c: 69:         if(RFID_flag == 1)
  5174  0015AA  042A               	decf	InterruptHandlerHigh@RFID_flag,w,c
  5175  0015AC  A4D8               	btfss	status,2,c
  5176  0015AE  D00A               	goto	i2l58
  5177                           
  5178                           ;main.c: 70:         {;main.c: 71:             check_RFID(RFIDbuf);
  5179  0015B0  0E2D               	movlw	low InterruptHandlerHigh@RFIDbuf
  5180  0015B2  6E07               	movwf	check_RFID@dataBuf,c
  5181  0015B4  0E00               	movlw	high InterruptHandlerHigh@RFIDbuf
  5182  0015B6  6E08               	movwf	check_RFID@dataBuf+1,c
  5183  0015B8  EC3E  F007         	call	_check_RFID	;wreg free
  5184                           
  5185                           ;main.c: 72:             robot_mode = 1;
  5186  0015BC  0E01               	movlw	1
  5187  0015BE  6E2C               	movwf	_robot_mode,c	;volatile
  5188  0015C0  D001               	goto	i2l58
  5189  0015C2                     i2l53:
  5190  0015C2  50AE               	movf	4014,w,c	;volatile
  5191  0015C4                     i2l58:
  5192  0015C4  C028  FFF5         	movff	??_InterruptHandlerHigh+9,tablat
  5193  0015C8  C027  FFF8         	movff	??_InterruptHandlerHigh+8,tblptru
  5194  0015CC  C026  FFF7         	movff	??_InterruptHandlerHigh+7,tblptrh
  5195  0015D0  C025  FFF6         	movff	??_InterruptHandlerHigh+6,tblptrl
  5196  0015D4  C024  FFDA         	movff	??_InterruptHandlerHigh+5,fsr2h
  5197  0015D8  C023  FFD9         	movff	??_InterruptHandlerHigh+4,fsr2l
  5198  0015DC  C022  FFE2         	movff	??_InterruptHandlerHigh+3,fsr1h
  5199  0015E0  C021  FFE1         	movff	??_InterruptHandlerHigh+2,fsr1l
  5200  0015E4  C020  FFEA         	movff	??_InterruptHandlerHigh+1,fsr0h
  5201  0015E8  C01F  FFE9         	movff	??_InterruptHandlerHigh,fsr0l
  5202  0015EC  9239               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5203  0015EE  0011               	retfie		f
  5204  0015F0                     __end_of_InterruptHandlerHigh:
  5205                           	opt callstack 0
  5206                           
  5207 ;; *************** function _processRFID *****************
  5208 ;; Defined at:
  5209 ;;		line 34 in file "RFID.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  RFIDbuf         2    5[COMRAM] PTR unsigned char 
  5212 ;;		 -> InterruptHandlerHigh@RFIDbuf(12), 
  5213 ;;  latestChar      1    7[COMRAM] unsigned char 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  i               1   10[COMRAM] unsigned char 
  5216 ;;  i               2    8[COMRAM] int 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      unsigned char 
  5219 ;; Registers used:
  5220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5226 ;;      Params:         3       0       0       0
  5227 ;;      Locals:         3       0       0       0
  5228 ;;      Temps:          0       0       0       0
  5229 ;;      Totals:         6       0       0       0
  5230 ;;Total ram usage:        6 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    4
  5233 ;; This function calls:
  5234 ;;		i2_ClearLCD
  5235 ;;		i2_SendLCD
  5236 ;;		i2_SetLine
  5237 ;; This function is called by:
  5238 ;;		_InterruptHandlerHigh
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text28
  5243  0015F0                     __ptext28:
  5244                           	opt callstack 0
  5245  0015F0                     _processRFID:
  5246                           	opt callstack 16
  5247                           
  5248                           ;RFID.c: 34: char processRFID(char RFIDbuf[], char latestChar);RFID.c: 35: {;RFID.c: 39:
      +                               static char position_in_buf;;RFID.c: 42:     if(latestChar == 0x03)
  5249                           
  5250                           ;incstack = 0
  5251  0015F0  0E03               	movlw	3
  5252  0015F2  1808               	xorwf	processRFID@latestChar,w,c
  5253  0015F4  A4D8               	btfss	status,2,c
  5254  0015F6  D020               	goto	i2l2317
  5255                           
  5256                           ;RFID.c: 43:     {;RFID.c: 44:         ClearLCD();
  5257  0015F8  EC58  F00D         	call	i2_ClearLCD	;wreg free
  5258                           
  5259                           ;RFID.c: 45:         SetLine(1);
  5260  0015FC  0E01               	movlw	1
  5261  0015FE  EC06  F00D         	call	i2_SetLine
  5262                           
  5263                           ;RFID.c: 46:         for(int i=0;i<10;i++)
  5264  001602  0E00               	movlw	0
  5265  001604  6E0A               	movwf	processRFID@i+1,c
  5266  001606  0E00               	movlw	0
  5267  001608  6E09               	movwf	processRFID@i,c
  5268  00160A                     i2l2305:
  5269                           
  5270                           ;RFID.c: 47:         {;RFID.c: 48:             SendLCD(RFIDbuf[i],1);
  5271  00160A  0E01               	movlw	1
  5272  00160C  6E03               	movwf	i2SendLCD@type,c
  5273  00160E  5009               	movf	processRFID@i,w,c
  5274  001610  2406               	addwf	processRFID@RFIDbuf,w,c
  5275  001612  6ED9               	movwf	fsr2l,c
  5276  001614  500A               	movf	processRFID@i+1,w,c
  5277  001616  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  5278  001618  6EDA               	movwf	fsr2h,c
  5279  00161A  50DF               	movf	indf2,w,c
  5280  00161C  ECD7  F00C         	call	i2_SendLCD
  5281                           
  5282                           ;RFID.c: 49:         }
  5283  001620  4A09               	infsnz	processRFID@i,f,c
  5284  001622  2A0A               	incf	processRFID@i+1,f,c
  5285  001624  BE0A               	btfsc	processRFID@i+1,7,c
  5286  001626  D7F1               	goto	i2l2305
  5287  001628  500A               	movf	processRFID@i+1,w,c
  5288  00162A  E104               	bnz	i2u193_40
  5289  00162C  0E0A               	movlw	10
  5290  00162E  5C09               	subwf	processRFID@i,w,c
  5291  001630  A0D8               	btfss	status,0,c
  5292  001632  D7EB               	goto	i2l2305
  5293  001634                     i2u193_40:
  5294                           
  5295                           ;RFID.c: 51:         return 1;
  5296  001634  0E01               	movlw	1
  5297  001636  0012               	return	
  5298  001638                     i2l2317:
  5299                           
  5300                           ;RFID.c: 54:     {;RFID.c: 57:        if(latestChar == 0x02)
  5301  001638  0E02               	movlw	2
  5302  00163A  1808               	xorwf	processRFID@latestChar,w,c
  5303  00163C  A4D8               	btfss	status,2,c
  5304  00163E  D012               	goto	i2l2337
  5305                           
  5306                           ;RFID.c: 58:         {;RFID.c: 59:            position_in_buf = 0;
  5307  001640  0E00               	movlw	0
  5308  001642  6E2B               	movwf	processRFID@position_in_buf,c
  5309                           
  5310                           ;RFID.c: 60:            for(char i=0 ;i<12 ;i++)
  5311  001644  0E00               	movlw	0
  5312  001646  6E0B               	movwf	processRFID@i_1071,c
  5313  001648                     i2l2325:
  5314                           
  5315                           ;RFID.c: 61:            {;RFID.c: 62:                RFIDbuf[i] = 0;
  5316  001648  500B               	movf	processRFID@i_1071,w,c
  5317  00164A  2406               	addwf	processRFID@RFIDbuf,w,c
  5318  00164C  6ED9               	movwf	fsr2l,c
  5319  00164E  0E00               	movlw	0
  5320  001650  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  5321  001652  6EDA               	movwf	fsr2h,c
  5322  001654  0E00               	movlw	0
  5323  001656  6EDF               	movwf	indf2,c
  5324                           
  5325                           ;RFID.c: 63:            }
  5326  001658  2A0B               	incf	processRFID@i_1071,f,c
  5327  00165A  0E0B               	movlw	11
  5328  00165C  640B               	cpfsgt	processRFID@i_1071,c
  5329  00165E  D7F4               	goto	i2l2325
  5330  001660                     i2u195_40:
  5331                           
  5332                           ;RFID.c: 65:            return 0;
  5333  001660  0E00               	movlw	0
  5334  001662  0012               	return	
  5335  001664                     i2l2337:
  5336                           
  5337                           ;RFID.c: 69:         {;RFID.c: 70:             RFIDbuf[position_in_buf] = latestChar;
  5338  001664  502B               	movf	processRFID@position_in_buf,w,c
  5339  001666  2406               	addwf	processRFID@RFIDbuf,w,c
  5340  001668  6ED9               	movwf	fsr2l,c
  5341  00166A  0E00               	movlw	0
  5342  00166C  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  5343  00166E  6EDA               	movwf	fsr2h,c
  5344  001670  C008  FFDF         	movff	processRFID@latestChar,indf2
  5345                           
  5346                           ;RFID.c: 71:             position_in_buf++;
  5347  001674  2A2B               	incf	processRFID@position_in_buf,f,c
  5348  001676  D7F4               	goto	i2u195_40
  5349  001678                     __end_of_processRFID:
  5350                           	opt callstack 0
  5351                           
  5352 ;; *************** function i2_ClearLCD *****************
  5353 ;; Defined at:
  5354 ;;		line 137 in file "LCDIO.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5368 ;;      Params:         0       0       0       0
  5369 ;;      Locals:         0       0       0       0
  5370 ;;      Temps:          1       0       0       0
  5371 ;;      Totals:         1       0       0       0
  5372 ;;Total ram usage:        1 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    3
  5375 ;; This function calls:
  5376 ;;		i2_SendLCD
  5377 ;; This function is called by:
  5378 ;;		_processRFID
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text29
  5383  001AB0                     __ptext29:
  5384                           	opt callstack 0
  5385  001AB0                     i2_ClearLCD:
  5386                           	opt callstack 16
  5387                           
  5388                           ;LCDIO.c: 138:     SendLCD(0b00000001,0);
  5389                           
  5390                           ;incstack = 0
  5391  001AB0  0E00               	movlw	0
  5392  001AB2  6E03               	movwf	i2SendLCD@type,c
  5393  001AB4  0E01               	movlw	1
  5394  001AB6  ECD7  F00C         	call	i2_SendLCD
  5395                           
  5396                           ;LCDIO.c: 139:     _delay((unsigned long)((5)*(8000000/4000.0)));
  5397  001ABA  0E0D               	movlw	13
  5398  001ABC  6E05               	movwf	??i2_ClearLCD& (0+255),c
  5399  001ABE  0EFC               	movlw	252
  5400  001AC0                     i2u373_47:
  5401  001AC0  2EE8               	decfsz	wreg,f,c
  5402  001AC2  D7FE               	bra	i2u373_47
  5403  001AC4  2E05               	decfsz	??i2_ClearLCD& (0+255),f,c
  5404  001AC6  D7FC               	bra	i2u373_47
  5405  001AC8  0012               	return		;funcret
  5406  001ACA                     __end_ofi2_ClearLCD:
  5407                           	opt callstack 0
  5408                           
  5409 ;; *************** function _check_RFID *****************
  5410 ;; Defined at:
  5411 ;;		line 79 in file "RFID.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  dataBuf         2    6[COMRAM] PTR unsigned char 
  5414 ;;		 -> InterruptHandlerHigh@RFIDbuf(12), 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  i               2   28[COMRAM] int 
  5417 ;;  hexBuf         12   10[COMRAM] unsigned char [12]
  5418 ;;  checksum        1   27[COMRAM] unsigned char 
  5419 ;;  byte5           1   26[COMRAM] unsigned char 
  5420 ;;  byte4           1   25[COMRAM] unsigned char 
  5421 ;;  byte3           1   24[COMRAM] unsigned char 
  5422 ;;  byte2           1   23[COMRAM] unsigned char 
  5423 ;;  byte1           1   22[COMRAM] unsigned char 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  1    wreg      void 
  5426 ;; Registers used:
  5427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5433 ;;      Params:         2       0       0       0
  5434 ;;      Locals:        20       0       0       0
  5435 ;;      Temps:          2       0       0       0
  5436 ;;      Totals:        24       0       0       0
  5437 ;;Total ram usage:       24 bytes
  5438 ;; Hardware stack levels used:    1
  5439 ;; Hardware stack levels required when called:    4
  5440 ;; This function calls:
  5441 ;;		i2_LCD_String
  5442 ;;		i2_SetLine
  5443 ;; This function is called by:
  5444 ;;		_InterruptHandlerHigh
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text30
  5449  000E7C                     __ptext30:
  5450                           	opt callstack 0
  5451  000E7C                     _check_RFID:
  5452                           	opt callstack 16
  5453                           
  5454                           ;RFID.c: 79: void check_RFID(char dataBuf[]);RFID.c: 80: {;RFID.c: 82:     char hexBuf[1
      +                          2];;RFID.c: 84:     for(int i=0; i<12;i++)
  5455                           
  5456                           ;incstack = 0
  5457  000E7C  0E00               	movlw	0
  5458  000E7E  6E1E               	movwf	check_RFID@i+1,c
  5459  000E80  0E00               	movlw	0
  5460  000E82  6E1D               	movwf	check_RFID@i,c
  5461  000E84                     i2l2351:
  5462                           
  5463                           ;RFID.c: 85:     {;RFID.c: 86:         if ((dataBuf[i] >= '0') && (dataBuf[i] <= '9'))
  5464  000E84  501D               	movf	check_RFID@i,w,c
  5465  000E86  2407               	addwf	check_RFID@dataBuf,w,c
  5466  000E88  6ED9               	movwf	fsr2l,c
  5467  000E8A  501E               	movf	check_RFID@i+1,w,c
  5468  000E8C  2008               	addwfc	check_RFID@dataBuf+1,w,c
  5469  000E8E  6EDA               	movwf	fsr2h,c
  5470  000E90  0E2F               	movlw	47
  5471  000E92  64DF               	cpfsgt	indf2,c
  5472  000E94  D018               	goto	i2l2357
  5473  000E96  501D               	movf	check_RFID@i,w,c
  5474  000E98  2407               	addwf	check_RFID@dataBuf,w,c
  5475  000E9A  6ED9               	movwf	fsr2l,c
  5476  000E9C  501E               	movf	check_RFID@i+1,w,c
  5477  000E9E  2008               	addwfc	check_RFID@dataBuf+1,w,c
  5478  000EA0  6EDA               	movwf	fsr2h,c
  5479  000EA2  0E3A               	movlw	58
  5480  000EA4  60DF               	cpfslt	indf2,c
  5481  000EA6  D00F               	goto	i2l2357
  5482                           
  5483                           ;RFID.c: 87:         {;RFID.c: 88:             hexBuf[i] = dataBuf[i] - '0';
  5484  000EA8  0E0B               	movlw	low check_RFID@hexBuf
  5485  000EAA  241D               	addwf	check_RFID@i,w,c
  5486  000EAC  6ED9               	movwf	fsr2l,c
  5487  000EAE  0E00               	movlw	high check_RFID@hexBuf
  5488  000EB0  201E               	addwfc	check_RFID@i+1,w,c
  5489  000EB2  6EDA               	movwf	fsr2h,c
  5490  000EB4  501D               	movf	check_RFID@i,w,c
  5491  000EB6  2407               	addwf	check_RFID@dataBuf,w,c
  5492  000EB8  6EE1               	movwf	fsr1l,c
  5493  000EBA  501E               	movf	check_RFID@i+1,w,c
  5494  000EBC  2008               	addwfc	check_RFID@dataBuf+1,w,c
  5495  000EBE  6EE2               	movwf	fsr1h,c
  5496  000EC0  50E7               	movf	indf1,w,c
  5497  000EC2  0FD0               	addlw	208
  5498  000EC4  D020               	goto	L5
  5499  000EC6                     i2l2357:
  5500  000EC6  501D               	movf	check_RFID@i,w,c
  5501  000EC8  2407               	addwf	check_RFID@dataBuf,w,c
  5502  000ECA  6ED9               	movwf	fsr2l,c
  5503  000ECC  501E               	movf	check_RFID@i+1,w,c
  5504  000ECE  2008               	addwfc	check_RFID@dataBuf+1,w,c
  5505  000ED0  6EDA               	movwf	fsr2h,c
  5506  000ED2  0E40               	movlw	64
  5507  000ED4  64DF               	cpfsgt	indf2,c
  5508  000ED6  D018               	goto	i2l2363
  5509  000ED8  501D               	movf	check_RFID@i,w,c
  5510  000EDA  2407               	addwf	check_RFID@dataBuf,w,c
  5511  000EDC  6ED9               	movwf	fsr2l,c
  5512  000EDE  501E               	movf	check_RFID@i+1,w,c
  5513  000EE0  2008               	addwfc	check_RFID@dataBuf+1,w,c
  5514  000EE2  6EDA               	movwf	fsr2h,c
  5515  000EE4  0E47               	movlw	71
  5516  000EE6  60DF               	cpfslt	indf2,c
  5517  000EE8  D00F               	goto	i2l2363
  5518                           
  5519                           ;RFID.c: 90:         {;RFID.c: 91:             hexBuf[i] = 10 + dataBuf[i] - 'A';
  5520  000EEA  0E0B               	movlw	low check_RFID@hexBuf
  5521  000EEC  241D               	addwf	check_RFID@i,w,c
  5522  000EEE  6ED9               	movwf	fsr2l,c
  5523  000EF0  0E00               	movlw	high check_RFID@hexBuf
  5524  000EF2  201E               	addwfc	check_RFID@i+1,w,c
  5525  000EF4  6EDA               	movwf	fsr2h,c
  5526  000EF6  501D               	movf	check_RFID@i,w,c
  5527  000EF8  2407               	addwf	check_RFID@dataBuf,w,c
  5528  000EFA  6EE1               	movwf	fsr1l,c
  5529  000EFC  501E               	movf	check_RFID@i+1,w,c
  5530  000EFE  2008               	addwfc	check_RFID@dataBuf+1,w,c
  5531  000F00  6EE2               	movwf	fsr1h,c
  5532  000F02  50E7               	movf	indf1,w,c
  5533  000F04  0FC9               	addlw	201
  5534  000F06                     L5:
  5535  000F06  6EDF               	movwf	indf2,c
  5536  000F08                     i2l2363:
  5537                           
  5538                           ;RFID.c: 93:     }
  5539  000F08  4A1D               	infsnz	check_RFID@i,f,c
  5540  000F0A  2A1E               	incf	check_RFID@i+1,f,c
  5541  000F0C  BE1E               	btfsc	check_RFID@i+1,7,c
  5542  000F0E  D7BA               	goto	i2l2351
  5543  000F10  501E               	movf	check_RFID@i+1,w,c
  5544  000F12  E104               	bnz	i2u200_40
  5545  000F14  0E0C               	movlw	12
  5546  000F16  5C1D               	subwf	check_RFID@i,w,c
  5547  000F18  A0D8               	btfss	status,0,c
  5548  000F1A  D7B4               	goto	i2l2351
  5549  000F1C                     i2u200_40:
  5550                           
  5551                           ;RFID.c: 95:     char byte1 = 0x00 | (hexBuf[0] < 1) | hexBuf[1];
  5552  000F1C  500B               	movf	check_RFID@hexBuf,w,c
  5553  000F1E  A4D8               	btfss	status,2,c
  5554  000F20  D002               	goto	i2u201_40
  5555  000F22  0E01               	movlw	1
  5556  000F24  D001               	goto	i2u202_40
  5557  000F26                     i2u201_40:
  5558  000F26  0E00               	movlw	0
  5559  000F28                     i2u202_40:
  5560  000F28  100C               	iorwf	check_RFID@hexBuf+1,w,c
  5561  000F2A  6E17               	movwf	check_RFID@byte1,c
  5562                           
  5563                           ;RFID.c: 96:     char byte2 = 0x00 | (hexBuf[2] < 1) | hexBuf[3];
  5564  000F2C  500D               	movf	check_RFID@hexBuf+2,w,c
  5565  000F2E  A4D8               	btfss	status,2,c
  5566  000F30  D002               	goto	i2u203_40
  5567  000F32  0E01               	movlw	1
  5568  000F34  D001               	goto	i2u204_40
  5569  000F36                     i2u203_40:
  5570  000F36  0E00               	movlw	0
  5571  000F38                     i2u204_40:
  5572  000F38  100E               	iorwf	check_RFID@hexBuf+3,w,c
  5573  000F3A  6E18               	movwf	check_RFID@byte2,c
  5574                           
  5575                           ;RFID.c: 97:     char byte3 = 0x00 | (hexBuf[4] < 1) | hexBuf[5];
  5576  000F3C  500F               	movf	check_RFID@hexBuf+4,w,c
  5577  000F3E  A4D8               	btfss	status,2,c
  5578  000F40  D002               	goto	i2u205_40
  5579  000F42  0E01               	movlw	1
  5580  000F44  D001               	goto	i2u206_40
  5581  000F46                     i2u205_40:
  5582  000F46  0E00               	movlw	0
  5583  000F48                     i2u206_40:
  5584  000F48  1010               	iorwf	check_RFID@hexBuf+5,w,c
  5585  000F4A  6E19               	movwf	check_RFID@byte3,c
  5586                           
  5587                           ;RFID.c: 98:     char byte4 = 0x00 | (hexBuf[6] < 1) | hexBuf[7];
  5588  000F4C  5011               	movf	check_RFID@hexBuf+6,w,c
  5589  000F4E  A4D8               	btfss	status,2,c
  5590  000F50  D002               	goto	i2u207_40
  5591  000F52  0E01               	movlw	1
  5592  000F54  D001               	goto	i2u208_40
  5593  000F56                     i2u207_40:
  5594  000F56  0E00               	movlw	0
  5595  000F58                     i2u208_40:
  5596  000F58  1012               	iorwf	check_RFID@hexBuf+7,w,c
  5597  000F5A  6E1A               	movwf	check_RFID@byte4,c
  5598                           
  5599                           ;RFID.c: 99:     char byte5 = 0x00 | (hexBuf[8] < 1) | hexBuf[9];
  5600  000F5C  5013               	movf	check_RFID@hexBuf+8,w,c
  5601  000F5E  A4D8               	btfss	status,2,c
  5602  000F60  D002               	goto	i2u209_40
  5603  000F62  0E01               	movlw	1
  5604  000F64  D001               	goto	i2u210_40
  5605  000F66                     i2u209_40:
  5606  000F66  0E00               	movlw	0
  5607  000F68                     i2u210_40:
  5608  000F68  1014               	iorwf	check_RFID@hexBuf+9,w,c
  5609  000F6A  6E1B               	movwf	check_RFID@byte5,c
  5610                           
  5611                           ;RFID.c: 100:     char checksum = 0x00 | (hexBuf[10] < 1) | hexBuf[11];
  5612  000F6C  5015               	movf	check_RFID@hexBuf+10,w,c
  5613  000F6E  A4D8               	btfss	status,2,c
  5614  000F70  D002               	goto	i2u211_40
  5615  000F72  0E01               	movlw	1
  5616  000F74  D001               	goto	i2u212_40
  5617  000F76                     i2u211_40:
  5618  000F76  0E00               	movlw	0
  5619  000F78                     i2u212_40:
  5620  000F78  1016               	iorwf	check_RFID@hexBuf+11,w,c
  5621  000F7A  6E1C               	movwf	check_RFID@checksum,c
  5622                           
  5623                           ;RFID.c: 103:     if(byte1^byte2^byte3^byte4^byte5 == checksum)
  5624  000F7C  5017               	movf	check_RFID@byte1,w,c
  5625  000F7E  1818               	xorwf	check_RFID@byte2,w,c
  5626  000F80  1819               	xorwf	check_RFID@byte3,w,c
  5627  000F82  181A               	xorwf	check_RFID@byte4,w,c
  5628  000F84  6E09               	movwf	??_check_RFID& (0+255),c
  5629  000F86  6A0A               	clrf	(??_check_RFID+1)& (0+255),c
  5630  000F88  501C               	movf	check_RFID@checksum,w,c
  5631  000F8A  181B               	xorwf	check_RFID@byte5,w,c
  5632  000F8C  A4D8               	btfss	status,2,c
  5633  000F8E  D002               	goto	i2u213_40
  5634  000F90  0E01               	movlw	1
  5635  000F92  D001               	goto	i2u214_40
  5636  000F94                     i2u213_40:
  5637  000F94  0E00               	movlw	0
  5638  000F96                     i2u214_40:
  5639  000F96  1A09               	xorwf	??_check_RFID,f,c
  5640  000F98  0E00               	movlw	0
  5641  000F9A  1A0A               	xorwf	??_check_RFID+1,f,c
  5642  000F9C  5009               	movf	??_check_RFID,w,c
  5643  000F9E  100A               	iorwf	??_check_RFID+1,w,c
  5644  000FA0  B4D8               	btfsc	status,2,c
  5645  000FA2  D00A               	goto	i2l2373
  5646                           
  5647                           ;RFID.c: 104:     {;RFID.c: 106:         SetLine(2);
  5648  000FA4  0E02               	movlw	2
  5649  000FA6  EC06  F00D         	call	i2_SetLine
  5650                           
  5651                           ;RFID.c: 107:         LCD_String("CHECKSUM PASSED");
  5652  000FAA  0E11               	movlw	low STR_4
  5653  000FAC  6E05               	movwf	i2LCD_String@string,c
  5654  000FAE  0E03               	movlw	high STR_4
  5655  000FB0  6E06               	movwf	i2LCD_String@string+1,c
  5656  000FB2  ECE7  F00B         	call	i2_LCD_String	;wreg free
  5657                           
  5658                           ;RFID.c: 108:     }
  5659  000FB6  0012               	return	
  5660  000FB8                     i2l2373:
  5661                           
  5662                           ;RFID.c: 111:         SetLine(2);
  5663  000FB8  0E02               	movlw	2
  5664  000FBA  EC06  F00D         	call	i2_SetLine
  5665                           
  5666                           ;RFID.c: 112:         LCD_String("CHECKSUM FAILED");
  5667  000FBE  0E01               	movlw	low STR_5
  5668  000FC0  6E05               	movwf	i2LCD_String@string,c
  5669  000FC2  0E03               	movlw	high STR_5
  5670  000FC4  6E06               	movwf	i2LCD_String@string+1,c
  5671  000FC6  ECE7  F00B         	call	i2_LCD_String	;wreg free
  5672  000FCA  0012               	return		;funcret
  5673  000FCC                     __end_of_check_RFID:
  5674                           	opt callstack 0
  5675                           
  5676 ;; *************** function i2_SetLine *****************
  5677 ;; Defined at:
  5678 ;;		line 107 in file "LCDIO.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  line            1    wreg     unsigned char 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  line            1    4[COMRAM] unsigned char 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5692 ;;      Params:         0       0       0       0
  5693 ;;      Locals:         1       0       0       0
  5694 ;;      Temps:          0       0       0       0
  5695 ;;      Totals:         1       0       0       0
  5696 ;;Total ram usage:        1 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:    3
  5699 ;; This function calls:
  5700 ;;		i2_SendLCD
  5701 ;; This function is called by:
  5702 ;;		_processRFID
  5703 ;;		_check_RFID
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text31
  5708  001A0C                     __ptext31:
  5709                           	opt callstack 0
  5710  001A0C                     i2_SetLine:
  5711                           	opt callstack 16
  5712                           
  5713                           ;incstack = 0
  5714                           ;i2SetLine@line stored from wreg
  5715  001A0C  6E05               	movwf	i2SetLine@line,c
  5716                           
  5717                           ;LCDIO.c: 109:     if(line == 1){
  5718  001A0E  0405               	decf	i2SetLine@line,w,c
  5719  001A10  A4D8               	btfss	status,2,c
  5720  001A12  D005               	goto	i2l2265
  5721                           
  5722                           ;LCDIO.c: 110:         SendLCD(0x80,0);
  5723  001A14  0E00               	movlw	0
  5724  001A16  6E03               	movwf	i2SendLCD@type,c
  5725  001A18  0E80               	movlw	128
  5726  001A1A  ECD7  F00C         	call	i2_SendLCD
  5727  001A1E                     i2l2265:
  5728                           
  5729                           ;LCDIO.c: 113:     if(line == 2){
  5730  001A1E  0E02               	movlw	2
  5731  001A20  1805               	xorwf	i2SetLine@line,w,c
  5732  001A22  A4D8               	btfss	status,2,c
  5733  001A24  D005               	goto	i2l2269
  5734                           
  5735                           ;LCDIO.c: 114:         SendLCD(0xC0,0);
  5736  001A26  0E00               	movlw	0
  5737  001A28  6E03               	movwf	i2SendLCD@type,c
  5738  001A2A  0EC0               	movlw	192
  5739  001A2C  ECD7  F00C         	call	i2_SendLCD
  5740  001A30                     i2l2269:
  5741                           
  5742                           ;LCDIO.c: 116:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  5743  001A30  0E21               	movlw	33
  5744  001A32                     i2u374_47:
  5745  001A32  2EE8               	decfsz	wreg,f,c
  5746  001A34  D7FE               	bra	i2u374_47
  5747  001A36  F000               	nop	
  5748  001A38  0012               	return		;funcret
  5749  001A3A                     __end_ofi2_SetLine:
  5750                           	opt callstack 0
  5751                           
  5752 ;; *************** function i2_LCD_String *****************
  5753 ;; Defined at:
  5754 ;;		line 119 in file "LCDIO.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  string          2    4[COMRAM] PTR unsigned char 
  5757 ;;		 -> STR_5(16), STR_4(16), STR_3(16), main@temp(32), 
  5758 ;;		 -> STR_1(15), 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5770 ;;      Params:         2       0       0       0
  5771 ;;      Locals:         0       0       0       0
  5772 ;;      Temps:          0       0       0       0
  5773 ;;      Totals:         2       0       0       0
  5774 ;;Total ram usage:        2 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    3
  5777 ;; This function calls:
  5778 ;;		i2_SendLCD
  5779 ;; This function is called by:
  5780 ;;		_check_RFID
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text32
  5785  0017CE                     __ptext32:
  5786                           	opt callstack 0
  5787  0017CE                     i2_LCD_String:
  5788                           	opt callstack 16
  5789                           
  5790                           ;LCDIO.c: 121: while(*string != 0){
  5791                           
  5792                           ;incstack = 0
  5793  0017CE  D01A               	goto	i2l2279
  5794  0017D0                     i2l2273:
  5795                           
  5796                           ;LCDIO.c: 124: SendLCD(*string++,1);
  5797  0017D0  0E01               	movlw	1
  5798  0017D2  6E03               	movwf	i2SendLCD@type,c
  5799  0017D4  C005  FFF6         	movff	i2LCD_String@string,tblptrl
  5800  0017D8  C006  FFF7         	movff	i2LCD_String@string+1,tblptrh
  5801  0017DC  6AF8               	clrf	tblptru,c
  5802  0017DE  0E02               	movlw	(high __ramtop+-1)
  5803  0017E0  64F7               	cpfsgt	tblptrh,c
  5804  0017E2  D003               	bra	i2u188_47
  5805  0017E4  0008               	tblrd		*
  5806  0017E6  50F5               	movf	tablat,w,c
  5807  0017E8  D005               	bra	i2u188_40
  5808  0017EA                     i2u188_47:
  5809  0017EA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5810  0017EE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5811  0017F2  50EF               	movf	indf0,w,c
  5812  0017F4                     i2u188_40:
  5813  0017F4  ECD7  F00C         	call	i2_SendLCD
  5814  0017F8  4A05               	infsnz	i2LCD_String@string,f,c
  5815  0017FA  2A06               	incf	i2LCD_String@string+1,f,c
  5816                           
  5817                           ;LCDIO.c: 125:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  5818  0017FC  0E21               	movlw	33
  5819  0017FE                     i2u375_47:
  5820  0017FE  2EE8               	decfsz	wreg,f,c
  5821  001800  D7FE               	bra	i2u375_47
  5822  001802  F000               	nop	
  5823  001804                     i2l2279:
  5824                           
  5825                           ;LCDIO.c: 121: while(*string != 0){
  5826  001804  C005  FFF6         	movff	i2LCD_String@string,tblptrl
  5827  001808  C006  FFF7         	movff	i2LCD_String@string+1,tblptrh
  5828  00180C  6AF8               	clrf	tblptru,c
  5829  00180E  0E02               	movlw	(high __ramtop+-1)
  5830  001810  64F7               	cpfsgt	tblptrh,c
  5831  001812  D003               	bra	i2u189_47
  5832  001814  0008               	tblrd		*
  5833  001816  50F5               	movf	tablat,w,c
  5834  001818  D005               	bra	i2u189_40
  5835  00181A                     i2u189_47:
  5836  00181A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5837  00181E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5838  001822  50EF               	movf	indf0,w,c
  5839  001824                     i2u189_40:
  5840  001824  0900               	iorlw	0
  5841  001826  B4D8               	btfsc	status,2,c
  5842  001828  0012               	return	
  5843  00182A  D7D2               	goto	i2l2273
  5844  00182C                     __end_ofi2_LCD_String:
  5845                           	opt callstack 0
  5846                           
  5847 ;; *************** function i2_SendLCD *****************
  5848 ;; Defined at:
  5849 ;;		line 44 in file "LCDIO.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  Byte            1    wreg     unsigned char 
  5852 ;;  type            1    2[COMRAM] unsigned char 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  Byte            1    3[COMRAM] unsigned char 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		wreg, status,2, status,0, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5864 ;;      Params:         1       0       0       0
  5865 ;;      Locals:         1       0       0       0
  5866 ;;      Temps:          0       0       0       0
  5867 ;;      Totals:         2       0       0       0
  5868 ;;Total ram usage:        2 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    2
  5871 ;; This function calls:
  5872 ;;		i2_LCDout
  5873 ;; This function is called by:
  5874 ;;		_processRFID
  5875 ;;		i2_SetLine
  5876 ;;		i2_LCD_String
  5877 ;;		i2_ClearLCD
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text33
  5882  0019AE                     __ptext33:
  5883                           	opt callstack 0
  5884  0019AE                     i2_SendLCD:
  5885                           	opt callstack 16
  5886                           
  5887                           ;incstack = 0
  5888                           ;i2SendLCD@Byte stored from wreg
  5889  0019AE  6E04               	movwf	i2SendLCD@Byte,c
  5890                           
  5891                           ;LCDIO.c: 47:  LATAbits.LATA7 = type;
  5892  0019B0  B003               	btfsc	i2SendLCD@type,0,c
  5893  0019B2  D002               	bra	i2u184_45
  5894  0019B4  9E89               	bcf	3977,7,c	;volatile
  5895  0019B6  D001               	bra	i2u184_46
  5896  0019B8                     i2u184_45:
  5897  0019B8  8E89               	bsf	3977,7,c	;volatile
  5898  0019BA                     i2u184_46:
  5899                           
  5900                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
  5901  0019BA  3804               	swapf	i2SendLCD@Byte,w,c
  5902  0019BC  0B0F               	andlw	15
  5903  0019BE  0B0F               	andlw	15
  5904  0019C0  EC7A  F00B         	call	i2_LCDout
  5905                           
  5906                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
  5907  0019C4  0E06               	movlw	6
  5908  0019C6                     i2u376_47:
  5909  0019C6  2EE8               	decfsz	wreg,f,c
  5910  0019C8  D7FE               	bra	i2u376_47
  5911  0019CA  D000               	nop2	
  5912                           
  5913                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
  5914  0019CC  5004               	movf	i2SendLCD@Byte,w,c
  5915  0019CE  0B0F               	andlw	15
  5916  0019D0  EC7A  F00B         	call	i2_LCDout
  5917                           
  5918                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  5919  0019D4  0E21               	movlw	33
  5920  0019D6                     i2u377_47:
  5921  0019D6  2EE8               	decfsz	wreg,f,c
  5922  0019D8  D7FE               	bra	i2u377_47
  5923  0019DA  F000               	nop	
  5924  0019DC  0012               	return		;funcret
  5925  0019DE                     __end_ofi2_SendLCD:
  5926                           	opt callstack 0
  5927                           
  5928 ;; *************** function i2_LCDout *****************
  5929 ;; Defined at:
  5930 ;;		line 31 in file "LCDIO.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  number          1    wreg     unsigned char 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  number          1    1[COMRAM] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5944 ;;      Params:         0       0       0       0
  5945 ;;      Locals:         1       0       0       0
  5946 ;;      Temps:          1       0       0       0
  5947 ;;      Totals:         2       0       0       0
  5948 ;;Total ram usage:        2 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    1
  5951 ;; This function calls:
  5952 ;;		i2_E_TOG
  5953 ;; This function is called by:
  5954 ;;		i2_SendLCD
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text34
  5959  0016F4                     __ptext34:
  5960                           	opt callstack 0
  5961  0016F4                     i2_LCDout:
  5962                           	opt callstack 16
  5963                           
  5964                           ;incstack = 0
  5965                           ;i2LCDout@number stored from wreg
  5966  0016F4  6E02               	movwf	i2LCDout@number,c
  5967                           
  5968                           ;LCDIO.c: 33:  LATCbits.LATC0 = (0b0001 & number);
  5969  0016F6  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  5970  0016FA  0E01               	movlw	1
  5971  0016FC  1601               	andwf	??i2_LCDout,f,c
  5972  0016FE  508B               	movf	3979,w,c	;volatile
  5973  001700  1801               	xorwf	??i2_LCDout,w,c
  5974  001702  0BFE               	andlw	-2
  5975  001704  1801               	xorwf	??i2_LCDout,w,c
  5976  001706  6E8B               	movwf	3979,c	;volatile
  5977                           
  5978                           ;LCDIO.c: 34:  LATCbits.LATC3 = (0b0010 & number) >> 1;
  5979  001708  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  5980  00170C  90D8               	bcf	status,0,c
  5981  00170E  3201               	rrcf	??i2_LCDout,f,c
  5982  001710  0E01               	movlw	1
  5983  001712  1601               	andwf	??i2_LCDout,f,c
  5984  001714  4601               	rlncf	??i2_LCDout,f,c
  5985  001716  4601               	rlncf	??i2_LCDout,f,c
  5986  001718  4601               	rlncf	??i2_LCDout,f,c
  5987  00171A  508B               	movf	3979,w,c	;volatile
  5988  00171C  1801               	xorwf	??i2_LCDout,w,c
  5989  00171E  0BF7               	andlw	-9
  5990  001720  1801               	xorwf	??i2_LCDout,w,c
  5991  001722  6E8B               	movwf	3979,c	;volatile
  5992                           
  5993                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
  5994  001724  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  5995  001728  90D8               	bcf	status,0,c
  5996  00172A  3201               	rrcf	??i2_LCDout,f,c
  5997  00172C  90D8               	bcf	status,0,c
  5998  00172E  3201               	rrcf	??i2_LCDout,f,c
  5999  001730  0E01               	movlw	1
  6000  001732  1601               	andwf	??i2_LCDout,f,c
  6001  001734  508C               	movf	3980,w,c	;volatile
  6002  001736  1801               	xorwf	??i2_LCDout,w,c
  6003  001738  0BFE               	andlw	-2
  6004  00173A  1801               	xorwf	??i2_LCDout,w,c
  6005  00173C  6E8C               	movwf	3980,c	;volatile
  6006                           
  6007                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
  6008  00173E  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  6009  001742  90D8               	bcf	status,0,c
  6010  001744  3201               	rrcf	??i2_LCDout,f,c
  6011  001746  90D8               	bcf	status,0,c
  6012  001748  3201               	rrcf	??i2_LCDout,f,c
  6013  00174A  90D8               	bcf	status,0,c
  6014  00174C  3201               	rrcf	??i2_LCDout,f,c
  6015  00174E  0E01               	movlw	1
  6016  001750  1601               	andwf	??i2_LCDout,f,c
  6017  001752  4601               	rlncf	??i2_LCDout,f,c
  6018  001754  508C               	movf	3980,w,c	;volatile
  6019  001756  1801               	xorwf	??i2_LCDout,w,c
  6020  001758  0BFD               	andlw	-3
  6021  00175A  1801               	xorwf	??i2_LCDout,w,c
  6022  00175C  6E8C               	movwf	3980,c	;volatile
  6023                           
  6024                           ;LCDIO.c: 39:  E_TOG();
  6025  00175E  EC6C  F00D         	call	i2_E_TOG	;wreg free
  6026                           
  6027                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
  6028  001762  0E03               	movlw	3
  6029  001764                     i2u378_47:
  6030  001764  2EE8               	decfsz	wreg,f,c
  6031  001766  D7FE               	bra	i2u378_47
  6032  001768  F000               	nop	
  6033  00176A  0012               	return		;funcret
  6034  00176C                     __end_ofi2_LCDout:
  6035                           	opt callstack 0
  6036                           
  6037 ;; *************** function i2_E_TOG *****************
  6038 ;; Defined at:
  6039 ;;		line 23 in file "LCDIO.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6053 ;;      Params:         0       0       0       0
  6054 ;;      Locals:         0       0       0       0
  6055 ;;      Temps:          0       0       0       0
  6056 ;;      Totals:         0       0       0       0
  6057 ;;Total ram usage:        0 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		i2_LCDout
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text35
  6067  001AD8                     __ptext35:
  6068                           	opt callstack 0
  6069  001AD8                     i2_E_TOG:
  6070                           	opt callstack 16
  6071                           
  6072                           ;LCDIO.c: 25: LATAbits.LATA6 = 1;
  6073                           
  6074                           ;incstack = 0
  6075  001AD8  8C89               	bsf	3977,6,c	;volatile
  6076                           
  6077                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
  6078  001ADA  0E03               	movlw	3
  6079  001ADC                     i2u379_47:
  6080  001ADC  2EE8               	decfsz	wreg,f,c
  6081  001ADE  D7FE               	bra	i2u379_47
  6082  001AE0  F000               	nop	
  6083                           
  6084                           ;LCDIO.c: 27: LATAbits.LATA6 = 0;
  6085  001AE2  9C89               	bcf	3977,6,c	;volatile
  6086  001AE4  0012               	return		;funcret
  6087  001AE6                     __end_ofi2_E_TOG:
  6088                           	opt callstack 0
  6089                           
  6090                           	psect	rparam
  6091  0000                     
  6092                           	psect	temp
  6093  000039                     btemp:
  6094                           	opt callstack 0
  6095  000039                     	ds	1
  6096  0000                     int$flags	set	btemp
  6097  0000                     wtemp8	set	btemp+1
  6098  0000                     ttemp5	set	btemp+1
  6099  0000                     ttemp6	set	btemp+4
  6100  0000                     ttemp7	set	btemp+8
  6101                           tosu	equ	0xFFF
  6102                           tosh	equ	0xFFE
  6103                           tosl	equ	0xFFD
  6104                           stkptr	equ	0xFFC
  6105                           pclatu	equ	0xFFB
  6106                           pclath	equ	0xFFA
  6107                           pcl	equ	0xFF9
  6108                           tblptru	equ	0xFF8
  6109                           tblptrh	equ	0xFF7
  6110                           tblptrl	equ	0xFF6
  6111                           tablat	equ	0xFF5
  6112                           prodh	equ	0xFF4
  6113                           prodl	equ	0xFF3
  6114                           indf0	equ	0xFEF
  6115                           postinc0	equ	0xFEE
  6116                           postdec0	equ	0xFED
  6117                           preinc0	equ	0xFEC
  6118                           plusw0	equ	0xFEB
  6119                           fsr0h	equ	0xFEA
  6120                           fsr0l	equ	0xFE9
  6121                           wreg	equ	0xFE8
  6122                           indf1	equ	0xFE7
  6123                           postinc1	equ	0xFE6
  6124                           postdec1	equ	0xFE5
  6125                           preinc1	equ	0xFE4
  6126                           plusw1	equ	0xFE3
  6127                           fsr1h	equ	0xFE2
  6128                           fsr1l	equ	0xFE1
  6129                           bsr	equ	0xFE0
  6130                           indf2	equ	0xFDF
  6131                           postinc2	equ	0xFDE
  6132                           postdec2	equ	0xFDD
  6133                           preinc2	equ	0xFDC
  6134                           plusw2	equ	0xFDB
  6135                           fsr2h	equ	0xFDA
  6136                           fsr2l	equ	0xFD9
  6137                           status	equ	0xFD8


Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      56
    BANK0           160    140     150
    BANK1           256      0      32
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> main@temp(BANK0[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@temp(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1614_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@temp(BANK0[32]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@temp(BANK0[32]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    check_RFID@dataBuf	PTR unsigned char  size(2) Largest target is 12
		 -> InterruptHandlerHigh@RFIDbuf(COMRAM[12]), 

    processRFID@RFIDbuf	PTR unsigned char  size(2) Largest target is 12
		 -> InterruptHandlerHigh@RFIDbuf(COMRAM[12]), 

    LCD_String@string	PTR unsigned char  size(2) Largest target is 32
		 -> STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), main@temp(BANK0[32]), 
		 -> STR_1(CODE[15]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    S414DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S414DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_check_RFID
    _processRFID->i2_ClearLCD
    _processRFID->i2_SetLine
    i2_ClearLCD->i2_SendLCD
    _check_RFID->i2_LCD_String
    i2_SetLine->i2_SendLCD
    i2_LCD_String->i2_SendLCD
    i2_SendLCD->i2_LCDout

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _setup->_init_LCD
    _init_LCD->_SendLCD
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _SetLine->_SendLCD
    _LCD_String->_SendLCD
    _ClearLCD->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   18644
                                            102 BANK0     38    38      0
                           _ClearLCD
                         _LCD_String
                            _SetLine
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7529
                                             86 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7043
                                             78 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    6573
                                             60 BANK0     18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4829
                                             28 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             17 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              1 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             10 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              1 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              1 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              1 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1389
                           _init_LCD
                          _init_RFID
                       _init_sensors
 ---------------------------------------------------------------------------------
 (2) _init_sensors                                         2     2      0       3
                                              1 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _init_RFID                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_LCD                                             1     1      0    1386
                                              5 BANK0      1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                              1 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             56 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             15 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2388
                                             40 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SetLine                                              1     1      0    1324
                                              5 BANK0      1     1      0
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           2     0      2    1707
                                              5 BANK0      2     0      2
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _ClearLCD                                             1     1      0    1262
                                              5 BANK0      1     1      0
                            _SendLCD
 ---------------------------------------------------------------------------------
 (3) _SendLCD                                              2     1      1    1262
                                              3 BANK0      2     1      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (4) _LCDout                                               2     2      0     124
                                              1 BANK0      2     2      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (5) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptHandlerLow                                  1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               12    12      0    2940
                                             30 COMRAM    12    12      0
                         _check_RFID
                        _processRFID
 ---------------------------------------------------------------------------------
 (11) _processRFID                                         6     3      3    1316
                                              5 COMRAM     6     3      3
                         i2_ClearLCD
                          i2_SendLCD
                          i2_SetLine
 ---------------------------------------------------------------------------------
 (12) i2_ClearLCD                                          1     1      0     284
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (11) _check_RFID                                         24    22      2    1600
                                              6 COMRAM    24    22      2
                       i2_LCD_String
                          i2_SetLine
 ---------------------------------------------------------------------------------
 (12) i2_SetLine                                           1     1      0     328
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (12) i2_LCD_String                                        2     0      2     381
                                              4 COMRAM     2     0      2
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (13) i2_SendLCD                                           2     1      1     284
                                              2 COMRAM     2     1      1
                           i2_LCDout
 ---------------------------------------------------------------------------------
 (14) i2_LCDout                                            2     2      0      88
                                              0 COMRAM     2     2      0
                            i2_E_TOG
 ---------------------------------------------------------------------------------
 (15) i2_E_TOG                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCD
       _LCDout
         _E_TOG
   _LCD_String
     _SendLCD
       _LCDout
         _E_TOG
   _SetLine
     _SendLCD
       _LCDout
         _E_TOG
   ___fladd
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
     _init_LCD
       _LCDout
         _E_TOG
       _SendLCD
         _LCDout
           _E_TOG
     _init_RFID
     _init_sensors
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 _InterruptHandlerLow (ROOT)

 _InterruptHandlerHigh (ROOT)
   _check_RFID
     i2_LCD_String
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
   _processRFID
     i2_ClearLCD
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_SendLCD
       i2_LCDout
         i2_E_TOG
     i2_SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8C      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      38       1       59.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EE       3        0.0%
DATA                 0      0      EE      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Feb 25 15:20:06 2020

                           l45 1A5E                             bsr 000FE0                    ?_LCD_String 0065  
                          l291 09CE                            l279 14FA                            l289 09C6  
                          l752 1298                            l762 1404                            l843 07DE  
                          l844 07BC                            l928 03C8                            l945 0666  
                          l937 05E0                            l938 05DC                            l859 08B0  
                          l868 0916                            l869 0912                            l976 108C  
                          l969 100E                            _pad 14C8                            wreg 000FE8  
                 ___flmul@aexp 0080                   ___flmul@bexp 0081                   processRFID@i 0009  
                 ___flmul@sign 007B                   ___flmul@temp 0086                   ___flmul@prod 0082  
                 __CFG_LVP$OFF 000000                   ___fltol@exp1 00A1                           l3015 0A06  
                         l3201 101E                           l3025 0AF4                           l3211 104E  
                         l3221 10BE                           l3213 1074                           l2503 07CA  
                         l3207 103C                           l3063 0DE6                           l2505 07CE  
                         l2425 06C8                           l3209 1042                           l3073 0E2E  
                         l3145 1840                           l3171 1972                           l2603 098A  
                         l3219 10B2                           l3147 1866                           l3243 0B62  
                         l3181 17A6                           l2605 098C                           l2461 0734  
                         l2453 0714                           l2429 06CC                           l3237 10FE  
                         l3069 0E22                           l3261 0C98                           l3175 176E  
                         l3167 195E                           l2527 0824                           l2519 0802  
                         l2703 05A6                           l2631 0388                           l3079 0E46  
                         l3263 0CA0                           l2529 0828                           l2537 083A  
                         l2449 0710                           l3265 0CA4                           l2555 08D4  
                         l2571 08F4                           l2547 08A0                           l2491 0770  
                         l2723 0624                           l2627 0374                           l3267 0CAC  
                         l2565 08EA                           l2645 03B4                           l2629 0378  
                         l3285 0D00                           l3277 0CC8                           l2591 095C  
                         l2727 0642                           l2655 03E6                           l2647 03B8  
                         l2751 12DA                           l2905 1440                           l2739 0684  
                         l2771 1334                           l2915 18E0                           l2923 19E8  
                         l2925 19EE                           l2941 14E2                           ?_pad 0071  
                         l2599 0982                           l2767 1324                           l2919 18F8  
                         l2951 151E                           l2697 0588                           l2785 1364  
                         l2777 133C                           l2945 14F2                           l2779 1348  
                         l2955 154A                           l2947 1504                           l2965 1212  
                         l2967 1226                           l2977 1282                           l2993 13EE  
                         l2985 1392                           l2987 13A6                           STR_1 0331  
                         STR_2 0340                           STR_3 0321                           STR_4 0311  
                         STR_5 0301                           u2300 0792                           u2310 07A2  
                         _LATB 000F8A                           u2320 07A4                           u3050 1438  
                         u2500 090C                           u3220 09BC                           u3141 11F0  
                         u2350 07E6                           u3070 1480                           u3160 122A  
                         u3250 0B20                           u3251 0B1E                           u3260 0B2E  
                         u3190 13AA                           u3270 0B32                           u3510 0CF8  
                         u3360 1794                           u2560 0968                           u2480 08F8  
                         u2720 05D6                           u2800 12F8                           u3520 0D04  
                         u3370 17C6                           u3450 10C8                           u3285 191E  
                         u2805 12EE                           u3286 1920                           u2670 03D4  
                         u3367 178A                           u3607 1174                           u2760 0632  
                         u2680 054A                           u2840 134E                           u3377 17BC  
                         u3617 1188                           u2770 0650                           u3707 1940  
                         u3627 119C                           u3547 0C8A                           u3717 16EC  
                         u2685 0540                           u3637 11B6                           u3557 0CD4  
                         u2790 12C8                           u3727 1ACE                           u3647 11CE  
                         u3567 1130                           u3657 11E2                           u3577 1146  
                         u3667 1974                           u3587 1158                           u3677 17A0  
                         u3597 1166                           u3687 1A4E                           u3697 192E  
                         i2l53 15C2                           i2l58 15C4                __end_ofi2_E_TOG 1AE6  
                         _dbuf 0100                           _main 0B5C                           _prec 00F0  
                         _nout 00EC                           pad@i 0078                           pad@p 0075  
                         fsr0h 000FEA                           fsr1h 000FE2                           indf0 000FEF  
                         fsr2h 000FDA                           fsr0l 000FE9                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 007A  
                         fsr2l 000FD9                           btemp 0039                           _utoa 09A8  
                         prodh 000FF4                           prodl 000FF3                           start 0026  
                 ___param_bank 000000              processRFID@i_1071 000B                __end_of_SendLCD 1948  
                        ??_pad 0077                __end_of_SetLine 197C                  ___fltol@sign1 00A0  
              __end_of___fladd 09A8                          ?_main 0001                __end_of___flmul 069A  
              __end_of___fltol 1376                          ?_utoa 007C                __end_of___lodiv 12BA  
              __end_of___lomod 1426                          _T5CON 000FB7                          _RCREG 000FAE  
                        _E_TOG 1ACA                   vfpfcnvrt@fmt 009E                   vfpfcnvrt@llu 00A6  
             __end_ofi2_LCDout 176C                          _SPBRG 000FAF                    ?i2_ClearLCD 0001  
                 main@raw_data 00E8                          _flags 00F2                          _fputc 1426  
                        _fputs 18D4                          _setup 1A5A                          pad@fp 0071  
                        _width 00EE                          _putch 1AE6                          main@i 00EA  
           __size_ofi2_SendLCD 0030                          tablat 000FF5             __size_ofi2_SetLine 002E  
           processRFID@RFIDbuf 0006                          ttemp5 003A                          ttemp6 003D  
                        ttemp7 0041                          utoa@d 007E                          utoa@i 009A  
                 main@smoothed 00F4                          utoa@n 0092                          utoa@p 008E  
                        utoa@w 0090                          status 000FD8                          wtemp8 003A  
          __size_of_LCD_String 0062                __end_of_sprintf 18D4               __end_of_ClearLCD 1A5A  
             ___lodiv@dividend 0061                 __CFG_MCLRE$OFF 000000                __initialization 197C  
                 __end_of_main 0D0E                   __end_of_utoa 0B5C                 __CFG_OSC$IRCIO 000000  
             LCD_String@string 0065                         ??_main 00C6                         ??_utoa 0086  
                __activetblptr 000002                         ?_E_TOG 0001               ___lodiv@quotient 0071  
                    ??i2_E_TOG 0001                         ?_fputc 0061                         ?_fputs 006A  
                       ?_setup 0001                         _ANSEL0 000FB8                         _ANSEL1 000FB9  
                       ?_putch 0001                         i2l2305 160A                         i2l2325 1648  
                       i2l2317 1638                         i2l2351 0E84                         i2l2273 17D0  
                       i2l2265 1A1E                         i2l2337 1664                         i2l2363 0F08  
                       i2l2269 1A30                         i2l2373 0FB8                         i2l2357 0EC6  
                       i2l2279 1804                         _LCDout 1678                    SendLCD@Byte 0064  
                       _OSCCON 000FD3                         _PTCON0 000F7F                         _PTCON1 000F7E  
                       _SPBRGH 000FB0                         _PTPERH 000F7A                         _PTPERL 000F7B  
             __end_of___xxtofl 1110                    SendLCD@type 0063                      ??_SendLCD 0064  
                ?_init_sensors 0001                      ??_SetLine 0065            __size_ofi2_ClearLCD 001A  
                 vfprintf@cfmt 00B4                      ??___fladd 0090                      ??___flmul 0077  
                    ??___fltol 009C                      ??___lodiv 0071                      ??___lomod 0071  
             __end_of_init_LCD 11EA                         clear_0 1982                         clear_1 198E  
                       clear_2 199A              __end_ofi2_SendLCD 19DE                  ?i2_LCD_String 0005  
            __end_ofi2_SetLine 1A3A                         pad@buf 0073                         _strlen 19DE  
                       fputc@c 0061                         fputs@c 006E                         fputs@i 006F  
                       fputs@s 006A                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                         putch@c 0001  
             __end_of_vfprintf 1882                         utoa@fp 007C                      ??_sprintf 00BC  
                 ?_processRFID 0006                   ___xxtofl@arg 006B                   ___xxtofl@exp 006A  
                 ___xxtofl@val 0061                     __accesstop 0060        __end_of__initialization 19A0  
                ___rparam_used 000001                 ??_init_sensors 0061                     ___fltol@f1 0098  
                  SetLine@line 0065                  __end_of_E_TOG 1AD8                      ?i2_LCDout 0001  
               __pcstackCOMRAM 0001                  __end_of_fputc 14C8                  __end_of_fputs 1910  
                __end_of_setup 1A78                  __end_of_putch 1AE8                 ??i2_LCD_String 0007  
                 ??_LCD_String 0067                        ??_E_TOG 0061  __size_of_InterruptHandlerHigh 15E8  
                    ?_ClearLCD 0001    __end_of_InterruptHandlerLow 0026                        ??_fputc 0065  
                   _check_RFID 0E7C                        ??_fputs 006E                        ??_setup 0066  
                      ??_putch 0061                     __pbssBANK0 00EC                     __pbssBANK1 0100  
                      ?_LCDout 0001             __size_of_init_RFID 001A             __end_of_LCD_String 17CE  
                   ??i2_LCDout 0001                        _CAP1CON 000F63                        _DFLTCON 000F60  
                      ?_strlen 0061                   ??i2_ClearLCD 0005                      ?___xxtofl 0061  
                   ??_ClearLCD 0065             __size_of_vfpfcnvrt 016E                        i2_E_TOG 1AD8  
                      _PWMCON0 000F6F                        _PWMCON1 000F6E               ___lomod@dividend 0061  
                    ?_init_LCD 0001                __size_of_LCDout 007C                        _SendLCD 1910  
                      __Hparam 0000                        _SetLine 1948                        __Lparam 0000  
           __end_ofi2_ClearLCD 1ACA                        ___fladd 069A          processRFID@latestChar 0008  
                      ___flmul 0346                        ___fltol 12BA                        ___lodiv 11EA  
                      ___lomod 1376                      ?_vfprintf 00AE                   __psmallconst 0300  
                      __pcinit 197C                        __ramtop 0300                        __ptext0 0B5C  
                      __ptext1 1882                        __ptext2 182C                        __ptext3 0D0E  
                      __ptext4 09A8                        __ptext5 14C8                        __ptext6 19DE  
                      __ptext7 18D4                        __ptext8 1426                        __ptext9 1AE6  
            __end_of_init_RFID 1AB0               check_RFID@hexBuf 000B                __size_of_strlen 002E  
                 __size_of_pad 009E                     ??___xxtofl 0065           __end_of_init_sensors 1A96  
                 LCDout@number 0062                    ?_check_RFID 0007                        _sprintf 1882  
               __pintcode_body 1566           end_of_initialization 19A0                     ??_init_LCD 0065  
         __end_ofi2_LCD_String 182C           __size_of_processRFID 0088                        fputc@fp 0063  
                __Lmediumconst 0000                        int_func 1566                        fputs@fp 006C  
            __end_of_vfpfcnvrt 0E7C                      _RCSTAbits 000FAB                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 00B4                        strlen@a 0063                        strlen@s 0061  
                   _robot_mode 002C                      _PORTDbits 000F83                    ___fladd@grs 0097  
                    i2_SendLCD 19AE                      i2_SetLine 1A0C                  ___xxtofl@sign 0069  
           i2LCD_String@string 0005                      _TRISAbits 000F92                      _TRISCbits 000F94  
                    _TRISDbits 000F95                    ___flmul@grs 007C                 __end_of_LCDout 16F4  
                    _TXSTAbits 000FAC              __size_ofi2_LCDout 0078            __size_of_check_RFID 0150  
                  vfpfcnvrt@ap 00A0                    vfpfcnvrt@fp 009C                    _BAUDCONbits 000FAA  
               __end_of_strlen 1A0C                     ?i2_SendLCD 0003            start_initialization 197C  
              ___lodiv@divisor 0069                     ?i2_SetLine 0001                ___lodiv@counter 0079  
                  __end_of_pad 1566              __size_of_ClearLCD 0020                       ??_LCDout 0061  
InterruptHandlerHigh@RFID_flag 002A   __end_of_InterruptHandlerHigh 15F0                    vfprintf@fmt 00B0  
        __size_of_init_sensors 001E                       ??_strlen 0063                      ___fladd@a 008C  
                    ___fladd@b 0088                      ___flmul@a 0073                      ___flmul@b 006F  
                  __pbssCOMRAM 002B                  __pcstackBANK0 0060                       ?i2_E_TOG 0001  
        __size_ofi2_LCD_String 005E              __size_of___xxtofl 0144                 i2LCDout@number 0002  
 __size_of_InterruptHandlerLow 000E              __size_of_init_LCD 00DA                       ?_SendLCD 0063  
                     ?_SetLine 0001                   _init_sensors 1A78                      __pintcode 0008  
                     ?___fladd 0088                       ?___flmul 006F                       ?___fltol 0098  
                     ?___lodiv 0061                       ?___lomod 0061             check_RFID@checksum 001C  
                  __pintcodelo 0018                   i2_LCD_String 17CE              __size_of_vfprintf 0056  
                     _CAP1BUFH 000F69                       _CAP1BUFL 000F68                ___lomod@divisor 0069  
                  __smallconst 0300                ___lomod@counter 0071                 __size_of_E_TOG 000E  
                  ??i2_SendLCD 0004                    ??i2_SetLine 0005                      _init_RFID 1A96  
                 ??_check_RFID 0009                       ?_sprintf 00B6                 __size_of_fputc 00A2  
               __size_of_fputs 003C                 __size_of_setup 001E                 __size_of_putch 0002  
              check_RFID@byte1 0017                check_RFID@byte2 0018                check_RFID@byte3 0019  
              check_RFID@byte4 001A                check_RFID@byte5 001B                       _LATAbits 000F89  
                     _LATCbits 000F8B                       _LATDbits 000F8C                       _IPR1bits 000F9F  
                     _PIE1bits 000F9D                       i2u200_40 0F1C                       i2u201_40 0F26  
                     i2u210_40 0F68                       i2u202_40 0F28                       i2u211_40 0F76  
                     i2u203_40 0F36                       i2u212_40 0F78                       i2u204_40 0F38  
                     i2u213_40 0F94                       i2u205_40 0F46                       i2u214_40 0F96  
                     i2u206_40 0F48                       i2u207_40 0F56                       i2u208_40 0F58  
                     i2u209_40 0F66                       i2u184_45 19B8                       i2u184_46 19BA  
                     i2u193_40 1634                       _PIR1bits 000F9E                       i2_LCDout 16F4  
                     i2u195_40 1660                       i2u188_40 17F4                       i2u188_47 17EA  
                     i2u189_40 1824                       i2u189_47 181A                       i2u373_47 1AC0  
                     i2u374_47 1A32                       i2u375_47 17FE                       i2u376_47 19C6  
                     i2u377_47 19D6                       i2u378_47 1764                       i2u379_47 1ADC  
                     _RCONbits 000FD0                      _vfpfcnvrt 0D0E             __end_of_check_RFID 0FCC  
         _InterruptHandlerHigh 0008                       _ClearLCD 1A3A                     ?_init_RFID 0001  
             __size_ofi2_E_TOG 000E                  ??_processRFID 0009                  i2SendLCD@Byte 0004  
                i2SendLCD@type 0003                    check_RFID@i 001D                       __Hrparam 0000  
             __size_of_SendLCD 0038                     vfprintf@ap 00B2                       __Lrparam 0000  
                   vfprintf@fp 00AE               __size_of_SetLine 0034               __size_of___fladd 030E  
             __size_of___flmul 0354               __size_of___fltol 00BC               __size_of___lodiv 00D0  
             __size_of___lomod 00B0                     ?_vfpfcnvrt 009C          ?_InterruptHandlerHigh 0001  
                   sprintf@fmt 00B8                       ___xxtofl 0FCC              check_RFID@dataBuf 0007  
                     __ptext10 1376                       __ptext11 11EA                       __ptext20 1948  
                     __ptext12 1A5A                       __ptext21 176C                       __ptext13 1A78  
                     __ptext30 0E7C                       __ptext22 1A3A                       __ptext14 1A96  
                     __ptext31 1A0C                       __ptext23 1910                       __ptext15 1110  
                     __ptext32 17CE                       __ptext24 1678                       __ptext16 0FCC  
                     __ptext33 19AE                       __ptext25 1ACA                       __ptext17 12BA  
                     __ptext34 16F4                       __ptext18 0346                       __ptext35 1AD8  
                     __ptext19 069A                       __ptext28 15F0                       __ptext29 1AB0  
             __size_of_sprintf 0052                       _init_LCD 1110    InterruptHandlerHigh@RFIDbuf 002D  
                __size_of_main 01B2                  __size_of_utoa 01B4            __end_of_processRFID 1678  
                i2SetLine@line 0005                       int$flags 0039                       _vfprintf 182C  
          _InterruptHandlerLow 0018                       main@temp 00C8                     _LCD_String 176C  
                   _INTCONbits 000FF2                    ??_init_RFID 0061                       intlevel1 0000  
                     intlevel2 0000                      sprintf@ap 00BE           ?_InterruptHandlerLow 0001  
                   _OSCCONbits 000FD3     processRFID@position_in_buf 002B                    ??_vfpfcnvrt 00A2  
       ??_InterruptHandlerHigh 001F                       sprintf@f 00C0                       sprintf@s 00B6  
                   i2_ClearLCD 1AB0                  ___fladd@signs 0094                    _processRFID 15F0  
        ??_InterruptHandlerLow 0060                   ___fladd@aexp 0095                   ___fladd@bexp 0096  
