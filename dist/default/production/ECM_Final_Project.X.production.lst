

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Feb 21 16:17:34 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4331 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _PIE1bits	set	3997
    69  0000                     _RCSTAbits	set	4011
    70  0000                     _TXSTAbits	set	4012
    71  0000                     _BAUDCONbits	set	4010
    72  0000                     _SPBRGH	set	4016
    73  0000                     _SPBRG	set	4015
    74  0000                     _TRISAbits	set	3986
    75  0000                     _TRISDbits	set	3989
    76  0000                     _LATAbits	set	3977
    77  0000                     _LATDbits	set	3980
    78  0000                     _LATCbits	set	3979
    79  0000                     _LATB	set	3978
    80  0000                     _PTPERH	set	3962
    81  0000                     _PTPERL	set	3963
    82  0000                     _PWMCON1	set	3950
    83  0000                     _PWMCON0	set	3951
    84  0000                     _PTCON1	set	3966
    85  0000                     _PTCON0	set	3967
    86  0000                     _PORTCbits	set	3970
    87  0000                     _RCREG	set	4014
    88  0000                     _PIR1bits	set	3998
    89  0000                     _TRISCbits	set	3988
    90  0000                     _RCONbits	set	4048
    91  0000                     _INTCONbits	set	4082
    92  0000                     _OSCCONbits	set	4051
    93  0000                     _OSCCON	set	4051
    94                           
    95                           	psect	smallconst
    96  000300                     __psmallconst:
    97                           	opt callstack 0
    98  000300  00                 	db	0
    99  000301                     STR_3:
   100  000301  43                 	db	67	;'C'
   101  000302  48                 	db	72	;'H'
   102  000303  45                 	db	69	;'E'
   103  000304  43                 	db	67	;'C'
   104  000305  4B                 	db	75	;'K'
   105  000306  53                 	db	83	;'S'
   106  000307  55                 	db	85	;'U'
   107  000308  4D                 	db	77	;'M'
   108  000309  20                 	db	32
   109  00030A  46                 	db	70	;'F'
   110  00030B  41                 	db	65	;'A'
   111  00030C  49                 	db	73	;'I'
   112  00030D  4C                 	db	76	;'L'
   113  00030E  45                 	db	69	;'E'
   114  00030F  44                 	db	68	;'D'
   115  000310  00                 	db	0
   116  000311                     STR_2:
   117  000311  43                 	db	67	;'C'
   118  000312  48                 	db	72	;'H'
   119  000313  45                 	db	69	;'E'
   120  000314  43                 	db	67	;'C'
   121  000315  4B                 	db	75	;'K'
   122  000316  53                 	db	83	;'S'
   123  000317  55                 	db	85	;'U'
   124  000318  4D                 	db	77	;'M'
   125  000319  20                 	db	32
   126  00031A  50                 	db	80	;'P'
   127  00031B  41                 	db	65	;'A'
   128  00031C  53                 	db	83	;'S'
   129  00031D  53                 	db	83	;'S'
   130  00031E  45                 	db	69	;'E'
   131  00031F  44                 	db	68	;'D'
   132  000320  00                 	db	0
   133  000321                     STR_1:
   134  000321  52                 	db	82	;'R'
   135  000322  45                 	db	69	;'E'
   136  000323  53                 	db	83	;'S'
   137  000324  45                 	db	69	;'E'
   138  000325  54                 	db	84	;'T'
   139  000326  54                 	db	84	;'T'
   140  000327  49                 	db	73	;'I'
   141  000328  4E                 	db	78	;'N'
   142  000329  47                 	db	71	;'G'
   143  00032A  20                 	db	32
   144  00032B  52                 	db	82	;'R'
   145  00032C  4F                 	db	79	;'O'
   146  00032D  42                 	db	66	;'B'
   147  00032E  4F                 	db	79	;'O'
   148  00032F  54                 	db	84	;'T'
   149  000330  00                 	db	0
   150                           
   151                           ; #config settings
   152  000331  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           	psect	cinit
   155  0008F2                     __pcinit:
   156                           	opt callstack 0
   157  0008F2                     start_initialization:
   158                           	opt callstack 0
   159  0008F2                     __initialization:
   160                           	opt callstack 0
   161                           
   162                           ; Clear objects allocated to COMRAM (14 bytes)
   163  0008F2  EE00  F029         	lfsr	0,__pbssCOMRAM
   164  0008F6  0E0E               	movlw	14
   165  0008F8                     clear_0:
   166  0008F8  6AEE               	clrf	postinc0,c
   167  0008FA  06E8               	decf	wreg,f,c
   168  0008FC  E1FD               	bnz	clear_0
   169  0008FE                     end_of_initialization:
   170                           	opt callstack 0
   171  0008FE                     __end_of__initialization:
   172                           	opt callstack 0
   173  0008FE  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   174  000900  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   175  000902  0E00               	movlw	low (__Lsmallconst shr (0+16))
   176  000904  6EF8               	movwf	tblptru,c
   177  000906  0E03               	movlw	high __Lsmallconst
   178  000908  6EF7               	movwf	tblptrh,c
   179  00090A  0100               	movlb	0
   180  00090C  EF30  F003         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183  000029                     __pbssCOMRAM:
   184                           	opt callstack 0
   185  000029                     processRFID@position_in_buf:
   186                           	opt callstack 0
   187  000029                     	ds	1
   188  00002A                     _robot_mode:
   189                           	opt callstack 0
   190  00002A                     	ds	1
   191  00002B                     InterruptHandlerHigh@RFIDbuf:
   192                           	opt callstack 0
   193  00002B                     	ds	12
   194                           
   195                           	psect	cstackBANK0
   196  000060                     __pcstackBANK0:
   197                           	opt callstack 0
   198  000060                     ??_InterruptHandlerLow:
   199                           
   200                           ; 1 bytes @ 0x0
   201  000060                     	ds	1
   202  000061                     ??_LCDout:
   203                           
   204                           ; 1 bytes @ 0x1
   205  000061                     	ds	1
   206  000062                     LCDout@number:
   207                           	opt callstack 0
   208                           
   209                           ; 1 bytes @ 0x2
   210  000062                     	ds	1
   211  000063                     SendLCD@type:
   212                           	opt callstack 0
   213                           
   214                           ; 1 bytes @ 0x3
   215  000063                     	ds	1
   216  000064                     SendLCD@Byte:
   217                           	opt callstack 0
   218                           
   219                           ; 1 bytes @ 0x4
   220  000064                     	ds	1
   221  000065                     ??_LCD_Init:
   222  000065                     ??_ClearLCD:
   223  000065                     LCD_String@string:
   224                           	opt callstack 0
   225                           
   226                           ; 2 bytes @ 0x5
   227  000065                     	ds	2
   228  000067                     ??_main:
   229                           
   230                           ; 1 bytes @ 0x7
   231  000067                     	ds	2
   232  000069                     main@i:
   233                           	opt callstack 0
   234                           
   235                           ; 2 bytes @ 0x9
   236  000069                     	ds	2
   237                           
   238                           	psect	cstackCOMRAM
   239  000001                     __pcstackCOMRAM:
   240                           	opt callstack 0
   241  000001                     ??i2_LCDout:
   242  000001                     
   243                           ; 1 bytes @ 0x0
   244  000001                     	ds	1
   245  000002                     i2LCDout@number:
   246                           	opt callstack 0
   247                           
   248                           ; 1 bytes @ 0x1
   249  000002                     	ds	1
   250  000003                     i2SendLCD@type:
   251                           	opt callstack 0
   252                           
   253                           ; 1 bytes @ 0x2
   254  000003                     	ds	1
   255  000004                     i2SendLCD@Byte:
   256                           	opt callstack 0
   257                           
   258                           ; 1 bytes @ 0x3
   259  000004                     	ds	1
   260  000005                     ??i2_ClearLCD:
   261  000005                     SetLine@line:
   262                           	opt callstack 0
   263  000005                     i2LCD_String@string:
   264                           	opt callstack 0
   265                           
   266                           ; 2 bytes @ 0x4
   267  000005                     	ds	1
   268  000006                     processRFID@RFIDbuf:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x5
   272  000006                     	ds	1
   273  000007                     check_RFID@dataBuf:
   274                           	opt callstack 0
   275                           
   276                           ; 2 bytes @ 0x6
   277  000007                     	ds	1
   278  000008                     processRFID@latestChar:
   279                           	opt callstack 0
   280                           
   281                           ; 1 bytes @ 0x7
   282  000008                     	ds	1
   283  000009                     ??_check_RFID:
   284  000009                     processRFID@i:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0x8
   288  000009                     	ds	2
   289  00000B                     processRFID@i_1105:
   290                           	opt callstack 0
   291  00000B                     check_RFID@hexBuf:
   292                           	opt callstack 0
   293                           
   294                           ; 12 bytes @ 0xA
   295  00000B                     	ds	12
   296  000017                     check_RFID@byte1:
   297                           	opt callstack 0
   298                           
   299                           ; 1 bytes @ 0x16
   300  000017                     	ds	1
   301  000018                     check_RFID@byte2:
   302                           	opt callstack 0
   303                           
   304                           ; 1 bytes @ 0x17
   305  000018                     	ds	1
   306  000019                     check_RFID@byte3:
   307                           	opt callstack 0
   308                           
   309                           ; 1 bytes @ 0x18
   310  000019                     	ds	1
   311  00001A                     check_RFID@byte4:
   312                           	opt callstack 0
   313                           
   314                           ; 1 bytes @ 0x19
   315  00001A                     	ds	1
   316  00001B                     check_RFID@byte5:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0x1A
   320  00001B                     	ds	1
   321  00001C                     check_RFID@checksum:
   322                           	opt callstack 0
   323                           
   324                           ; 1 bytes @ 0x1B
   325  00001C                     	ds	1
   326  00001D                     check_RFID@i:
   327                           	opt callstack 0
   328                           
   329                           ; 2 bytes @ 0x1C
   330  00001D                     	ds	2
   331  00001F                     ??_InterruptHandlerHigh:
   332                           
   333                           ; 1 bytes @ 0x1E
   334  00001F                     	ds	9
   335  000028                     InterruptHandlerHigh@RFID_flag:
   336                           	opt callstack 0
   337                           
   338                           ; 1 bytes @ 0x27
   339  000028                     	ds	1
   340  000029                     
   341                           ; 1 bytes @ 0x28
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 90 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  i               2    9[BANK0 ] int 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   361 ;;      Params:         0       0       0       0
   362 ;;      Locals:         0       2       0       0
   363 ;;      Temps:          0       2       0       0
   364 ;;      Totals:         0       4       0       0
   365 ;;Total ram usage:        4 bytes
   366 ;; Hardware stack levels required when called:   12
   367 ;; This function calls:
   368 ;;		_ClearLCD
   369 ;;		_LCD_String
   370 ;;		_setup
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text0
   377  000660                     __ptext0:
   378                           	opt callstack 0
   379  000660                     _main:
   380                           	opt callstack 19
   381                           
   382                           ;main.c: 93:   setup();
   383                           
   384                           ;incstack = 0
   385  000660  EC88  F004         	call	_setup	;wreg free
   386  000664                     l1533:
   387                           
   388                           ;main.c: 100:       while(robot_mode == 0)
   389  000664  502A               	movf	_robot_mode,w,c	;volatile
   390  000666  A4D8               	btfss	status,2,c
   391  000668  D003               	goto	l1537
   392  00066A  D7FC               	goto	l1533
   393  00066C                     l1535:
   394                           
   395                           ;main.c: 107:       {;main.c: 109:           robot_mode = 2;
   396  00066C  0E02               	movlw	2
   397  00066E  6E2A               	movwf	_robot_mode,c	;volatile
   398  000670                     l1537:
   399                           
   400                           ;main.c: 106:       while(robot_mode == 1)
   401  000670  042A               	decf	_robot_mode,w,c	;volatile
   402  000672  A4D8               	btfss	status,2,c
   403  000674  D02D               	goto	u920
   404  000676  D7FA               	goto	l1535
   405  000678                     l1539:
   406                           
   407                           ;main.c: 116:           {;main.c: 117:               ClearLCD();
   408  000678  EC69  F004         	call	_ClearLCD	;wreg free
   409                           
   410                           ;main.c: 118:               LCD_String("RESETTING ROBOT");
   411  00067C  0E21               	movlw	low STR_1
   412  00067E  0100               	movlb	0	; () banked
   413  000680  6F65               	movwf	LCD_String@string& (0+255),b
   414  000682  0E03               	movlw	high STR_1
   415  000684  6F66               	movwf	(LCD_String@string+1)& (0+255),b
   416  000686  ECE6  F003         	call	_LCD_String	;wreg free
   417                           
   418                           ;main.c: 119:               for(int i=0; i<10;i++)
   419  00068A  0E00               	movlw	0
   420  00068C  0100               	movlb	0	; () banked
   421  00068E  6F6A               	movwf	(main@i+1)& (0+255),b
   422  000690  0E00               	movlw	0
   423  000692  6F69               	movwf	main@i& (0+255),b
   424  000694                     l1549:
   425                           
   426                           ; BSR set to: 0
   427                           ;main.c: 120:               {;main.c: 121:                   _delay((unsigned long)((100
      +                          )*(8000000/4000.0)));
   428  000694  0E02               	movlw	2
   429  000696  0100               	movlb	0	; () banked
   430  000698  6F68               	movwf	(??_main+1)& (0+255),b
   431  00069A  0E04               	movlw	4
   432  00069C  6F67               	movwf	??_main& (0+255),b
   433  00069E  0EBA               	movlw	186
   434  0006A0                     u947:
   435  0006A0  2EE8               	decfsz	wreg,f,c
   436  0006A2  D7FE               	bra	u947
   437  0006A4  2F67               	decfsz	??_main& (0+255),f,b
   438  0006A6  D7FC               	bra	u947
   439  0006A8  2F68               	decfsz	(??_main+1)& (0+255),f,b
   440  0006AA  D7FA               	bra	u947
   441  0006AC  F000               	nop	
   442                           
   443                           ;main.c: 122:               }
   444  0006AE  0100               	movlb	0	; () banked
   445  0006B0  4B69               	infsnz	main@i& (0+255),f,b
   446  0006B2  2B6A               	incf	(main@i+1)& (0+255),f,b
   447  0006B4  BF6A               	btfsc	(main@i+1)& (0+255),7,b
   448  0006B6  D7EE               	goto	l1549
   449  0006B8  516A               	movf	(main@i+1)& (0+255),w,b
   450  0006BA  E104               	bnz	u910
   451  0006BC  0E0A               	movlw	10
   452  0006BE  5D69               	subwf	main@i& (0+255),w,b
   453  0006C0  A0D8               	btfss	status,0,c
   454  0006C2  D7E8               	goto	l1549
   455  0006C4                     u910:
   456                           
   457                           ; BSR set to: 0
   458                           ;main.c: 123:               ClearLCD();
   459  0006C4  EC69  F004         	call	_ClearLCD	;wreg free
   460                           
   461                           ;main.c: 124:               robot_mode = 0;
   462  0006C8  0E00               	movlw	0
   463  0006CA  6E2A               	movwf	_robot_mode,c	;volatile
   464  0006CC                     l1557:
   465                           
   466                           ;main.c: 115:           while(PORTCbits.RC3 == 1)
   467  0006CC  B682               	btfsc	3970,3,c	;volatile
   468  0006CE  D7D4               	goto	l1539
   469  0006D0                     u920:
   470                           
   471                           ;main.c: 113:       while(robot_mode == 2)
   472  0006D0  0E02               	movlw	2
   473  0006D2  182A               	xorwf	_robot_mode,w,c	;volatile
   474  0006D4  A4D8               	btfss	status,2,c
   475  0006D6  D7C6               	goto	l1533
   476  0006D8  D7F9               	goto	l1557
   477  0006DA                     __end_of_main:
   478                           	opt callstack 0
   479                           
   480 ;; *************** function _setup *****************
   481 ;; Defined at:
   482 ;;		line 36 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2, status,0, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   496 ;;      Params:         0       0       0       0
   497 ;;      Locals:         0       0       0       0
   498 ;;      Temps:          0       0       0       0
   499 ;;      Totals:         0       0       0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:   11
   503 ;; This function calls:
   504 ;;		_LCD_Init
   505 ;;		_init_RFID
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text1
   512  000910                     __ptext1:
   513                           	opt callstack 0
   514  000910                     _setup:
   515                           	opt callstack 19
   516                           
   517                           ;main.c: 39:     OSCCON = 0x72;
   518                           
   519                           ;incstack = 0
   520  000910  0E72               	movlw	114
   521  000912  6ED3               	movwf	4051,c	;volatile
   522  000914                     l35:
   523  000914  A4D3               	btfss	4051,2,c	;volatile
   524  000916  D7FE               	goto	l35
   525                           
   526                           ;main.c: 41:     INTCONbits.GIEH = 1;
   527  000918  8EF2               	bsf	4082,7,c	;volatile
   528                           
   529                           ;main.c: 42:     INTCONbits.GIEL = 1;
   530  00091A  8CF2               	bsf	4082,6,c	;volatile
   531                           
   532                           ;main.c: 43:     RCONbits.IPEN=1;
   533  00091C  8ED0               	bsf	4048,7,c	;volatile
   534                           
   535                           ;main.c: 45:     LCD_Init();
   536  00091E  EC41  F002         	call	_LCD_Init	;wreg free
   537                           
   538                           ;main.c: 46:     init_RFID();
   539  000922  ECA2  F004         	call	_init_RFID	;wreg free
   540                           
   541                           ;main.c: 48:     TRISCbits.RC3 = 1;
   542  000926  8694               	bsf	3988,3,c	;volatile
   543  000928  0012               	return		;funcret
   544  00092A                     __end_of_setup:
   545                           	opt callstack 0
   546                           
   547 ;; *************** function _init_RFID *****************
   548 ;; Defined at:
   549 ;;		line 12 in file "RFID.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   563 ;;      Params:         0       0       0       0
   564 ;;      Locals:         0       0       0       0
   565 ;;      Temps:          0       0       0       0
   566 ;;      Totals:         0       0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    7
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_setup
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text2
   578  000944                     __ptext2:
   579                           	opt callstack 0
   580  000944                     _init_RFID:
   581                           	opt callstack 22
   582                           
   583                           ;RFID.c: 15:     TRISCbits.RC7 = 1;
   584                           
   585                           ;incstack = 0
   586  000944  8E94               	bsf	3988,7,c	;volatile
   587                           
   588                           ;RFID.c: 18:     SPBRG = 203;
   589  000946  0ECB               	movlw	203
   590  000948  6EAF               	movwf	4015,c	;volatile
   591                           
   592                           ;RFID.c: 19:     SPBRGH = 0;
   593  00094A  0E00               	movlw	0
   594  00094C  6EB0               	movwf	4016,c	;volatile
   595                           
   596                           ;RFID.c: 21:     BAUDCONbits.BRG16=1;
   597  00094E  86AA               	bsf	4010,3,c	;volatile
   598                           
   599                           ;RFID.c: 22:     TXSTAbits.BRGH = 1;
   600  000950  84AC               	bsf	4012,2,c	;volatile
   601                           
   602                           ;RFID.c: 23:     RCSTAbits.CREN = 1;
   603  000952  88AB               	bsf	4011,4,c	;volatile
   604                           
   605                           ;RFID.c: 24:     RCSTAbits.SPEN = 1;
   606  000954  8EAB               	bsf	4011,7,c	;volatile
   607                           
   608                           ;RFID.c: 25:     TXSTAbits.TXEN = 1;
   609  000956  8AAC               	bsf	4012,5,c	;volatile
   610                           
   611                           ;RFID.c: 27:     PIE1bits.RC1IE = 1;
   612  000958  8A9D               	bsf	3997,5,c	;volatile
   613  00095A  0012               	return		;funcret
   614  00095C                     __end_of_init_RFID:
   615                           	opt callstack 0
   616                           
   617 ;; *************** function _LCD_Init *****************
   618 ;; Defined at:
   619 ;;		line 56 in file "LCDIO.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   633 ;;      Params:         0       0       0       0
   634 ;;      Locals:         0       0       0       0
   635 ;;      Temps:          0       1       0       0
   636 ;;      Totals:         0       1       0       0
   637 ;;Total ram usage:        1 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:   10
   640 ;; This function calls:
   641 ;;		_LCDout
   642 ;;		_SendLCD
   643 ;; This function is called by:
   644 ;;		_setup
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text3
   649  000482                     __ptext3:
   650                           	opt callstack 0
   651  000482                     _LCD_Init:
   652                           	opt callstack 19
   653                           
   654                           ;LCDIO.c: 59:  TRISCbits.RC0 = 0;
   655                           
   656                           ;incstack = 0
   657  000482  9094               	bcf	3988,0,c	;volatile
   658                           
   659                           ;LCDIO.c: 60:  TRISCbits.RC1 = 0;
   660  000484  9294               	bcf	3988,1,c	;volatile
   661                           
   662                           ;LCDIO.c: 61:  TRISCbits.RC2 = 0;
   663  000486  9494               	bcf	3988,2,c	;volatile
   664                           
   665                           ;LCDIO.c: 62:  TRISDbits.RD0 = 0;
   666  000488  9095               	bcf	3989,0,c	;volatile
   667                           
   668                           ;LCDIO.c: 63:  TRISDbits.RD1 = 0;
   669  00048A  9295               	bcf	3989,1,c	;volatile
   670                           
   671                           ;LCDIO.c: 64:  TRISAbits.RA6 = 0;
   672  00048C  9C92               	bcf	3986,6,c	;volatile
   673                           
   674                           ;LCDIO.c: 67:  LATDbits.LATD0 = 0;
   675  00048E  908C               	bcf	3980,0,c	;volatile
   676                           
   677                           ;LCDIO.c: 68:  LATDbits.LATD1 = 0;
   678  000490  928C               	bcf	3980,1,c	;volatile
   679                           
   680                           ;LCDIO.c: 69:  LATCbits.LATC2 = 0;
   681  000492  948B               	bcf	3979,2,c	;volatile
   682                           
   683                           ;LCDIO.c: 70:  LATCbits.LATC1 = 0;
   684  000494  928B               	bcf	3979,1,c	;volatile
   685                           
   686                           ;LCDIO.c: 71:  LATCbits.LATC0 = 0;
   687  000496  908B               	bcf	3979,0,c	;volatile
   688                           
   689                           ;LCDIO.c: 72:  LATAbits.LATA6 = 0;
   690  000498  9C89               	bcf	3977,6,c	;volatile
   691                           
   692                           ;LCDIO.c: 75:  _delay((unsigned long)((15)*(8000000/4000.0)));
   693  00049A  0E27               	movlw	39
   694  00049C  0100               	movlb	0	; () banked
   695  00049E  6F65               	movwf	??_LCD_Init& (0+255),b
   696  0004A0  0EF5               	movlw	245
   697  0004A2                     u957:
   698  0004A2  2EE8               	decfsz	wreg,f,c
   699  0004A4  D7FE               	bra	u957
   700  0004A6  2F65               	decfsz	??_LCD_Init& (0+255),f,b
   701  0004A8  D7FC               	bra	u957
   702                           
   703                           ;LCDIO.c: 76:  LCDout(0b0011);
   704  0004AA  0E03               	movlw	3
   705  0004AC  ECF2  F002         	call	_LCDout
   706                           
   707                           ;LCDIO.c: 77:  _delay((unsigned long)((5)*(8000000/4000.0)));
   708  0004B0  0E0D               	movlw	13
   709  0004B2  0100               	movlb	0	; () banked
   710  0004B4  6F65               	movwf	??_LCD_Init& (0+255),b
   711  0004B6  0EFB               	movlw	251
   712  0004B8                     u967:
   713  0004B8  2EE8               	decfsz	wreg,f,c
   714  0004BA  D7FE               	bra	u967
   715  0004BC  2F65               	decfsz	??_LCD_Init& (0+255),f,b
   716  0004BE  D7FC               	bra	u967
   717  0004C0  D000               	nop2	
   718                           
   719                           ;LCDIO.c: 78:  LCDout(0b0011);
   720  0004C2  0E03               	movlw	3
   721  0004C4  ECF2  F002         	call	_LCDout
   722                           
   723                           ;LCDIO.c: 79:  _delay((unsigned long)((200)*(8000000/4000000.0)));
   724  0004C8  0E85               	movlw	133
   725  0004CA                     u977:
   726  0004CA  2EE8               	decfsz	wreg,f,c
   727  0004CC  D7FE               	bra	u977
   728  0004CE  F000               	nop	
   729                           
   730                           ;LCDIO.c: 80:  LCDout(0b0011);
   731  0004D0  0E03               	movlw	3
   732  0004D2  ECF2  F002         	call	_LCDout
   733                           
   734                           ;LCDIO.c: 81:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   735  0004D6  0E21               	movlw	33
   736  0004D8                     u987:
   737  0004D8  2EE8               	decfsz	wreg,f,c
   738  0004DA  D7FE               	bra	u987
   739  0004DC  F000               	nop	
   740                           
   741                           ;LCDIO.c: 82:  LCDout(0b0010);
   742  0004DE  0E02               	movlw	2
   743  0004E0  ECF2  F002         	call	_LCDout
   744                           
   745                           ;LCDIO.c: 83:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   746  0004E4  0E21               	movlw	33
   747  0004E6                     u997:
   748  0004E6  2EE8               	decfsz	wreg,f,c
   749  0004E8  D7FE               	bra	u997
   750  0004EA  F000               	nop	
   751                           
   752                           ;LCDIO.c: 86:  SendLCD(0b00101000,0);
   753  0004EC  0E00               	movlw	0
   754  0004EE  0100               	movlb	0	; () banked
   755  0004F0  6F63               	movwf	SendLCD@type& (0+255),b
   756  0004F2  0E28               	movlw	40
   757  0004F4  EC03  F004         	call	_SendLCD
   758                           
   759                           ;LCDIO.c: 87:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   760  0004F8  0E21               	movlw	33
   761  0004FA                     u1007:
   762  0004FA  2EE8               	decfsz	wreg,f,c
   763  0004FC  D7FE               	bra	u1007
   764  0004FE  F000               	nop	
   765                           
   766                           ;LCDIO.c: 90:  SendLCD(0b00001000,0);
   767  000500  0E00               	movlw	0
   768  000502  0100               	movlb	0	; () banked
   769  000504  6F63               	movwf	SendLCD@type& (0+255),b
   770  000506  0E08               	movlw	8
   771  000508  EC03  F004         	call	_SendLCD
   772                           
   773                           ;LCDIO.c: 91:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   774  00050C  0E21               	movlw	33
   775  00050E                     u1017:
   776  00050E  2EE8               	decfsz	wreg,f,c
   777  000510  D7FE               	bra	u1017
   778  000512  F000               	nop	
   779                           
   780                           ;LCDIO.c: 94:  SendLCD(0b00000001,0);
   781  000514  0E00               	movlw	0
   782  000516  0100               	movlb	0	; () banked
   783  000518  6F63               	movwf	SendLCD@type& (0+255),b
   784  00051A  0E01               	movlw	1
   785  00051C  EC03  F004         	call	_SendLCD
   786                           
   787                           ;LCDIO.c: 95:  _delay((unsigned long)((5)*(8000000/4000.0)));
   788  000520  0E0D               	movlw	13
   789  000522  0100               	movlb	0	; () banked
   790  000524  6F65               	movwf	??_LCD_Init& (0+255),b
   791  000526  0EFB               	movlw	251
   792  000528                     u1027:
   793  000528  2EE8               	decfsz	wreg,f,c
   794  00052A  D7FE               	bra	u1027
   795  00052C  2F65               	decfsz	??_LCD_Init& (0+255),f,b
   796  00052E  D7FC               	bra	u1027
   797  000530  D000               	nop2	
   798                           
   799                           ;LCDIO.c: 98:  SendLCD(0b00000110,0);
   800  000532  0E00               	movlw	0
   801  000534  0100               	movlb	0	; () banked
   802  000536  6F63               	movwf	SendLCD@type& (0+255),b
   803  000538  0E06               	movlw	6
   804  00053A  EC03  F004         	call	_SendLCD
   805                           
   806                           ;LCDIO.c: 99:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   807  00053E  0E21               	movlw	33
   808  000540                     u1037:
   809  000540  2EE8               	decfsz	wreg,f,c
   810  000542  D7FE               	bra	u1037
   811  000544  F000               	nop	
   812                           
   813                           ;LCDIO.c: 102:  SendLCD(0b00001100,0);
   814  000546  0E00               	movlw	0
   815  000548  0100               	movlb	0	; () banked
   816  00054A  6F63               	movwf	SendLCD@type& (0+255),b
   817  00054C  0E0C               	movlw	12
   818  00054E  EC03  F004         	call	_SendLCD
   819                           
   820                           ;LCDIO.c: 103:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   821  000552  0E21               	movlw	33
   822  000554                     u1047:
   823  000554  2EE8               	decfsz	wreg,f,c
   824  000556  D7FE               	bra	u1047
   825  000558  F000               	nop	
   826  00055A  0012               	return		;funcret
   827  00055C                     __end_of_LCD_Init:
   828                           	opt callstack 0
   829                           
   830 ;; *************** function _LCD_String *****************
   831 ;; Defined at:
   832 ;;		line 119 in file "LCDIO.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  string          2    5[BANK0 ] PTR unsigned char 
   835 ;;		 -> STR_3(16), STR_2(16), STR_1(16), 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   847 ;;      Params:         0       2       0       0
   848 ;;      Locals:         0       0       0       0
   849 ;;      Temps:          0       0       0       0
   850 ;;      Totals:         0       2       0       0
   851 ;;Total ram usage:        2 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:   10
   854 ;; This function calls:
   855 ;;		_SendLCD
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text4
   862  0007CC                     __ptext4:
   863                           	opt callstack 0
   864  0007CC                     _LCD_String:
   865                           	opt callstack 20
   866                           
   867                           ;LCDIO.c: 121: while(*string != 0){
   868                           
   869                           ;incstack = 0
   870  0007CC  D012               	goto	l1529
   871  0007CE                     l1523:
   872                           
   873                           ;LCDIO.c: 124: SendLCD(*string++,1);
   874  0007CE  0E01               	movlw	1
   875  0007D0  0100               	movlb	0	; () banked
   876  0007D2  6F63               	movwf	SendLCD@type& (0+255),b
   877  0007D4  C065  FFF6         	movff	LCD_String@string,tblptrl
   878  0007D8  C066  FFF7         	movff	LCD_String@string+1,tblptrh
   879  0007DC                     	if	0	;tblptru may be non-zero
   880  0007DC                     	endif
   881  0007DC                     	if	0	;tblptru may be non-zero
   882  0007DC                     	endif
   883  0007DC  0008               	tblrd		*
   884  0007DE  50F5               	movf	tablat,w,c
   885  0007E0  EC03  F004         	call	_SendLCD
   886  0007E4  0100               	movlb	0	; () banked
   887  0007E6  4B65               	infsnz	LCD_String@string& (0+255),f,b
   888  0007E8  2B66               	incf	(LCD_String@string+1)& (0+255),f,b
   889                           
   890                           ; BSR set to: 0
   891                           ;LCDIO.c: 125:  _delay((unsigned long)((50)*(8000000/4000000.0)));
   892  0007EA  0E21               	movlw	33
   893  0007EC                     u1057:
   894  0007EC  2EE8               	decfsz	wreg,f,c
   895  0007EE  D7FE               	bra	u1057
   896  0007F0  F000               	nop	
   897  0007F2                     l1529:
   898                           
   899                           ;LCDIO.c: 121: while(*string != 0){
   900  0007F2  C065  FFF6         	movff	LCD_String@string,tblptrl
   901  0007F6  C066  FFF7         	movff	LCD_String@string+1,tblptrh
   902  0007FA                     	if	0	;tblptru may be non-zero
   903  0007FA                     	endif
   904  0007FA                     	if	0	;tblptru may be non-zero
   905  0007FA                     	endif
   906  0007FA  0008               	tblrd		*
   907  0007FC  50F5               	movf	tablat,w,c
   908  0007FE  0900               	iorlw	0
   909  000800  B4D8               	btfsc	status,2,c
   910  000802  0012               	return	
   911  000804  D7E4               	goto	l1523
   912  000806                     __end_of_LCD_String:
   913                           	opt callstack 0
   914                           
   915 ;; *************** function _ClearLCD *****************
   916 ;; Defined at:
   917 ;;		line 137 in file "LCDIO.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   931 ;;      Params:         0       0       0       0
   932 ;;      Locals:         0       0       0       0
   933 ;;      Temps:          0       1       0       0
   934 ;;      Totals:         0       1       0       0
   935 ;;Total ram usage:        1 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:   10
   938 ;; This function calls:
   939 ;;		_SendLCD
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text5
   946  0008D2                     __ptext5:
   947                           	opt callstack 0
   948  0008D2                     _ClearLCD:
   949                           	opt callstack 20
   950                           
   951                           ;LCDIO.c: 138:     SendLCD(0b00000001,0);
   952                           
   953                           ;incstack = 0
   954  0008D2  0E00               	movlw	0
   955  0008D4  0100               	movlb	0	; () banked
   956  0008D6  6F63               	movwf	SendLCD@type& (0+255),b
   957  0008D8  0E01               	movlw	1
   958  0008DA  EC03  F004         	call	_SendLCD
   959                           
   960                           ;LCDIO.c: 139:     _delay((unsigned long)((5)*(8000000/4000.0)));
   961  0008DE  0E0D               	movlw	13
   962  0008E0  0100               	movlb	0	; () banked
   963  0008E2  6F65               	movwf	??_ClearLCD& (0+255),b
   964  0008E4  0EFB               	movlw	251
   965  0008E6                     u1067:
   966  0008E6  2EE8               	decfsz	wreg,f,c
   967  0008E8  D7FE               	bra	u1067
   968  0008EA  2F65               	decfsz	??_ClearLCD& (0+255),f,b
   969  0008EC  D7FC               	bra	u1067
   970  0008EE  D000               	nop2	
   971  0008F0  0012               	return		;funcret
   972  0008F2                     __end_of_ClearLCD:
   973                           	opt callstack 0
   974                           
   975 ;; *************** function _SendLCD *****************
   976 ;; Defined at:
   977 ;;		line 44 in file "LCDIO.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  Byte            1    wreg     unsigned char 
   980 ;;  type            1    3[BANK0 ] unsigned char 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  Byte            1    4[BANK0 ] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   992 ;;      Params:         0       1       0       0
   993 ;;      Locals:         0       1       0       0
   994 ;;      Temps:          0       0       0       0
   995 ;;      Totals:         0       2       0       0
   996 ;;Total ram usage:        2 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    9
   999 ;; This function calls:
  1000 ;;		_LCDout
  1001 ;; This function is called by:
  1002 ;;		_LCD_Init
  1003 ;;		_LCD_String
  1004 ;;		_ClearLCD
  1005 ;;		_ShiftLeft
  1006 ;;		_ShiftRight
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text6
  1011  000806                     __ptext6:
  1012                           	opt callstack 0
  1013  000806                     _SendLCD:
  1014                           	opt callstack 19
  1015                           
  1016                           ;incstack = 0
  1017                           ;SendLCD@Byte stored from wreg
  1018  000806  0100               	movlb	0	; () banked
  1019  000808  6F64               	movwf	SendLCD@Byte& (0+255),b
  1020                           
  1021                           ;LCDIO.c: 47:  LATAbits.LATA6 = type;
  1022  00080A  0100               	movlb	0	; () banked
  1023  00080C  B163               	btfsc	SendLCD@type& (0+255),0,b
  1024  00080E  D002               	bra	u865
  1025  000810  9C89               	bcf	3977,6,c	;volatile
  1026  000812  D001               	bra	u866
  1027  000814                     u865:
  1028  000814  8C89               	bsf	3977,6,c	;volatile
  1029  000816                     u866:
  1030                           
  1031                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
  1032  000816  0100               	movlb	0	; () banked
  1033  000818  3964               	swapf	SendLCD@Byte& (0+255),w,b
  1034  00081A  0B0F               	andlw	15
  1035  00081C  0B0F               	andlw	15
  1036  00081E  ECF2  F002         	call	_LCDout
  1037                           
  1038                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
  1039  000822  0E06               	movlw	6
  1040  000824                     u1077:
  1041  000824  2EE8               	decfsz	wreg,f,c
  1042  000826  D7FE               	bra	u1077
  1043  000828  D000               	nop2	
  1044                           
  1045                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
  1046  00082A  0100               	movlb	0	; () banked
  1047  00082C  5164               	movf	SendLCD@Byte& (0+255),w,b
  1048  00082E  0B0F               	andlw	15
  1049  000830  ECF2  F002         	call	_LCDout
  1050                           
  1051                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1052  000834  0E21               	movlw	33
  1053  000836                     u1087:
  1054  000836  2EE8               	decfsz	wreg,f,c
  1055  000838  D7FE               	bra	u1087
  1056  00083A  F000               	nop	
  1057  00083C  0012               	return		;funcret
  1058  00083E                     __end_of_SendLCD:
  1059                           	opt callstack 0
  1060                           
  1061 ;; *************** function _LCDout *****************
  1062 ;; Defined at:
  1063 ;;		line 31 in file "LCDIO.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  number          1    wreg     unsigned char 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  number          1    2[BANK0 ] unsigned char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1077 ;;      Params:         0       0       0       0
  1078 ;;      Locals:         0       1       0       0
  1079 ;;      Temps:          0       1       0       0
  1080 ;;      Totals:         0       2       0       0
  1081 ;;Total ram usage:        2 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    8
  1084 ;; This function calls:
  1085 ;;		_E_TOG
  1086 ;; This function is called by:
  1087 ;;		_SendLCD
  1088 ;;		_LCD_Init
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text7
  1093  0005E4                     __ptext7:
  1094                           	opt callstack 0
  1095  0005E4                     _LCDout:
  1096                           	opt callstack 19
  1097                           
  1098                           ;incstack = 0
  1099                           ;LCDout@number stored from wreg
  1100  0005E4  0100               	movlb	0	; () banked
  1101  0005E6  6F62               	movwf	LCDout@number& (0+255),b
  1102                           
  1103                           ;LCDIO.c: 33:  LATCbits.LATC1 = (0b0001 & number);
  1104  0005E8  C062  F061         	movff	LCDout@number,??_LCDout
  1105  0005EC  0E01               	movlw	1
  1106  0005EE  0100               	movlb	0	; () banked
  1107  0005F0  1761               	andwf	??_LCDout& (0+255),f,b
  1108  0005F2  4761               	rlncf	??_LCDout& (0+255),f,b
  1109  0005F4  508B               	movf	3979,w,c	;volatile
  1110  0005F6  1961               	xorwf	??_LCDout& (0+255),w,b
  1111  0005F8  0BFD               	andlw	-3
  1112  0005FA  1961               	xorwf	??_LCDout& (0+255),w,b
  1113  0005FC  6E8B               	movwf	3979,c	;volatile
  1114                           
  1115                           ;LCDIO.c: 34:  LATCbits.LATC2 = (0b0010 & number) >> 1;
  1116  0005FE  C062  F061         	movff	LCDout@number,??_LCDout
  1117  000602  90D8               	bcf	status,0,c
  1118  000604  3361               	rrcf	??_LCDout& (0+255),f,b
  1119  000606  0E01               	movlw	1
  1120  000608  1761               	andwf	??_LCDout& (0+255),f,b
  1121  00060A  4761               	rlncf	??_LCDout& (0+255),f,b
  1122  00060C  4761               	rlncf	??_LCDout& (0+255),f,b
  1123  00060E  508B               	movf	3979,w,c	;volatile
  1124  000610  1961               	xorwf	??_LCDout& (0+255),w,b
  1125  000612  0BFB               	andlw	-5
  1126  000614  1961               	xorwf	??_LCDout& (0+255),w,b
  1127  000616  6E8B               	movwf	3979,c	;volatile
  1128                           
  1129                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
  1130  000618  C062  F061         	movff	LCDout@number,??_LCDout
  1131  00061C  90D8               	bcf	status,0,c
  1132  00061E  3361               	rrcf	??_LCDout& (0+255),f,b
  1133  000620  90D8               	bcf	status,0,c
  1134  000622  3361               	rrcf	??_LCDout& (0+255),f,b
  1135  000624  0E01               	movlw	1
  1136  000626  1761               	andwf	??_LCDout& (0+255),f,b
  1137  000628  508C               	movf	3980,w,c	;volatile
  1138  00062A  1961               	xorwf	??_LCDout& (0+255),w,b
  1139  00062C  0BFE               	andlw	-2
  1140  00062E  1961               	xorwf	??_LCDout& (0+255),w,b
  1141  000630  6E8C               	movwf	3980,c	;volatile
  1142                           
  1143                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
  1144  000632  C062  F061         	movff	LCDout@number,??_LCDout
  1145  000636  90D8               	bcf	status,0,c
  1146  000638  3361               	rrcf	??_LCDout& (0+255),f,b
  1147  00063A  90D8               	bcf	status,0,c
  1148  00063C  3361               	rrcf	??_LCDout& (0+255),f,b
  1149  00063E  90D8               	bcf	status,0,c
  1150  000640  3361               	rrcf	??_LCDout& (0+255),f,b
  1151  000642  0E01               	movlw	1
  1152  000644  1761               	andwf	??_LCDout& (0+255),f,b
  1153  000646  4761               	rlncf	??_LCDout& (0+255),f,b
  1154  000648  508C               	movf	3980,w,c	;volatile
  1155  00064A  1961               	xorwf	??_LCDout& (0+255),w,b
  1156  00064C  0BFD               	andlw	-3
  1157  00064E  1961               	xorwf	??_LCDout& (0+255),w,b
  1158  000650  6E8C               	movwf	3980,c	;volatile
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;LCDIO.c: 39:  E_TOG();
  1162  000652  ECAE  F004         	call	_E_TOG	;wreg free
  1163                           
  1164                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1165  000656  0E03               	movlw	3
  1166  000658                     u1097:
  1167  000658  2EE8               	decfsz	wreg,f,c
  1168  00065A  D7FE               	bra	u1097
  1169  00065C  F000               	nop	
  1170  00065E  0012               	return		;funcret
  1171  000660                     __end_of_LCDout:
  1172                           	opt callstack 0
  1173                           
  1174 ;; *************** function _E_TOG *****************
  1175 ;; Defined at:
  1176 ;;		line 23 in file "LCDIO.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1190 ;;      Params:         0       0       0       0
  1191 ;;      Locals:         0       0       0       0
  1192 ;;      Temps:          0       0       0       0
  1193 ;;      Totals:         0       0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    7
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_LCDout
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text8
  1205  00095C                     __ptext8:
  1206                           	opt callstack 0
  1207  00095C                     _E_TOG:
  1208                           	opt callstack 19
  1209                           
  1210                           ;LCDIO.c: 25: LATCbits.LATC0 = 1;
  1211                           
  1212                           ;incstack = 0
  1213  00095C  808B               	bsf	3979,0,c	;volatile
  1214                           
  1215                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1216  00095E  0E03               	movlw	3
  1217  000960                     u1107:
  1218  000960  2EE8               	decfsz	wreg,f,c
  1219  000962  D7FE               	bra	u1107
  1220  000964  F000               	nop	
  1221                           
  1222                           ;LCDIO.c: 27: LATCbits.LATC0 = 0;
  1223  000966  908B               	bcf	3979,0,c	;volatile
  1224  000968  0012               	return		;funcret
  1225  00096A                     __end_of_E_TOG:
  1226                           	opt callstack 0
  1227                           
  1228 ;; *************** function _InterruptHandlerLow *****************
  1229 ;; Defined at:
  1230 ;;		line 84 in file "main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		None
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1244 ;;      Params:         0       0       0       0
  1245 ;;      Locals:         0       0       0       0
  1246 ;;      Temps:          0       1       0       0
  1247 ;;      Totals:         0       1       0       0
  1248 ;;Total ram usage:        1 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    6
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		Interrupt level 1
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	intcodelo
  1259  000018                     __pintcodelo:
  1260                           	opt callstack 0
  1261  000018                     _InterruptHandlerLow:
  1262                           	opt callstack 19
  1263                           
  1264                           ;incstack = 0
  1265  000018  8037               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1266  00001A  CFE0 F060          	movff	bsr,??_InterruptHandlerLow
  1267  00001E  C060  FFE0         	movff	??_InterruptHandlerLow,bsr
  1268  000022  9037               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1269  000024  0010               	retfie	
  1270  000026                     __end_of_InterruptHandlerLow:
  1271                           	opt callstack 0
  1272                           
  1273 ;; *************** function _InterruptHandlerHigh *****************
  1274 ;; Defined at:
  1275 ;;		line 52 in file "main.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  throwaway       1    0        unsigned char 
  1280 ;;  RFID_flag       1   39[COMRAM] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1290 ;;      Params:         0       0       0       0
  1291 ;;      Locals:         2       0       0       0
  1292 ;;      Temps:          8       0       0       0
  1293 ;;      Totals:        10       0       0       0
  1294 ;;Total ram usage:       10 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    5
  1297 ;; This function calls:
  1298 ;;		_check_RFID
  1299 ;;		_processRFID
  1300 ;; This function is called by:
  1301 ;;		Interrupt level 2
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	intcode
  1306  000008                     __pintcode:
  1307                           	opt callstack 0
  1308  000008                     _InterruptHandlerHigh:
  1309                           	opt callstack 19
  1310                           
  1311                           ;incstack = 0
  1312  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1313  00000A  EF6D  F003         	goto	int_func
  1314                           
  1315                           	psect	intcode_body
  1316  0006DA                     __pintcode_body:
  1317                           	opt callstack 19
  1318  0006DA                     int_func:
  1319                           	opt callstack 19
  1320  0006DA  CFE1 F01F          	movff	fsr1l,??_InterruptHandlerHigh
  1321  0006DE  CFE2 F020          	movff	fsr1h,??_InterruptHandlerHigh+1
  1322  0006E2  CFD9 F021          	movff	fsr2l,??_InterruptHandlerHigh+2
  1323  0006E6  CFDA F022          	movff	fsr2h,??_InterruptHandlerHigh+3
  1324  0006EA  CFF6 F023          	movff	tblptrl,??_InterruptHandlerHigh+4
  1325  0006EE  CFF7 F024          	movff	tblptrh,??_InterruptHandlerHigh+5
  1326  0006F2  CFF8 F025          	movff	tblptru,??_InterruptHandlerHigh+6
  1327  0006F6  CFF5 F026          	movff	tablat,??_InterruptHandlerHigh+7
  1328                           
  1329                           ;main.c: 58:     if((PIR1bits.RCIF) && (robot_mode == 0))
  1330  0006FA  AA9E               	btfss	3998,5,c	;volatile
  1331  0006FC  D018               	goto	i2l43
  1332  0006FE  502A               	movf	_robot_mode,w,c	;volatile
  1333  000700  A4D8               	btfss	status,2,c
  1334  000702  D015               	goto	i2l43
  1335                           
  1336                           ;main.c: 59:     {;main.c: 61:         static char RFIDbuf[12];;main.c: 65:         char
      +                           RFID_flag = processRFID(RFIDbuf, RCREG);
  1337  000704  0E2B               	movlw	low InterruptHandlerHigh@RFIDbuf
  1338  000706  6E06               	movwf	processRFID@RFIDbuf,c
  1339  000708  0E00               	movlw	high InterruptHandlerHigh@RFIDbuf
  1340  00070A  6E07               	movwf	processRFID@RFIDbuf+1,c
  1341  00070C  CFAE F008          	movff	4014,processRFID@latestChar	;volatile
  1342  000710  ECAE  F002         	call	_processRFID	;wreg free
  1343  000714  6E28               	movwf	InterruptHandlerHigh@RFID_flag,c
  1344                           
  1345                           ;main.c: 69:         if(RFID_flag == 1)
  1346  000716  0428               	decf	InterruptHandlerHigh@RFID_flag,w,c
  1347  000718  A4D8               	btfss	status,2,c
  1348  00071A  D00A               	goto	i2l48
  1349                           
  1350                           ;main.c: 70:         {;main.c: 71:             check_RFID(RFIDbuf);
  1351  00071C  0E2B               	movlw	low InterruptHandlerHigh@RFIDbuf
  1352  00071E  6E07               	movwf	check_RFID@dataBuf,c
  1353  000720  0E00               	movlw	high InterruptHandlerHigh@RFIDbuf
  1354  000722  6E08               	movwf	check_RFID@dataBuf+1,c
  1355  000724  EC99  F001         	call	_check_RFID	;wreg free
  1356                           
  1357                           ;main.c: 72:             robot_mode = 1;
  1358  000728  0E01               	movlw	1
  1359  00072A  6E2A               	movwf	_robot_mode,c	;volatile
  1360  00072C  D001               	goto	i2l48
  1361  00072E                     i2l43:
  1362  00072E  50AE               	movf	4014,w,c	;volatile
  1363  000730                     i2l48:
  1364  000730  C026  FFF5         	movff	??_InterruptHandlerHigh+7,tablat
  1365  000734  C025  FFF8         	movff	??_InterruptHandlerHigh+6,tblptru
  1366  000738  C024  FFF7         	movff	??_InterruptHandlerHigh+5,tblptrh
  1367  00073C  C023  FFF6         	movff	??_InterruptHandlerHigh+4,tblptrl
  1368  000740  C022  FFDA         	movff	??_InterruptHandlerHigh+3,fsr2h
  1369  000744  C021  FFD9         	movff	??_InterruptHandlerHigh+2,fsr2l
  1370  000748  C020  FFE2         	movff	??_InterruptHandlerHigh+1,fsr1h
  1371  00074C  C01F  FFE1         	movff	??_InterruptHandlerHigh,fsr1l
  1372  000750  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1373  000752  0011               	retfie		f
  1374  000754                     __end_of_InterruptHandlerHigh:
  1375                           	opt callstack 0
  1376                           
  1377 ;; *************** function _processRFID *****************
  1378 ;; Defined at:
  1379 ;;		line 32 in file "RFID.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  RFIDbuf         2    5[COMRAM] PTR unsigned char 
  1382 ;;		 -> InterruptHandlerHigh@RFIDbuf(12), 
  1383 ;;  latestChar      1    7[COMRAM] unsigned char 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  i               1   10[COMRAM] unsigned char 
  1386 ;;  i               2    8[COMRAM] int 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      unsigned char 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1396 ;;      Params:         3       0       0       0
  1397 ;;      Locals:         3       0       0       0
  1398 ;;      Temps:          0       0       0       0
  1399 ;;      Totals:         6       0       0       0
  1400 ;;Total ram usage:        6 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    4
  1403 ;; This function calls:
  1404 ;;		_SetLine
  1405 ;;		i2_ClearLCD
  1406 ;;		i2_SendLCD
  1407 ;; This function is called by:
  1408 ;;		_InterruptHandlerHigh
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text11
  1413  00055C                     __ptext11:
  1414                           	opt callstack 0
  1415  00055C                     _processRFID:
  1416                           	opt callstack 19
  1417                           
  1418                           ;RFID.c: 32: char processRFID(char RFIDbuf[], char latestChar);RFID.c: 33: {;RFID.c: 37:
      +                               static char position_in_buf;;RFID.c: 40:     if(latestChar == 0x03)
  1419                           
  1420                           ;incstack = 0
  1421  00055C  0E03               	movlw	3
  1422  00055E  1808               	xorwf	processRFID@latestChar,w,c
  1423  000560  A4D8               	btfss	status,2,c
  1424  000562  D020               	goto	i2l1325
  1425                           
  1426                           ;RFID.c: 41:     {;RFID.c: 42:         ClearLCD();
  1427  000564  EC95  F004         	call	i2_ClearLCD	;wreg free
  1428                           
  1429                           ;RFID.c: 43:         SetLine(1);
  1430  000568  0E01               	movlw	1
  1431  00056A  EC52  F004         	call	_SetLine
  1432                           
  1433                           ;RFID.c: 44:         for(int i=0;i<10;i++)
  1434  00056E  0E00               	movlw	0
  1435  000570  6E0A               	movwf	processRFID@i+1,c
  1436  000572  0E00               	movlw	0
  1437  000574  6E09               	movwf	processRFID@i,c
  1438  000576                     i2l1313:
  1439                           
  1440                           ;RFID.c: 45:         {;RFID.c: 46:             SendLCD(RFIDbuf[i],1);
  1441  000576  0E01               	movlw	1
  1442  000578  6E03               	movwf	i2SendLCD@type,c
  1443  00057A  5009               	movf	processRFID@i,w,c
  1444  00057C  2406               	addwf	processRFID@RFIDbuf,w,c
  1445  00057E  6ED9               	movwf	fsr2l,c
  1446  000580  500A               	movf	processRFID@i+1,w,c
  1447  000582  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  1448  000584  6EDA               	movwf	fsr2h,c
  1449  000586  50DF               	movf	indf2,w,c
  1450  000588  EC3A  F004         	call	i2_SendLCD
  1451                           
  1452                           ;RFID.c: 47:         }
  1453  00058C  4A09               	infsnz	processRFID@i,f,c
  1454  00058E  2A0A               	incf	processRFID@i+1,f,c
  1455  000590  BE0A               	btfsc	processRFID@i+1,7,c
  1456  000592  D7F1               	goto	i2l1313
  1457  000594  500A               	movf	processRFID@i+1,w,c
  1458  000596  E104               	bnz	i2u54_40
  1459  000598  0E0A               	movlw	10
  1460  00059A  5C09               	subwf	processRFID@i,w,c
  1461  00059C  A0D8               	btfss	status,0,c
  1462  00059E  D7EB               	goto	i2l1313
  1463  0005A0                     i2u54_40:
  1464                           
  1465                           ;RFID.c: 49:         return 1;
  1466  0005A0  0E01               	movlw	1
  1467  0005A2  0012               	return	
  1468  0005A4                     i2l1325:
  1469                           
  1470                           ;RFID.c: 52:     {;RFID.c: 55:        if(latestChar == 0x02)
  1471  0005A4  0E02               	movlw	2
  1472  0005A6  1808               	xorwf	processRFID@latestChar,w,c
  1473  0005A8  A4D8               	btfss	status,2,c
  1474  0005AA  D012               	goto	i2l1345
  1475                           
  1476                           ;RFID.c: 56:         {;RFID.c: 57:            position_in_buf = 0;
  1477  0005AC  0E00               	movlw	0
  1478  0005AE  6E29               	movwf	processRFID@position_in_buf,c
  1479                           
  1480                           ;RFID.c: 58:            for(char i=0 ;i<12 ;i++)
  1481  0005B0  0E00               	movlw	0
  1482  0005B2  6E0B               	movwf	processRFID@i_1105,c
  1483  0005B4                     i2l1333:
  1484                           
  1485                           ;RFID.c: 59:            {;RFID.c: 60:                RFIDbuf[i] = 0;
  1486  0005B4  500B               	movf	processRFID@i_1105,w,c
  1487  0005B6  2406               	addwf	processRFID@RFIDbuf,w,c
  1488  0005B8  6ED9               	movwf	fsr2l,c
  1489  0005BA  0E00               	movlw	0
  1490  0005BC  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  1491  0005BE  6EDA               	movwf	fsr2h,c
  1492  0005C0  0E00               	movlw	0
  1493  0005C2  6EDF               	movwf	indf2,c
  1494                           
  1495                           ;RFID.c: 61:            }
  1496  0005C4  2A0B               	incf	processRFID@i_1105,f,c
  1497  0005C6  0E0B               	movlw	11
  1498  0005C8  640B               	cpfsgt	processRFID@i_1105,c
  1499  0005CA  D7F4               	goto	i2l1333
  1500  0005CC                     i2u56_40:
  1501                           
  1502                           ;RFID.c: 63:            return 0;
  1503  0005CC  0E00               	movlw	0
  1504  0005CE  0012               	return	
  1505  0005D0                     i2l1345:
  1506                           
  1507                           ;RFID.c: 67:         {;RFID.c: 68:             RFIDbuf[position_in_buf] = latestChar;
  1508  0005D0  5029               	movf	processRFID@position_in_buf,w,c
  1509  0005D2  2406               	addwf	processRFID@RFIDbuf,w,c
  1510  0005D4  6ED9               	movwf	fsr2l,c
  1511  0005D6  0E00               	movlw	0
  1512  0005D8  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  1513  0005DA  6EDA               	movwf	fsr2h,c
  1514  0005DC  C008  FFDF         	movff	processRFID@latestChar,indf2
  1515                           
  1516                           ;RFID.c: 69:             position_in_buf++;
  1517  0005E0  2A29               	incf	processRFID@position_in_buf,f,c
  1518  0005E2  D7F4               	goto	i2u56_40
  1519  0005E4                     __end_of_processRFID:
  1520                           	opt callstack 0
  1521                           
  1522 ;; *************** function i2_ClearLCD *****************
  1523 ;; Defined at:
  1524 ;;		line 137 in file "LCDIO.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1538 ;;      Params:         0       0       0       0
  1539 ;;      Locals:         0       0       0       0
  1540 ;;      Temps:          1       0       0       0
  1541 ;;      Totals:         1       0       0       0
  1542 ;;Total ram usage:        1 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    3
  1545 ;; This function calls:
  1546 ;;		i2_SendLCD
  1547 ;; This function is called by:
  1548 ;;		_processRFID
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text12
  1553  00092A                     __ptext12:
  1554                           	opt callstack 0
  1555  00092A                     i2_ClearLCD:
  1556                           	opt callstack 19
  1557                           
  1558                           ;LCDIO.c: 138:     SendLCD(0b00000001,0);
  1559                           
  1560                           ;incstack = 0
  1561  00092A  0E00               	movlw	0
  1562  00092C  6E03               	movwf	i2SendLCD@type,c
  1563  00092E  0E01               	movlw	1
  1564  000930  EC3A  F004         	call	i2_SendLCD
  1565                           
  1566                           ;LCDIO.c: 139:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1567  000934  0E0D               	movlw	13
  1568  000936  6E05               	movwf	??i2_ClearLCD& (0+255),c
  1569  000938  0EFC               	movlw	252
  1570  00093A                     i2u111_47:
  1571  00093A  2EE8               	decfsz	wreg,f,c
  1572  00093C  D7FE               	bra	i2u111_47
  1573  00093E  2E05               	decfsz	??i2_ClearLCD& (0+255),f,c
  1574  000940  D7FC               	bra	i2u111_47
  1575  000942  0012               	return		;funcret
  1576  000944                     __end_ofi2_ClearLCD:
  1577                           	opt callstack 0
  1578                           
  1579 ;; *************** function _check_RFID *****************
  1580 ;; Defined at:
  1581 ;;		line 77 in file "RFID.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  dataBuf         2    6[COMRAM] PTR unsigned char 
  1584 ;;		 -> InterruptHandlerHigh@RFIDbuf(12), 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  i               2   28[COMRAM] int 
  1587 ;;  hexBuf         12   10[COMRAM] unsigned char [12]
  1588 ;;  checksum        1   27[COMRAM] unsigned char 
  1589 ;;  byte5           1   26[COMRAM] unsigned char 
  1590 ;;  byte4           1   25[COMRAM] unsigned char 
  1591 ;;  byte3           1   24[COMRAM] unsigned char 
  1592 ;;  byte2           1   23[COMRAM] unsigned char 
  1593 ;;  byte1           1   22[COMRAM] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1603 ;;      Params:         2       0       0       0
  1604 ;;      Locals:        20       0       0       0
  1605 ;;      Temps:          2       0       0       0
  1606 ;;      Totals:        24       0       0       0
  1607 ;;Total ram usage:       24 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    4
  1610 ;; This function calls:
  1611 ;;		_SetLine
  1612 ;;		i2_LCD_String
  1613 ;; This function is called by:
  1614 ;;		_InterruptHandlerHigh
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text13
  1619  000332                     __ptext13:
  1620                           	opt callstack 0
  1621  000332                     _check_RFID:
  1622                           	opt callstack 19
  1623                           
  1624                           ;RFID.c: 77: void check_RFID(char dataBuf[]);RFID.c: 78: {;RFID.c: 80:     char hexBuf[1
      +                          2];;RFID.c: 82:     for(int i=0; i<12;i++)
  1625                           
  1626                           ;incstack = 0
  1627  000332  0E00               	movlw	0
  1628  000334  6E1E               	movwf	check_RFID@i+1,c
  1629  000336  0E00               	movlw	0
  1630  000338  6E1D               	movwf	check_RFID@i,c
  1631  00033A                     i2l1359:
  1632                           
  1633                           ;RFID.c: 83:     {;RFID.c: 84:         if ((dataBuf[i] >= '0') && (dataBuf[i] <= '9'))
  1634  00033A  501D               	movf	check_RFID@i,w,c
  1635  00033C  2407               	addwf	check_RFID@dataBuf,w,c
  1636  00033E  6ED9               	movwf	fsr2l,c
  1637  000340  501E               	movf	check_RFID@i+1,w,c
  1638  000342  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1639  000344  6EDA               	movwf	fsr2h,c
  1640  000346  0E2F               	movlw	47
  1641  000348  64DF               	cpfsgt	indf2,c
  1642  00034A  D018               	goto	i2l1365
  1643  00034C  501D               	movf	check_RFID@i,w,c
  1644  00034E  2407               	addwf	check_RFID@dataBuf,w,c
  1645  000350  6ED9               	movwf	fsr2l,c
  1646  000352  501E               	movf	check_RFID@i+1,w,c
  1647  000354  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1648  000356  6EDA               	movwf	fsr2h,c
  1649  000358  0E3A               	movlw	58
  1650  00035A  60DF               	cpfslt	indf2,c
  1651  00035C  D00F               	goto	i2l1365
  1652                           
  1653                           ;RFID.c: 85:         {;RFID.c: 86:             hexBuf[i] = dataBuf[i] - '0';
  1654  00035E  0E0B               	movlw	low check_RFID@hexBuf
  1655  000360  241D               	addwf	check_RFID@i,w,c
  1656  000362  6ED9               	movwf	fsr2l,c
  1657  000364  0E00               	movlw	high check_RFID@hexBuf
  1658  000366  201E               	addwfc	check_RFID@i+1,w,c
  1659  000368  6EDA               	movwf	fsr2h,c
  1660  00036A  501D               	movf	check_RFID@i,w,c
  1661  00036C  2407               	addwf	check_RFID@dataBuf,w,c
  1662  00036E  6EE1               	movwf	fsr1l,c
  1663  000370  501E               	movf	check_RFID@i+1,w,c
  1664  000372  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1665  000374  6EE2               	movwf	fsr1h,c
  1666  000376  50E7               	movf	indf1,w,c
  1667  000378  0FD0               	addlw	208
  1668  00037A  D020               	goto	L1
  1669  00037C                     i2l1365:
  1670  00037C  501D               	movf	check_RFID@i,w,c
  1671  00037E  2407               	addwf	check_RFID@dataBuf,w,c
  1672  000380  6ED9               	movwf	fsr2l,c
  1673  000382  501E               	movf	check_RFID@i+1,w,c
  1674  000384  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1675  000386  6EDA               	movwf	fsr2h,c
  1676  000388  0E40               	movlw	64
  1677  00038A  64DF               	cpfsgt	indf2,c
  1678  00038C  D018               	goto	i2l1371
  1679  00038E  501D               	movf	check_RFID@i,w,c
  1680  000390  2407               	addwf	check_RFID@dataBuf,w,c
  1681  000392  6ED9               	movwf	fsr2l,c
  1682  000394  501E               	movf	check_RFID@i+1,w,c
  1683  000396  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1684  000398  6EDA               	movwf	fsr2h,c
  1685  00039A  0E47               	movlw	71
  1686  00039C  60DF               	cpfslt	indf2,c
  1687  00039E  D00F               	goto	i2l1371
  1688                           
  1689                           ;RFID.c: 88:         {;RFID.c: 89:             hexBuf[i] = 10 + dataBuf[i] - 'A';
  1690  0003A0  0E0B               	movlw	low check_RFID@hexBuf
  1691  0003A2  241D               	addwf	check_RFID@i,w,c
  1692  0003A4  6ED9               	movwf	fsr2l,c
  1693  0003A6  0E00               	movlw	high check_RFID@hexBuf
  1694  0003A8  201E               	addwfc	check_RFID@i+1,w,c
  1695  0003AA  6EDA               	movwf	fsr2h,c
  1696  0003AC  501D               	movf	check_RFID@i,w,c
  1697  0003AE  2407               	addwf	check_RFID@dataBuf,w,c
  1698  0003B0  6EE1               	movwf	fsr1l,c
  1699  0003B2  501E               	movf	check_RFID@i+1,w,c
  1700  0003B4  2008               	addwfc	check_RFID@dataBuf+1,w,c
  1701  0003B6  6EE2               	movwf	fsr1h,c
  1702  0003B8  50E7               	movf	indf1,w,c
  1703  0003BA  0FC9               	addlw	201
  1704  0003BC                     L1:
  1705  0003BC  6EDF               	movwf	indf2,c
  1706  0003BE                     i2l1371:
  1707                           
  1708                           ;RFID.c: 91:     }
  1709  0003BE  4A1D               	infsnz	check_RFID@i,f,c
  1710  0003C0  2A1E               	incf	check_RFID@i+1,f,c
  1711  0003C2  BE1E               	btfsc	check_RFID@i+1,7,c
  1712  0003C4  D7BA               	goto	i2l1359
  1713  0003C6  501E               	movf	check_RFID@i+1,w,c
  1714  0003C8  E104               	bnz	i2u61_40
  1715  0003CA  0E0C               	movlw	12
  1716  0003CC  5C1D               	subwf	check_RFID@i,w,c
  1717  0003CE  A0D8               	btfss	status,0,c
  1718  0003D0  D7B4               	goto	i2l1359
  1719  0003D2                     i2u61_40:
  1720                           
  1721                           ;RFID.c: 93:     char byte1 = 0x00 | (hexBuf[0] < 1) | hexBuf[1];
  1722  0003D2  500B               	movf	check_RFID@hexBuf,w,c
  1723  0003D4  A4D8               	btfss	status,2,c
  1724  0003D6  D002               	goto	i2u62_40
  1725  0003D8  0E01               	movlw	1
  1726  0003DA  D001               	goto	i2u63_40
  1727  0003DC                     i2u62_40:
  1728  0003DC  0E00               	movlw	0
  1729  0003DE                     i2u63_40:
  1730  0003DE  100C               	iorwf	check_RFID@hexBuf+1,w,c
  1731  0003E0  6E17               	movwf	check_RFID@byte1,c
  1732                           
  1733                           ;RFID.c: 94:     char byte2 = 0x00 | (hexBuf[2] < 1) | hexBuf[3];
  1734  0003E2  500D               	movf	check_RFID@hexBuf+2,w,c
  1735  0003E4  A4D8               	btfss	status,2,c
  1736  0003E6  D002               	goto	i2u64_40
  1737  0003E8  0E01               	movlw	1
  1738  0003EA  D001               	goto	i2u65_40
  1739  0003EC                     i2u64_40:
  1740  0003EC  0E00               	movlw	0
  1741  0003EE                     i2u65_40:
  1742  0003EE  100E               	iorwf	check_RFID@hexBuf+3,w,c
  1743  0003F0  6E18               	movwf	check_RFID@byte2,c
  1744                           
  1745                           ;RFID.c: 95:     char byte3 = 0x00 | (hexBuf[4] < 1) | hexBuf[5];
  1746  0003F2  500F               	movf	check_RFID@hexBuf+4,w,c
  1747  0003F4  A4D8               	btfss	status,2,c
  1748  0003F6  D002               	goto	i2u66_40
  1749  0003F8  0E01               	movlw	1
  1750  0003FA  D001               	goto	i2u67_40
  1751  0003FC                     i2u66_40:
  1752  0003FC  0E00               	movlw	0
  1753  0003FE                     i2u67_40:
  1754  0003FE  1010               	iorwf	check_RFID@hexBuf+5,w,c
  1755  000400  6E19               	movwf	check_RFID@byte3,c
  1756                           
  1757                           ;RFID.c: 96:     char byte4 = 0x00 | (hexBuf[6] < 1) | hexBuf[7];
  1758  000402  5011               	movf	check_RFID@hexBuf+6,w,c
  1759  000404  A4D8               	btfss	status,2,c
  1760  000406  D002               	goto	i2u68_40
  1761  000408  0E01               	movlw	1
  1762  00040A  D001               	goto	i2u69_40
  1763  00040C                     i2u68_40:
  1764  00040C  0E00               	movlw	0
  1765  00040E                     i2u69_40:
  1766  00040E  1012               	iorwf	check_RFID@hexBuf+7,w,c
  1767  000410  6E1A               	movwf	check_RFID@byte4,c
  1768                           
  1769                           ;RFID.c: 97:     char byte5 = 0x00 | (hexBuf[8] < 1) | hexBuf[9];
  1770  000412  5013               	movf	check_RFID@hexBuf+8,w,c
  1771  000414  A4D8               	btfss	status,2,c
  1772  000416  D002               	goto	i2u70_40
  1773  000418  0E01               	movlw	1
  1774  00041A  D001               	goto	i2u71_40
  1775  00041C                     i2u70_40:
  1776  00041C  0E00               	movlw	0
  1777  00041E                     i2u71_40:
  1778  00041E  1014               	iorwf	check_RFID@hexBuf+9,w,c
  1779  000420  6E1B               	movwf	check_RFID@byte5,c
  1780                           
  1781                           ;RFID.c: 98:     char checksum = 0x00 | (hexBuf[10] < 1) | hexBuf[11];
  1782  000422  5015               	movf	check_RFID@hexBuf+10,w,c
  1783  000424  A4D8               	btfss	status,2,c
  1784  000426  D002               	goto	i2u72_40
  1785  000428  0E01               	movlw	1
  1786  00042A  D001               	goto	i2u73_40
  1787  00042C                     i2u72_40:
  1788  00042C  0E00               	movlw	0
  1789  00042E                     i2u73_40:
  1790  00042E  1016               	iorwf	check_RFID@hexBuf+11,w,c
  1791  000430  6E1C               	movwf	check_RFID@checksum,c
  1792                           
  1793                           ;RFID.c: 101:     if(byte1^byte2^byte3^byte4^byte5 == checksum)
  1794  000432  5017               	movf	check_RFID@byte1,w,c
  1795  000434  1818               	xorwf	check_RFID@byte2,w,c
  1796  000436  1819               	xorwf	check_RFID@byte3,w,c
  1797  000438  181A               	xorwf	check_RFID@byte4,w,c
  1798  00043A  6E09               	movwf	??_check_RFID& (0+255),c
  1799  00043C  6A0A               	clrf	(??_check_RFID+1)& (0+255),c
  1800  00043E  501C               	movf	check_RFID@checksum,w,c
  1801  000440  181B               	xorwf	check_RFID@byte5,w,c
  1802  000442  A4D8               	btfss	status,2,c
  1803  000444  D002               	goto	i2u74_40
  1804  000446  0E01               	movlw	1
  1805  000448  D001               	goto	i2u75_40
  1806  00044A                     i2u74_40:
  1807  00044A  0E00               	movlw	0
  1808  00044C                     i2u75_40:
  1809  00044C  1A09               	xorwf	??_check_RFID,f,c
  1810  00044E  0E00               	movlw	0
  1811  000450  1A0A               	xorwf	??_check_RFID+1,f,c
  1812  000452  5009               	movf	??_check_RFID,w,c
  1813  000454  100A               	iorwf	??_check_RFID+1,w,c
  1814  000456  B4D8               	btfsc	status,2,c
  1815  000458  D00A               	goto	i2l1381
  1816                           
  1817                           ;RFID.c: 102:     {;RFID.c: 104:         SetLine(2);
  1818  00045A  0E02               	movlw	2
  1819  00045C  EC52  F004         	call	_SetLine
  1820                           
  1821                           ;RFID.c: 105:         LCD_String("CHECKSUM PASSED");
  1822  000460  0E11               	movlw	low STR_2
  1823  000462  6E05               	movwf	i2LCD_String@string,c
  1824  000464  0E03               	movlw	high STR_2
  1825  000466  6E06               	movwf	i2LCD_String@string+1,c
  1826  000468  EC1F  F004         	call	i2_LCD_String	;wreg free
  1827                           
  1828                           ;RFID.c: 106:     }
  1829  00046C  0012               	return	
  1830  00046E                     i2l1381:
  1831                           
  1832                           ;RFID.c: 109:         SetLine(2);
  1833  00046E  0E02               	movlw	2
  1834  000470  EC52  F004         	call	_SetLine
  1835                           
  1836                           ;RFID.c: 110:         LCD_String("CHECKSUM FAILED");
  1837  000474  0E01               	movlw	low STR_3
  1838  000476  6E05               	movwf	i2LCD_String@string,c
  1839  000478  0E03               	movlw	high STR_3
  1840  00047A  6E06               	movwf	i2LCD_String@string+1,c
  1841  00047C  EC1F  F004         	call	i2_LCD_String	;wreg free
  1842  000480  0012               	return		;funcret
  1843  000482                     __end_of_check_RFID:
  1844                           	opt callstack 0
  1845                           
  1846 ;; *************** function i2_LCD_String *****************
  1847 ;; Defined at:
  1848 ;;		line 119 in file "LCDIO.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  string          2    4[COMRAM] PTR unsigned char 
  1851 ;;		 -> STR_3(16), STR_2(16), STR_1(16), 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1863 ;;      Params:         2       0       0       0
  1864 ;;      Locals:         0       0       0       0
  1865 ;;      Temps:          0       0       0       0
  1866 ;;      Totals:         2       0       0       0
  1867 ;;Total ram usage:        2 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    3
  1870 ;; This function calls:
  1871 ;;		i2_SendLCD
  1872 ;; This function is called by:
  1873 ;;		_check_RFID
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text14
  1878  00083E                     __ptext14:
  1879                           	opt callstack 0
  1880  00083E                     i2_LCD_String:
  1881                           	opt callstack 19
  1882                           
  1883                           ;LCDIO.c: 121: while(*string != 0){
  1884                           
  1885                           ;incstack = 0
  1886  00083E  D010               	goto	i2l1289
  1887  000840                     i2l1283:
  1888                           
  1889                           ;LCDIO.c: 124: SendLCD(*string++,1);
  1890  000840  0E01               	movlw	1
  1891  000842  6E03               	movwf	i2SendLCD@type,c
  1892  000844  C005  FFF6         	movff	i2LCD_String@string,tblptrl
  1893  000848  C006  FFF7         	movff	i2LCD_String@string+1,tblptrh
  1894  00084C                     	if	0	;tblptru may be non-zero
  1895  00084C                     	endif
  1896  00084C                     	if	0	;tblptru may be non-zero
  1897  00084C                     	endif
  1898  00084C  0008               	tblrd		*
  1899  00084E  50F5               	movf	tablat,w,c
  1900  000850  EC3A  F004         	call	i2_SendLCD
  1901  000854  4A05               	infsnz	i2LCD_String@string,f,c
  1902  000856  2A06               	incf	i2LCD_String@string+1,f,c
  1903                           
  1904                           ;LCDIO.c: 125:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1905  000858  0E21               	movlw	33
  1906  00085A                     i2u112_47:
  1907  00085A  2EE8               	decfsz	wreg,f,c
  1908  00085C  D7FE               	bra	i2u112_47
  1909  00085E  F000               	nop	
  1910  000860                     i2l1289:
  1911                           
  1912                           ;LCDIO.c: 121: while(*string != 0){
  1913  000860  C005  FFF6         	movff	i2LCD_String@string,tblptrl
  1914  000864  C006  FFF7         	movff	i2LCD_String@string+1,tblptrh
  1915  000868                     	if	0	;tblptru may be non-zero
  1916  000868                     	endif
  1917  000868                     	if	0	;tblptru may be non-zero
  1918  000868                     	endif
  1919  000868  0008               	tblrd		*
  1920  00086A  50F5               	movf	tablat,w,c
  1921  00086C  0900               	iorlw	0
  1922  00086E  B4D8               	btfsc	status,2,c
  1923  000870  0012               	return	
  1924  000872  D7E6               	goto	i2l1283
  1925  000874                     __end_ofi2_LCD_String:
  1926                           	opt callstack 0
  1927                           
  1928 ;; *************** function _SetLine *****************
  1929 ;; Defined at:
  1930 ;;		line 107 in file "LCDIO.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  line            1    wreg     unsigned char 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  line            1    4[COMRAM] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1944 ;;      Params:         0       0       0       0
  1945 ;;      Locals:         1       0       0       0
  1946 ;;      Temps:          0       0       0       0
  1947 ;;      Totals:         1       0       0       0
  1948 ;;Total ram usage:        1 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    3
  1951 ;; This function calls:
  1952 ;;		i2_SendLCD
  1953 ;; This function is called by:
  1954 ;;		_processRFID
  1955 ;;		_check_RFID
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text15
  1960  0008A4                     __ptext15:
  1961                           	opt callstack 0
  1962  0008A4                     _SetLine:
  1963                           	opt callstack 19
  1964                           
  1965                           ;incstack = 0
  1966                           ;SetLine@line stored from wreg
  1967  0008A4  6E05               	movwf	SetLine@line,c
  1968                           
  1969                           ;LCDIO.c: 109:     if(line == 1){
  1970  0008A6  0405               	decf	SetLine@line,w,c
  1971  0008A8  A4D8               	btfss	status,2,c
  1972  0008AA  D005               	goto	i2l1275
  1973                           
  1974                           ;LCDIO.c: 110:         SendLCD(0x80,0);
  1975  0008AC  0E00               	movlw	0
  1976  0008AE  6E03               	movwf	i2SendLCD@type,c
  1977  0008B0  0E80               	movlw	128
  1978  0008B2  EC3A  F004         	call	i2_SendLCD
  1979  0008B6                     i2l1275:
  1980                           
  1981                           ;LCDIO.c: 113:     if(line == 2){
  1982  0008B6  0E02               	movlw	2
  1983  0008B8  1805               	xorwf	SetLine@line,w,c
  1984  0008BA  A4D8               	btfss	status,2,c
  1985  0008BC  D005               	goto	i2l1279
  1986                           
  1987                           ;LCDIO.c: 114:         SendLCD(0xC0,0);
  1988  0008BE  0E00               	movlw	0
  1989  0008C0  6E03               	movwf	i2SendLCD@type,c
  1990  0008C2  0EC0               	movlw	192
  1991  0008C4  EC3A  F004         	call	i2_SendLCD
  1992  0008C8                     i2l1279:
  1993                           
  1994                           ;LCDIO.c: 116:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  1995  0008C8  0E21               	movlw	33
  1996  0008CA                     i2u113_47:
  1997  0008CA  2EE8               	decfsz	wreg,f,c
  1998  0008CC  D7FE               	bra	i2u113_47
  1999  0008CE  F000               	nop	
  2000  0008D0  0012               	return		;funcret
  2001  0008D2                     __end_of_SetLine:
  2002                           	opt callstack 0
  2003                           
  2004 ;; *************** function i2_SendLCD *****************
  2005 ;; Defined at:
  2006 ;;		line 44 in file "LCDIO.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  Byte            1    wreg     unsigned char 
  2009 ;;  type            1    2[COMRAM] unsigned char 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  Byte            1    3[COMRAM] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2021 ;;      Params:         1       0       0       0
  2022 ;;      Locals:         1       0       0       0
  2023 ;;      Temps:          0       0       0       0
  2024 ;;      Totals:         2       0       0       0
  2025 ;;Total ram usage:        2 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    2
  2028 ;; This function calls:
  2029 ;;		i2_LCDout
  2030 ;; This function is called by:
  2031 ;;		_SetLine
  2032 ;;		_processRFID
  2033 ;;		i2_LCD_String
  2034 ;;		i2_ClearLCD
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text16
  2039  000874                     __ptext16:
  2040                           	opt callstack 0
  2041  000874                     i2_SendLCD:
  2042                           	opt callstack 20
  2043                           
  2044                           ;incstack = 0
  2045                           ;i2SendLCD@Byte stored from wreg
  2046  000874  6E04               	movwf	i2SendLCD@Byte,c
  2047                           
  2048                           ;LCDIO.c: 47:  LATAbits.LATA6 = type;
  2049  000876  B003               	btfsc	i2SendLCD@type,0,c
  2050  000878  D002               	bra	i2u48_45
  2051  00087A  9C89               	bcf	3977,6,c	;volatile
  2052  00087C  D001               	bra	i2u48_46
  2053  00087E                     i2u48_45:
  2054  00087E  8C89               	bsf	3977,6,c	;volatile
  2055  000880                     i2u48_46:
  2056                           
  2057                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
  2058  000880  3804               	swapf	i2SendLCD@Byte,w,c
  2059  000882  0B0F               	andlw	15
  2060  000884  0B0F               	andlw	15
  2061  000886  ECAA  F003         	call	i2_LCDout
  2062                           
  2063                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
  2064  00088A  0E06               	movlw	6
  2065  00088C                     i2u114_47:
  2066  00088C  2EE8               	decfsz	wreg,f,c
  2067  00088E  D7FE               	bra	i2u114_47
  2068  000890  D000               	nop2	
  2069                           
  2070                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
  2071  000892  5004               	movf	i2SendLCD@Byte,w,c
  2072  000894  0B0F               	andlw	15
  2073  000896  ECAA  F003         	call	i2_LCDout
  2074                           
  2075                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2076  00089A  0E21               	movlw	33
  2077  00089C                     i2u115_47:
  2078  00089C  2EE8               	decfsz	wreg,f,c
  2079  00089E  D7FE               	bra	i2u115_47
  2080  0008A0  F000               	nop	
  2081  0008A2  0012               	return		;funcret
  2082  0008A4                     __end_ofi2_SendLCD:
  2083                           	opt callstack 0
  2084                           
  2085 ;; *************** function i2_LCDout *****************
  2086 ;; Defined at:
  2087 ;;		line 31 in file "LCDIO.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  number          1    wreg     unsigned char 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  number          1    1[COMRAM] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2101 ;;      Params:         0       0       0       0
  2102 ;;      Locals:         1       0       0       0
  2103 ;;      Temps:          1       0       0       0
  2104 ;;      Totals:         2       0       0       0
  2105 ;;Total ram usage:        2 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    1
  2108 ;; This function calls:
  2109 ;;		i2_E_TOG
  2110 ;; This function is called by:
  2111 ;;		i2_SendLCD
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text17
  2116  000754                     __ptext17:
  2117                           	opt callstack 0
  2118  000754                     i2_LCDout:
  2119                           	opt callstack 20
  2120                           
  2121                           ;incstack = 0
  2122                           ;i2LCDout@number stored from wreg
  2123  000754  6E02               	movwf	i2LCDout@number,c
  2124                           
  2125                           ;LCDIO.c: 33:  LATCbits.LATC1 = (0b0001 & number);
  2126  000756  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  2127  00075A  0E01               	movlw	1
  2128  00075C  1601               	andwf	??i2_LCDout,f,c
  2129  00075E  4601               	rlncf	??i2_LCDout,f,c
  2130  000760  508B               	movf	3979,w,c	;volatile
  2131  000762  1801               	xorwf	??i2_LCDout,w,c
  2132  000764  0BFD               	andlw	-3
  2133  000766  1801               	xorwf	??i2_LCDout,w,c
  2134  000768  6E8B               	movwf	3979,c	;volatile
  2135                           
  2136                           ;LCDIO.c: 34:  LATCbits.LATC2 = (0b0010 & number) >> 1;
  2137  00076A  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  2138  00076E  90D8               	bcf	status,0,c
  2139  000770  3201               	rrcf	??i2_LCDout,f,c
  2140  000772  0E01               	movlw	1
  2141  000774  1601               	andwf	??i2_LCDout,f,c
  2142  000776  4601               	rlncf	??i2_LCDout,f,c
  2143  000778  4601               	rlncf	??i2_LCDout,f,c
  2144  00077A  508B               	movf	3979,w,c	;volatile
  2145  00077C  1801               	xorwf	??i2_LCDout,w,c
  2146  00077E  0BFB               	andlw	-5
  2147  000780  1801               	xorwf	??i2_LCDout,w,c
  2148  000782  6E8B               	movwf	3979,c	;volatile
  2149                           
  2150                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
  2151  000784  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  2152  000788  90D8               	bcf	status,0,c
  2153  00078A  3201               	rrcf	??i2_LCDout,f,c
  2154  00078C  90D8               	bcf	status,0,c
  2155  00078E  3201               	rrcf	??i2_LCDout,f,c
  2156  000790  0E01               	movlw	1
  2157  000792  1601               	andwf	??i2_LCDout,f,c
  2158  000794  508C               	movf	3980,w,c	;volatile
  2159  000796  1801               	xorwf	??i2_LCDout,w,c
  2160  000798  0BFE               	andlw	-2
  2161  00079A  1801               	xorwf	??i2_LCDout,w,c
  2162  00079C  6E8C               	movwf	3980,c	;volatile
  2163                           
  2164                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
  2165  00079E  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  2166  0007A2  90D8               	bcf	status,0,c
  2167  0007A4  3201               	rrcf	??i2_LCDout,f,c
  2168  0007A6  90D8               	bcf	status,0,c
  2169  0007A8  3201               	rrcf	??i2_LCDout,f,c
  2170  0007AA  90D8               	bcf	status,0,c
  2171  0007AC  3201               	rrcf	??i2_LCDout,f,c
  2172  0007AE  0E01               	movlw	1
  2173  0007B0  1601               	andwf	??i2_LCDout,f,c
  2174  0007B2  4601               	rlncf	??i2_LCDout,f,c
  2175  0007B4  508C               	movf	3980,w,c	;volatile
  2176  0007B6  1801               	xorwf	??i2_LCDout,w,c
  2177  0007B8  0BFD               	andlw	-3
  2178  0007BA  1801               	xorwf	??i2_LCDout,w,c
  2179  0007BC  6E8C               	movwf	3980,c	;volatile
  2180                           
  2181                           ;LCDIO.c: 39:  E_TOG();
  2182  0007BE  ECB5  F004         	call	i2_E_TOG	;wreg free
  2183                           
  2184                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2185  0007C2  0E03               	movlw	3
  2186  0007C4                     i2u116_47:
  2187  0007C4  2EE8               	decfsz	wreg,f,c
  2188  0007C6  D7FE               	bra	i2u116_47
  2189  0007C8  F000               	nop	
  2190  0007CA  0012               	return		;funcret
  2191  0007CC                     __end_ofi2_LCDout:
  2192                           	opt callstack 0
  2193                           
  2194 ;; *************** function i2_E_TOG *****************
  2195 ;; Defined at:
  2196 ;;		line 23 in file "LCDIO.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2210 ;;      Params:         0       0       0       0
  2211 ;;      Locals:         0       0       0       0
  2212 ;;      Temps:          0       0       0       0
  2213 ;;      Totals:         0       0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		i2_LCDout
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text18
  2224  00096A                     __ptext18:
  2225                           	opt callstack 0
  2226  00096A                     i2_E_TOG:
  2227                           	opt callstack 20
  2228                           
  2229                           ;LCDIO.c: 25: LATCbits.LATC0 = 1;
  2230                           
  2231                           ;incstack = 0
  2232  00096A  808B               	bsf	3979,0,c	;volatile
  2233                           
  2234                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2235  00096C  0E03               	movlw	3
  2236  00096E                     i2u117_47:
  2237  00096E  2EE8               	decfsz	wreg,f,c
  2238  000970  D7FE               	bra	i2u117_47
  2239  000972  F000               	nop	
  2240                           
  2241                           ;LCDIO.c: 27: LATCbits.LATC0 = 0;
  2242  000974  908B               	bcf	3979,0,c	;volatile
  2243  000976  0012               	return		;funcret
  2244  000978                     __end_ofi2_E_TOG:
  2245                           	opt callstack 0
  2246                           
  2247                           	psect	rparam
  2248  0000                     
  2249                           	psect	temp
  2250  000037                     btemp:
  2251                           	opt callstack 0
  2252  000037                     	ds	1
  2253  0000                     int$flags	set	btemp
  2254  0000                     wtemp8	set	btemp+1
  2255  0000                     ttemp5	set	btemp+1
  2256  0000                     ttemp6	set	btemp+4
  2257  0000                     ttemp7	set	btemp+8
  2258                           tosu	equ	0xFFF
  2259                           tosh	equ	0xFFE
  2260                           tosl	equ	0xFFD
  2261                           stkptr	equ	0xFFC
  2262                           pclatu	equ	0xFFB
  2263                           pclath	equ	0xFFA
  2264                           pcl	equ	0xFF9
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           indf0	equ	0xFEF
  2272                           postinc0	equ	0xFEE
  2273                           postdec0	equ	0xFED
  2274                           preinc0	equ	0xFEC
  2275                           plusw0	equ	0xFEB
  2276                           fsr0h	equ	0xFEA
  2277                           fsr0l	equ	0xFE9
  2278                           wreg	equ	0xFE8
  2279                           indf1	equ	0xFE7
  2280                           postinc1	equ	0xFE6
  2281                           postdec1	equ	0xFE5
  2282                           preinc1	equ	0xFE4
  2283                           plusw1	equ	0xFE3
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           bsr	equ	0xFE0
  2287                           indf2	equ	0xFDF
  2288                           postinc2	equ	0xFDE
  2289                           postdec2	equ	0xFDD
  2290                           preinc2	equ	0xFDC
  2291                           plusw2	equ	0xFDB
  2292                           fsr2h	equ	0xFDA
  2293                           fsr2l	equ	0xFD9
  2294                           status	equ	0xFD8


Data Sizes:
    Strings     48
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      54
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    check_RFID@dataBuf	PTR unsigned char  size(2) Largest target is 12
		 -> InterruptHandlerHigh@RFIDbuf(COMRAM[12]), 

    processRFID@RFIDbuf	PTR unsigned char  size(2) Largest target is 12
		 -> InterruptHandlerHigh@RFIDbuf(COMRAM[12]), 

    LCD_String@string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    S485DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S485DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_check_RFID
    _processRFID->_SetLine
    _processRFID->i2_ClearLCD
    i2_ClearLCD->i2_SendLCD
    _check_RFID->i2_LCD_String
    i2_LCD_String->i2_SendLCD
    _SetLine->i2_SendLCD
    i2_SendLCD->i2_LCDout

Critical Paths under _main in BANK0

    _main->_LCD_String
    _setup->_LCD_Init
    _LCD_Init->_SendLCD
    _LCD_String->_SendLCD
    _ClearLCD->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3889
                                              7 BANK0      4     4      0
                           _ClearLCD
                         _LCD_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1244
                           _LCD_Init
                          _init_RFID
 ---------------------------------------------------------------------------------
 (2) _init_RFID                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0    1244
                                              5 BANK0      1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           2     0      2    1421
                                              5 BANK0      2     0      2
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _ClearLCD                                             1     1      0    1156
                                              5 BANK0      1     1      0
                            _SendLCD
 ---------------------------------------------------------------------------------
 (3) _SendLCD                                              2     1      1    1156
                                              3 BANK0      2     1      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (4) _LCDout                                               2     2      0      88
                                              1 BANK0      2     2      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (5) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                  1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptHandlerHigh                                10    10      0    2940
                                             30 COMRAM    10    10      0
                         _check_RFID
                        _processRFID
 ---------------------------------------------------------------------------------
 (8) _processRFID                                          6     3      3    1316
                                              5 COMRAM     6     3      3
                            _SetLine
                         i2_ClearLCD
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) i2_ClearLCD                                           1     1      0     284
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (8) _check_RFID                                          24    22      2    1600
                                              6 COMRAM    24    22      2
                            _SetLine
                       i2_LCD_String
 ---------------------------------------------------------------------------------
 (9) i2_LCD_String                                         2     0      2     381
                                              4 COMRAM     2     0      2
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) _SetLine                                              1     1      0     328
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (9) i2_SendLCD                                            2     1      1     284
                                              2 COMRAM     2     1      1
                           i2_LCDout
 ---------------------------------------------------------------------------------
 (10) i2_LCDout                                            2     2      0      88
                                              0 COMRAM     2     2      0
                            i2_E_TOG
 ---------------------------------------------------------------------------------
 (11) i2_E_TOG                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCD
       _LCDout
         _E_TOG
   _LCD_String
     _SendLCD
       _LCDout
         _E_TOG
   _setup
     _LCD_Init
       _LCDout
         _E_TOG
       _SendLCD
         _LCDout
           _E_TOG
     _init_RFID

 _InterruptHandlerLow (ROOT)

 _InterruptHandlerHigh (ROOT)
   _check_RFID
     _SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_LCD_String
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
   _processRFID
     _SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_ClearLCD
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_SendLCD
       i2_LCDout
         i2_E_TOG

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      36       1       57.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41       3        0.0%
DATA                 0      0      41      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Feb 21 16:17:34 2020

                           l35 0914                             bsr 000FE0                    ?_LCD_String 0065  
                          u910 06C4                            u920 06D0                            u865 0814  
                          u866 0816                            u947 06A0                            u957 04A2  
                          u967 04B8                            u977 04CA                            u987 04D8  
                          u997 04E6                            wreg 000FE8                   processRFID@i 0009  
                 __CFG_LVP$OFF 000000                           l1523 07CE                           l1533 0664  
                         l1535 066C                           l1529 07F2                           l1537 0670  
                         l1539 0678                           l1557 06CC                           l1549 0694  
                         STR_1 0321                           STR_2 0311                           STR_3 0301  
                         u1007 04FA                           u1017 050E                           u1107 0960  
                         u1027 0528                           u1037 0540                           u1047 0554  
                         u1057 07EC                           u1067 08E6                           u1077 0824  
                         _LATB 000F8A                           u1087 0836                           u1097 0658  
                         i2l43 072E                           i2l48 0730                __end_ofi2_E_TOG 0978  
                         _main 0660                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf1 000FE7                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 0037                           start 0026  
                 ___param_bank 000000              processRFID@i_1105 000B                __end_of_SendLCD 083E  
              __end_of_SetLine 08D2               __end_of_LCD_Init 055C                          ?_main 0001  
                        _RCREG 000FAE                          _E_TOG 095C               __end_ofi2_LCDout 07CC  
                        _SPBRG 000FAF                    ?i2_ClearLCD 0001                          _setup 0910  
                        main@i 0069             __size_ofi2_SendLCD 0030                          tablat 000FF5  
           processRFID@RFIDbuf 0006                          ttemp5 0038                          ttemp6 003B  
                        ttemp7 003F                          status 000FD8                          wtemp8 0038  
          __size_of_LCD_String 003A               __end_of_ClearLCD 08F2                 __CFG_MCLRE$OFF 000000  
              __initialization 08F2                   __end_of_main 06DA                 __CFG_OSC$IRCIO 000000  
             LCD_String@string 0065                         ??_main 0067                  __activetblptr 000001  
                       ?_E_TOG 0001                      ??i2_E_TOG 0001                         ?_setup 0001  
                       i2l1313 0576                         i2l1333 05B4                         i2l1325 05A4  
                       i2l1345 05D0                         i2l1275 08B6                         i2l1283 0840  
                       i2l1371 03BE                         i2l1381 046E                         i2l1365 037C  
                       i2l1279 08C8                         i2l1359 033A                         i2l1289 0860  
                       _LCDout 05E4                    SendLCD@Byte 0064                         _OSCCON 000FD3  
                       _PTCON0 000F7F                         _PTCON1 000F7E                         _SPBRGH 000FB0  
                       _PTPERH 000F7A                         _PTPERL 000F7B                    SendLCD@type 0063  
                    ??_SendLCD 0029                      ??_SetLine 0005            __size_ofi2_ClearLCD 001A  
                       clear_0 08F8              __end_ofi2_SendLCD 08A4                  ?i2_LCD_String 0005  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                   ?_processRFID 0006                     __accesstop 0060  
      __end_of__initialization 08FE                      ?_LCD_Init 0001                  ___rparam_used 000001  
                  SetLine@line 0005                  __end_of_E_TOG 096A                      ?i2_LCDout 0001  
               __pcstackCOMRAM 0001                  __end_of_setup 092A                 ??i2_LCD_String 0007  
                 ??_LCD_String 0029                        ??_E_TOG 0029  __size_of_InterruptHandlerHigh 074C  
                    ?_ClearLCD 0001    __end_of_InterruptHandlerLow 0026                     _check_RFID 0332  
                      ??_setup 0029                        ?_LCDout 0001             __size_of_init_RFID 0018  
                   ??_LCD_Init 0065             __end_of_LCD_String 0806                     ??i2_LCDout 0001  
                 ??i2_ClearLCD 0005                     ??_ClearLCD 0065                        i2_E_TOG 096A  
                      i2u61_40 03D2                        i2u70_40 041C                        i2u62_40 03DC  
                      i2u54_40 05A0                        i2u71_40 041E                        i2u63_40 03DE  
                      i2u72_40 042C                        i2u64_40 03EC                        i2u56_40 05CC  
                      i2u48_45 087E                        i2u48_46 0880                        i2u73_40 042E  
                      i2u65_40 03EE                        i2u74_40 044A                        i2u66_40 03FC  
                      i2u75_40 044C                        i2u67_40 03FE                        i2u68_40 040C  
                      i2u69_40 040E                        _PWMCON0 000F6F                        _PWMCON1 000F6E  
              __size_of_LCDout 007C                        _SendLCD 0806                        __Hparam 0000  
                      _SetLine 08A4                        __Lparam 0000             __end_ofi2_ClearLCD 0944  
        processRFID@latestChar 0008                   __psmallconst 0300                        __pcinit 08F2  
                      __ramtop 0300                        __ptext0 0660                        __ptext1 0910  
                      __ptext2 0944                        __ptext3 0482                        __ptext4 07CC  
                      __ptext5 08D2                        __ptext6 0806                        __ptext7 05E4  
                      __ptext8 095C              __end_of_init_RFID 095C               check_RFID@hexBuf 000B  
                 LCDout@number 0062                    ?_check_RFID 0007                 __pintcode_body 06DA  
         end_of_initialization 08FE           __end_ofi2_LCD_String 0874           __size_of_processRFID 0088  
                      int_func 06DA                      _RCSTAbits 000FAB                        postinc0 000FEE  
                   _robot_mode 002A                      _PORTCbits 000F82                      i2_SendLCD 0874  
           i2LCD_String@string 0005                      _TRISAbits 000F92                      _TRISCbits 000F94  
                    _TRISDbits 000F95                 __end_of_LCDout 0660                      _TXSTAbits 000FAC  
            __size_of_LCD_Init 00DA              __size_ofi2_LCDout 0078            __size_of_check_RFID 0150  
                  _BAUDCONbits 000FAA                     ?i2_SendLCD 0003            start_initialization 08F2  
            __size_of_ClearLCD 0020                       ??_LCDout 0061  InterruptHandlerHigh@RFID_flag 0028  
 __end_of_InterruptHandlerHigh 0754                    __pbssCOMRAM 0029                  __pcstackBANK0 0060  
                     ?i2_E_TOG 0001          __size_ofi2_LCD_String 0036                 i2LCDout@number 0002  
 __size_of_InterruptHandlerLow 000E                       ?_SendLCD 0063                       ?_SetLine 0001  
                    __pintcode 0008             check_RFID@checksum 001C                    __pintcodelo 0018  
                 i2_LCD_String 083E                    __smallconst 0300                 __size_of_E_TOG 000E  
                  ??i2_SendLCD 0004                      _init_RFID 0944                   ??_check_RFID 0009  
               __size_of_setup 001A                check_RFID@byte1 0017                check_RFID@byte2 0018  
              check_RFID@byte3 0019                check_RFID@byte4 001A                check_RFID@byte5 001B  
                     _LCD_Init 0482                       _LATAbits 000F89                       _LATCbits 000F8B  
                     _LATDbits 000F8C                       _PIE1bits 000F9D                       i2u111_47 093A  
                     i2u112_47 085A                       i2u113_47 08CA                       i2u114_47 088C  
                     i2u115_47 089C                       i2u116_47 07C4                       i2u117_47 096E  
                     _PIR1bits 000F9E                       i2_LCDout 0754                       _RCONbits 000FD0  
           __end_of_check_RFID 0482           _InterruptHandlerHigh 0008                       _ClearLCD 08D2  
                   ?_init_RFID 0001               __size_ofi2_E_TOG 000E                  ??_processRFID 0009  
                i2SendLCD@Byte 0004                  i2SendLCD@type 0003                    check_RFID@i 001D  
                     __Hrparam 0000               __size_of_SendLCD 0038                       __Lrparam 0000  
             __size_of_SetLine 002E                   __Lsmallconst 0300          ?_InterruptHandlerHigh 0001  
            check_RFID@dataBuf 0007                       __ptext11 055C                       __ptext12 092A  
                     __ptext13 0332                       __ptext14 083E                       __ptext15 08A4  
                     __ptext16 0874                       __ptext17 0754                       __ptext18 096A  
  InterruptHandlerHigh@RFIDbuf 002B                  __size_of_main 007A            __end_of_processRFID 05E4  
                     int$flags 0037            _InterruptHandlerLow 0018                     _LCD_String 07CC  
                   _INTCONbits 000FF2                    ??_init_RFID 0029                       intlevel1 0000  
                     intlevel2 0000           ?_InterruptHandlerLow 0001                     _OSCCONbits 000FD3  
   processRFID@position_in_buf 0029         ??_InterruptHandlerHigh 001F                     i2_ClearLCD 092A  
                  _processRFID 055C          ??_InterruptHandlerLow 0060  
