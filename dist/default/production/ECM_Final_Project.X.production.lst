

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Feb 25 12:04:41 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 2.05
    50                           ; Generated 20/12/2018 GMT
    51                           ; 
    52                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4331 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     _CAP1CON	set	3939
    84  0000                     _DFLTCON	set	3936
    85  0000                     _ANSEL1	set	4025
    86  0000                     _ANSEL0	set	4024
    87  0000                     _T5CON	set	4023
    88  0000                     _IPR1bits	set	3999
    89  0000                     _PIE1bits	set	3997
    90  0000                     _RCSTAbits	set	4011
    91  0000                     _TXSTAbits	set	4012
    92  0000                     _BAUDCONbits	set	4010
    93  0000                     _SPBRGH	set	4016
    94  0000                     _SPBRG	set	4015
    95  0000                     _TRISAbits	set	3986
    96  0000                     _TRISCbits	set	3988
    97  0000                     _LATDbits	set	3980
    98  0000                     _LATCbits	set	3979
    99  0000                     _LATAbits	set	3977
   100  0000                     _LATB	set	3978
   101  0000                     _PTPERH	set	3962
   102  0000                     _PTPERL	set	3963
   103  0000                     _PWMCON1	set	3950
   104  0000                     _PWMCON0	set	3951
   105  0000                     _PTCON1	set	3966
   106  0000                     _PTCON0	set	3967
   107  0000                     _PORTDbits	set	3971
   108  0000                     _CAP1BUFL	set	3944
   109  0000                     _CAP1BUFH	set	3945
   110  0000                     _RCREG	set	4014
   111  0000                     _PIR1bits	set	3998
   112  0000                     _TRISDbits	set	3989
   113  0000                     _RCONbits	set	4048
   114  0000                     _INTCONbits	set	4082
   115  0000                     _OSCCONbits	set	4051
   116  0000                     _OSCCON	set	4051
   117                           
   118                           	psect	smallconst
   119  000300                     __psmallconst:
   120                           	opt callstack 0
   121  000300  00                 	db	0
   122  000301                     STR_5:
   123  000301  43                 	db	67	;'C'
   124  000302  48                 	db	72	;'H'
   125  000303  45                 	db	69	;'E'
   126  000304  43                 	db	67	;'C'
   127  000305  4B                 	db	75	;'K'
   128  000306  53                 	db	83	;'S'
   129  000307  55                 	db	85	;'U'
   130  000308  4D                 	db	77	;'M'
   131  000309  20                 	db	32
   132  00030A  46                 	db	70	;'F'
   133  00030B  41                 	db	65	;'A'
   134  00030C  49                 	db	73	;'I'
   135  00030D  4C                 	db	76	;'L'
   136  00030E  45                 	db	69	;'E'
   137  00030F  44                 	db	68	;'D'
   138  000310  00                 	db	0
   139  000311                     STR_4:
   140  000311  43                 	db	67	;'C'
   141  000312  48                 	db	72	;'H'
   142  000313  45                 	db	69	;'E'
   143  000314  43                 	db	67	;'C'
   144  000315  4B                 	db	75	;'K'
   145  000316  53                 	db	83	;'S'
   146  000317  55                 	db	85	;'U'
   147  000318  4D                 	db	77	;'M'
   148  000319  20                 	db	32
   149  00031A  50                 	db	80	;'P'
   150  00031B  41                 	db	65	;'A'
   151  00031C  53                 	db	83	;'S'
   152  00031D  53                 	db	83	;'S'
   153  00031E  45                 	db	69	;'E'
   154  00031F  44                 	db	68	;'D'
   155  000320  00                 	db	0
   156  000321                     STR_3:
   157  000321  52                 	db	82	;'R'
   158  000322  45                 	db	69	;'E'
   159  000323  53                 	db	83	;'S'
   160  000324  45                 	db	69	;'E'
   161  000325  54                 	db	84	;'T'
   162  000326  54                 	db	84	;'T'
   163  000327  49                 	db	73	;'I'
   164  000328  4E                 	db	78	;'N'
   165  000329  47                 	db	71	;'G'
   166  00032A  20                 	db	32
   167  00032B  52                 	db	82	;'R'
   168  00032C  4F                 	db	79	;'O'
   169  00032D  42                 	db	66	;'B'
   170  00032E  4F                 	db	79	;'O'
   171  00032F  54                 	db	84	;'T'
   172  000330  00                 	db	0
   173  000331                     STR_1:
   174  000331  72                 	db	114	;'r'
   175  000332  61                 	db	97	;'a'
   176  000333  77                 	db	119	;'w'
   177  000334  20                 	db	32
   178  000335  64                 	db	100	;'d'
   179  000336  75                 	db	117	;'u'
   180  000337  74                 	db	116	;'t'
   181  000338  79                 	db	121	;'y'
   182  000339  20                 	db	32
   183  00033A  63                 	db	99	;'c'
   184  00033B  79                 	db	121	;'y'
   185  00033C  63                 	db	99	;'c'
   186  00033D  6C                 	db	108	;'l'
   187  00033E  65                 	db	101	;'e'
   188  00033F  00                 	db	0
   189  000340                     STR_2:
   190  000340  25                 	db	37
   191  000341  75                 	db	117	;'u'
   192  000342  20                 	db	32
   193  000343  73                 	db	115	;'s'
   194  000344  00                 	db	0
   195                           
   196                           ; #config settings
   197  000345  00                 	db	0	; dummy byte at the end
   198  0000                     
   199                           	psect	cinit
   200  001060                     __pcinit:
   201                           	opt callstack 0
   202  001060                     start_initialization:
   203                           	opt callstack 0
   204  001060                     __initialization:
   205                           	opt callstack 0
   206                           
   207                           ; Clear objects allocated to BANK1 (32 bytes)
   208  001060  EE01  F000         	lfsr	0,__pbssBANK1
   209  001064  0E20               	movlw	32
   210  001066                     clear_0:
   211  001066  6AEE               	clrf	postinc0,c
   212  001068  06E8               	decf	wreg,f,c
   213  00106A  E1FD               	bnz	clear_0
   214                           
   215                           ; Clear objects allocated to BANK0 (8 bytes)
   216  00106C  EE00  F0EC         	lfsr	0,__pbssBANK0
   217  001070  0E08               	movlw	8
   218  001072                     clear_1:
   219  001072  6AEE               	clrf	postinc0,c
   220  001074  06E8               	decf	wreg,f,c
   221  001076  E1FD               	bnz	clear_1
   222                           
   223                           ; Clear objects allocated to COMRAM (14 bytes)
   224  001078  EE00  F02B         	lfsr	0,__pbssCOMRAM
   225  00107C  0E0E               	movlw	14
   226  00107E                     clear_2:
   227  00107E  6AEE               	clrf	postinc0,c
   228  001080  06E8               	decf	wreg,f,c
   229  001082  E1FD               	bnz	clear_2
   230  001084                     end_of_initialization:
   231                           	opt callstack 0
   232  001084                     __end_of__initialization:
   233                           	opt callstack 0
   234  001084  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   235  001086  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   236  001088  0E00               	movlw	low (__Lmediumconst shr (0+16))
   237  00108A  6EF8               	movwf	tblptru,c
   238  00108C  0100               	movlb	0
   239  00108E  EFDC  F003         	goto	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMRAM
   242  00002B                     __pbssCOMRAM:
   243                           	opt callstack 0
   244  00002B                     processRFID@position_in_buf:
   245                           	opt callstack 0
   246  00002B                     	ds	1
   247  00002C                     _robot_mode:
   248                           	opt callstack 0
   249  00002C                     	ds	1
   250  00002D                     InterruptHandlerHigh@RFIDbuf:
   251                           	opt callstack 0
   252  00002D                     	ds	12
   253                           
   254                           	psect	bssBANK0
   255  0000EC                     __pbssBANK0:
   256                           	opt callstack 0
   257  0000EC                     _nout:
   258                           	opt callstack 0
   259  0000EC                     	ds	2
   260  0000EE                     _width:
   261                           	opt callstack 0
   262  0000EE                     	ds	2
   263  0000F0                     _prec:
   264                           	opt callstack 0
   265  0000F0                     	ds	2
   266  0000F2                     _flags:
   267                           	opt callstack 0
   268  0000F2                     	ds	2
   269                           
   270                           	psect	bssBANK1
   271  000100                     __pbssBANK1:
   272                           	opt callstack 0
   273  000100                     _dbuf:
   274                           	opt callstack 0
   275  000100                     	ds	32
   276                           
   277                           	psect	cstackBANK0
   278  000060                     __pcstackBANK0:
   279                           	opt callstack 0
   280  000060                     ??_InterruptHandlerLow:
   281                           
   282                           ; 1 bytes @ 0x0
   283  000060                     	ds	1
   284  000061                     ??_LCDout:
   285  000061                     ?_strlen:
   286                           	opt callstack 0
   287  000061                     ?___lodiv:
   288                           	opt callstack 0
   289  000061                     ?___lomod:
   290                           	opt callstack 0
   291  000061                     fputc@c:
   292                           	opt callstack 0
   293  000061                     strlen@s:
   294                           	opt callstack 0
   295  000061                     ___lodiv@dividend:
   296                           	opt callstack 0
   297  000061                     ___lomod@dividend:
   298                           	opt callstack 0
   299                           
   300                           ; 8 bytes @ 0x1
   301  000061                     	ds	1
   302  000062                     LCDout@number:
   303                           	opt callstack 0
   304                           
   305                           ; 1 bytes @ 0x2
   306  000062                     	ds	1
   307  000063                     SendLCD@type:
   308                           	opt callstack 0
   309  000063                     fputc@fp:
   310                           	opt callstack 0
   311  000063                     strlen@a:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0x3
   315  000063                     	ds	1
   316  000064                     SendLCD@Byte:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0x4
   320  000064                     	ds	1
   321  000065                     ??_init_LCD:
   322  000065                     ??_ClearLCD:
   323  000065                     ??_fputc:
   324  000065                     SetLine@line:
   325                           	opt callstack 0
   326  000065                     LCD_String@string:
   327                           	opt callstack 0
   328                           
   329                           ; 2 bytes @ 0x5
   330  000065                     	ds	1
   331  000066                     
   332                           ; 1 bytes @ 0x6
   333  000066                     	ds	1
   334  000067                     
   335                           ; 1 bytes @ 0x7
   336  000067                     	ds	2
   337  000069                     ___lodiv@divisor:
   338                           	opt callstack 0
   339  000069                     ___lomod@divisor:
   340                           	opt callstack 0
   341                           
   342                           ; 8 bytes @ 0x9
   343  000069                     	ds	1
   344  00006A                     fputs@s:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0xA
   348  00006A                     	ds	2
   349  00006C                     fputs@fp:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0xC
   353  00006C                     	ds	2
   354  00006E                     fputs@c:
   355                           	opt callstack 0
   356                           
   357                           ; 1 bytes @ 0xE
   358  00006E                     	ds	1
   359  00006F                     fputs@i:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0xF
   363  00006F                     	ds	2
   364  000071                     ?_pad:
   365                           	opt callstack 0
   366  000071                     ___lomod@counter:
   367                           	opt callstack 0
   368  000071                     pad@fp:
   369                           	opt callstack 0
   370  000071                     ___lodiv@quotient:
   371                           	opt callstack 0
   372                           
   373                           ; 8 bytes @ 0x11
   374  000071                     	ds	2
   375  000073                     pad@buf:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x13
   379  000073                     	ds	2
   380  000075                     pad@p:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x15
   384  000075                     	ds	2
   385  000077                     ??_pad:
   386                           
   387                           ; 1 bytes @ 0x17
   388  000077                     	ds	1
   389  000078                     pad@i:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0x18
   393  000078                     	ds	1
   394  000079                     ___lodiv@counter:
   395                           	opt callstack 0
   396                           
   397                           ; 1 bytes @ 0x19
   398  000079                     	ds	1
   399  00007A                     pad@w:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x1A
   403  00007A                     	ds	2
   404  00007C                     ?_utoa:
   405                           	opt callstack 0
   406  00007C                     utoa@fp:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x1C
   410  00007C                     	ds	2
   411  00007E                     utoa@d:
   412                           	opt callstack 0
   413                           
   414                           ; 8 bytes @ 0x1E
   415  00007E                     	ds	8
   416  000086                     ??_utoa:
   417                           
   418                           ; 1 bytes @ 0x26
   419  000086                     	ds	8
   420  00008E                     utoa@p:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x2E
   424  00008E                     	ds	2
   425  000090                     utoa@w:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x30
   429  000090                     	ds	2
   430  000092                     utoa@n:
   431                           	opt callstack 0
   432                           
   433                           ; 8 bytes @ 0x32
   434  000092                     	ds	8
   435  00009A                     utoa@i:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0x3A
   439  00009A                     	ds	2
   440  00009C                     ?_vfpfcnvrt:
   441                           	opt callstack 0
   442  00009C                     vfpfcnvrt@fp:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x3C
   446  00009C                     	ds	2
   447  00009E                     vfpfcnvrt@fmt:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x3E
   451  00009E                     	ds	2
   452  0000A0                     vfpfcnvrt@ap:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x40
   456  0000A0                     	ds	2
   457  0000A2                     ??_vfpfcnvrt:
   458                           
   459                           ; 1 bytes @ 0x42
   460  0000A2                     	ds	4
   461  0000A6                     vfpfcnvrt@llu:
   462                           	opt callstack 0
   463                           
   464                           ; 8 bytes @ 0x46
   465  0000A6                     	ds	8
   466  0000AE                     ?_vfprintf:
   467                           	opt callstack 0
   468  0000AE                     vfprintf@fp:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x4E
   472  0000AE                     	ds	2
   473  0000B0                     vfprintf@fmt:
   474                           	opt callstack 0
   475                           
   476                           ; 2 bytes @ 0x50
   477  0000B0                     	ds	2
   478  0000B2                     vfprintf@ap:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x52
   482  0000B2                     	ds	2
   483  0000B4                     vfprintf@cfmt:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x54
   487  0000B4                     	ds	2
   488  0000B6                     ?_sprintf:
   489                           	opt callstack 0
   490  0000B6                     sprintf@s:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x56
   494  0000B6                     	ds	2
   495  0000B8                     sprintf@fmt:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x58
   499  0000B8                     	ds	4
   500  0000BC                     
   501                           ; 1 bytes @ 0x5C
   502  0000BC                     	ds	2
   503  0000BE                     sprintf@ap:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x5E
   507  0000BE                     	ds	2
   508  0000C0                     sprintf@f:
   509                           	opt callstack 0
   510                           
   511                           ; 6 bytes @ 0x60
   512  0000C0                     	ds	6
   513  0000C6                     ??_main:
   514                           
   515                           ; 1 bytes @ 0x66
   516  0000C6                     	ds	2
   517  0000C8                     main@temp:
   518                           	opt callstack 0
   519                           
   520                           ; 32 bytes @ 0x68
   521  0000C8                     	ds	32
   522  0000E8                     main@raw_data:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x88
   526  0000E8                     	ds	2
   527  0000EA                     main@i:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x8A
   531  0000EA                     	ds	2
   532                           
   533                           	psect	cstackCOMRAM
   534  000001                     __pcstackCOMRAM:
   535                           	opt callstack 0
   536  000001                     ??i2_LCDout:
   537  000001                     
   538                           ; 1 bytes @ 0x0
   539  000001                     	ds	1
   540  000002                     i2LCDout@number:
   541                           	opt callstack 0
   542                           
   543                           ; 1 bytes @ 0x1
   544  000002                     	ds	1
   545  000003                     i2SendLCD@type:
   546                           	opt callstack 0
   547                           
   548                           ; 1 bytes @ 0x2
   549  000003                     	ds	1
   550  000004                     i2SendLCD@Byte:
   551                           	opt callstack 0
   552                           
   553                           ; 1 bytes @ 0x3
   554  000004                     	ds	1
   555  000005                     ??i2_ClearLCD:
   556  000005                     i2SetLine@line:
   557                           	opt callstack 0
   558  000005                     i2LCD_String@string:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x4
   562  000005                     	ds	1
   563  000006                     processRFID@RFIDbuf:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x5
   567  000006                     	ds	1
   568  000007                     check_RFID@dataBuf:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x6
   572  000007                     	ds	1
   573  000008                     processRFID@latestChar:
   574                           	opt callstack 0
   575                           
   576                           ; 1 bytes @ 0x7
   577  000008                     	ds	1
   578  000009                     ??_check_RFID:
   579  000009                     processRFID@i:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x8
   583  000009                     	ds	2
   584  00000B                     processRFID@i_1070:
   585                           	opt callstack 0
   586  00000B                     check_RFID@hexBuf:
   587                           	opt callstack 0
   588                           
   589                           ; 12 bytes @ 0xA
   590  00000B                     	ds	12
   591  000017                     check_RFID@byte1:
   592                           	opt callstack 0
   593                           
   594                           ; 1 bytes @ 0x16
   595  000017                     	ds	1
   596  000018                     check_RFID@byte2:
   597                           	opt callstack 0
   598                           
   599                           ; 1 bytes @ 0x17
   600  000018                     	ds	1
   601  000019                     check_RFID@byte3:
   602                           	opt callstack 0
   603                           
   604                           ; 1 bytes @ 0x18
   605  000019                     	ds	1
   606  00001A                     check_RFID@byte4:
   607                           	opt callstack 0
   608                           
   609                           ; 1 bytes @ 0x19
   610  00001A                     	ds	1
   611  00001B                     check_RFID@byte5:
   612                           	opt callstack 0
   613                           
   614                           ; 1 bytes @ 0x1A
   615  00001B                     	ds	1
   616  00001C                     check_RFID@checksum:
   617                           	opt callstack 0
   618                           
   619                           ; 1 bytes @ 0x1B
   620  00001C                     	ds	1
   621  00001D                     check_RFID@i:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x1C
   625  00001D                     	ds	2
   626  00001F                     ??_InterruptHandlerHigh:
   627                           
   628                           ; 1 bytes @ 0x1E
   629  00001F                     	ds	11
   630  00002A                     InterruptHandlerHigh@RFID_flag:
   631                           	opt callstack 0
   632                           
   633                           ; 1 bytes @ 0x29
   634  00002A                     	ds	1
   635                           
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   638 ;;
   639 ;; *************** function _main *****************
   640 ;; Defined at:
   641 ;;		line 91 in file "main.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  i               2  138[BANK0 ] int 
   646 ;;  temp           32  104[BANK0 ] unsigned char [32]
   647 ;;  raw_data        2  136[BANK0 ] int 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   657 ;;      Params:         0       0       0       0
   658 ;;      Locals:         0      36       0       0
   659 ;;      Temps:          0       2       0       0
   660 ;;      Totals:         0      38       0       0
   661 ;;Total ram usage:       38 bytes
   662 ;; Hardware stack levels required when called:   15
   663 ;; This function calls:
   664 ;;		_ClearLCD
   665 ;;		_LCD_String
   666 ;;		_SetLine
   667 ;;		_setup
   668 ;;		_sprintf
   669 ;; This function is called by:
   670 ;;		Startup code after reset
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text0
   675  0007B8                     __ptext0:
   676                           	opt callstack 0
   677  0007B8                     _main:
   678                           	opt callstack 16
   679                           
   680                           ;main.c: 94:   setup();
   681                           
   682                           ;incstack = 0
   683  0007B8  EC9F  F008         	call	_setup	;wreg free
   684  0007BC  D03E               	goto	l2357
   685  0007BE                     l2341:
   686                           
   687                           ;main.c: 102:       {;main.c: 104:           int raw_data = (int)((CAP1BUFH << 8) | CAP1
      +                          BUFL);
   688  0007BE  5068               	movf	3944,w,c	;volatile
   689  0007C0  CF69 F0C6          	movff	3945,??_main	;volatile
   690  0007C4  0100               	movlb	0	; () banked
   691  0007C6  6BC7               	clrf	(??_main+1)& (0+255),b
   692  0007C8  C0C6  F0C7         	movff	??_main,??_main+1
   693  0007CC  6BC6               	clrf	??_main& (0+255),b
   694  0007CE  11C6               	iorwf	??_main& (0+255),w,b
   695  0007D0  6FE8               	movwf	main@raw_data& (0+255),b
   696  0007D2  51C7               	movf	(??_main+1)& (0+255),w,b
   697  0007D4  6FE9               	movwf	(main@raw_data+1)& (0+255),b
   698                           
   699                           ; BSR set to: 0
   700                           ;main.c: 106:           ClearLCD();
   701  0007D6  EC8F  F008         	call	_ClearLCD	;wreg free
   702                           
   703                           ;main.c: 107:           SetLine(1);
   704  0007DA  0E01               	movlw	1
   705  0007DC  EC16  F008         	call	_SetLine
   706                           
   707                           ;main.c: 108:           LCD_String("raw duty cycle");
   708  0007E0  0E31               	movlw	low STR_1
   709  0007E2  0100               	movlb	0	; () banked
   710  0007E4  6F65               	movwf	LCD_String@string& (0+255),b
   711  0007E6  0E03               	movlw	high STR_1
   712  0007E8  6F66               	movwf	(LCD_String@string+1)& (0+255),b
   713  0007EA  EC28  F007         	call	_LCD_String	;wreg free
   714                           
   715                           ;main.c: 109:           SetLine(2);
   716  0007EE  0E02               	movlw	2
   717  0007F0  EC16  F008         	call	_SetLine
   718                           
   719                           ;main.c: 110:           char temp[32];;main.c: 111:           sprintf(temp,"%u s",raw_da
      +                          ta);
   720  0007F4  0EC8               	movlw	low main@temp
   721  0007F6  0100               	movlb	0	; () banked
   722  0007F8  6FB6               	movwf	sprintf@s& (0+255),b
   723  0007FA  0E00               	movlw	high main@temp
   724  0007FC  6FB7               	movwf	(sprintf@s+1)& (0+255),b
   725  0007FE  0E40               	movlw	low STR_2
   726  000800  6FB8               	movwf	sprintf@fmt& (0+255),b
   727  000802  0E03               	movlw	high STR_2
   728  000804  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
   729  000806  C0E8  F0BA         	movff	main@raw_data,?_sprintf+4
   730  00080A  C0E9  F0BB         	movff	main@raw_data+1,?_sprintf+5
   731  00080E  ECB3  F007         	call	_sprintf	;wreg free
   732                           
   733                           ;main.c: 112:           LCD_String(temp);
   734  000812  0EC8               	movlw	low main@temp
   735  000814  0100               	movlb	0	; () banked
   736  000816  6F65               	movwf	LCD_String@string& (0+255),b
   737  000818  0E00               	movlw	high main@temp
   738  00081A  6F66               	movwf	(LCD_String@string+1)& (0+255),b
   739  00081C  EC28  F007         	call	_LCD_String	;wreg free
   740                           
   741                           ;main.c: 113:           _delay((unsigned long)((100)*(8000000/4000.0)));
   742  000820  0E02               	movlw	2
   743  000822  0100               	movlb	0	; () banked
   744  000824  6FC7               	movwf	(??_main+1)& (0+255),b
   745  000826  0E04               	movlw	4
   746  000828  6FC6               	movwf	??_main& (0+255),b
   747  00082A  0EBA               	movlw	186
   748  00082C                     u1947:
   749  00082C  2EE8               	decfsz	wreg,f,c
   750  00082E  D7FE               	bra	u1947
   751  000830  2FC6               	decfsz	??_main& (0+255),f,b
   752  000832  D7FC               	bra	u1947
   753  000834  2FC7               	decfsz	(??_main+1)& (0+255),f,b
   754  000836  D7FA               	bra	u1947
   755  000838  F000               	nop	
   756  00083A                     l2357:
   757                           
   758                           ;main.c: 101:       while(robot_mode == 0)
   759  00083A  502C               	movf	_robot_mode,w,c	;volatile
   760  00083C  A4D8               	btfss	status,2,c
   761  00083E  D003               	goto	l2361
   762  000840  D7BE               	goto	l2341
   763  000842                     l2359:
   764                           
   765                           ;main.c: 118:       {;main.c: 120:           robot_mode = 2;
   766  000842  0E02               	movlw	2
   767  000844  6E2C               	movwf	_robot_mode,c	;volatile
   768  000846                     l2361:
   769                           
   770                           ;main.c: 117:       while(robot_mode == 1)
   771  000846  042C               	decf	_robot_mode,w,c	;volatile
   772  000848  A4D8               	btfss	status,2,c
   773  00084A  D02D               	goto	u1920
   774  00084C  D7FA               	goto	l2359
   775  00084E                     l2363:
   776                           
   777                           ;main.c: 127:           {;main.c: 128:               ClearLCD();
   778  00084E  EC8F  F008         	call	_ClearLCD	;wreg free
   779                           
   780                           ;main.c: 129:               LCD_String("RESETTING ROBOT");
   781  000852  0E21               	movlw	low STR_3
   782  000854  0100               	movlb	0	; () banked
   783  000856  6F65               	movwf	LCD_String@string& (0+255),b
   784  000858  0E03               	movlw	high STR_3
   785  00085A  6F66               	movwf	(LCD_String@string+1)& (0+255),b
   786  00085C  EC28  F007         	call	_LCD_String	;wreg free
   787                           
   788                           ;main.c: 130:               for(int i=0; i<10;i++)
   789  000860  0E00               	movlw	0
   790  000862  0100               	movlb	0	; () banked
   791  000864  6FEB               	movwf	(main@i+1)& (0+255),b
   792  000866  0E00               	movlw	0
   793  000868  6FEA               	movwf	main@i& (0+255),b
   794  00086A                     l2373:
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 131:               {;main.c: 132:                   _delay((unsigned long)((100
      +                          )*(8000000/4000.0)));
   798  00086A  0E02               	movlw	2
   799  00086C  0100               	movlb	0	; () banked
   800  00086E  6FC7               	movwf	(??_main+1)& (0+255),b
   801  000870  0E04               	movlw	4
   802  000872  6FC6               	movwf	??_main& (0+255),b
   803  000874  0EBA               	movlw	186
   804  000876                     u1957:
   805  000876  2EE8               	decfsz	wreg,f,c
   806  000878  D7FE               	bra	u1957
   807  00087A  2FC6               	decfsz	??_main& (0+255),f,b
   808  00087C  D7FC               	bra	u1957
   809  00087E  2FC7               	decfsz	(??_main+1)& (0+255),f,b
   810  000880  D7FA               	bra	u1957
   811  000882  F000               	nop	
   812                           
   813                           ;main.c: 133:               }
   814  000884  0100               	movlb	0	; () banked
   815  000886  4BEA               	infsnz	main@i& (0+255),f,b
   816  000888  2BEB               	incf	(main@i+1)& (0+255),f,b
   817  00088A  BFEB               	btfsc	(main@i+1)& (0+255),7,b
   818  00088C  D7EE               	goto	l2373
   819  00088E  51EB               	movf	(main@i+1)& (0+255),w,b
   820  000890  E104               	bnz	u1910
   821  000892  0E0A               	movlw	10
   822  000894  5DEA               	subwf	main@i& (0+255),w,b
   823  000896  A0D8               	btfss	status,0,c
   824  000898  D7E8               	goto	l2373
   825  00089A                     u1910:
   826                           
   827                           ; BSR set to: 0
   828                           ;main.c: 134:               ClearLCD();
   829  00089A  EC8F  F008         	call	_ClearLCD	;wreg free
   830                           
   831                           ;main.c: 135:               robot_mode = 0;
   832  00089E  0E00               	movlw	0
   833  0008A0  6E2C               	movwf	_robot_mode,c	;volatile
   834  0008A2                     l2381:
   835                           
   836                           ;main.c: 126:           while(PORTDbits.RD2 == 1)
   837  0008A2  B483               	btfsc	3971,2,c	;volatile
   838  0008A4  D7D4               	goto	l2363
   839  0008A6                     u1920:
   840                           
   841                           ;main.c: 124:       while(robot_mode == 2)
   842  0008A6  0E02               	movlw	2
   843  0008A8  182C               	xorwf	_robot_mode,w,c	;volatile
   844  0008AA  A4D8               	btfss	status,2,c
   845  0008AC  D7C6               	goto	l2357
   846  0008AE  D7F9               	goto	l2381
   847  0008B0                     __end_of_main:
   848                           	opt callstack 0
   849                           
   850 ;; *************** function _sprintf *****************
   851 ;; Defined at:
   852 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;  s               2   86[BANK0 ] PTR unsigned char 
   855 ;;		 -> main@temp(32), 
   856 ;;  fmt             2   88[BANK0 ] PTR const unsigned char 
   857 ;;		 -> STR_2(5), 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  f               6   96[BANK0 ] struct _IO_FILE
   860 ;;  ap              2   94[BANK0 ] PTR void [1]
   861 ;;		 -> ?_sprintf(2), 
   862 ;;  ret             2    0        int 
   863 ;; Return value:  Size  Location     Type
   864 ;;                  2   86[BANK0 ] int 
   865 ;; Registers used:
   866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   872 ;;      Params:         0       6       0       0
   873 ;;      Locals:         0      10       0       0
   874 ;;      Temps:          0       0       0       0
   875 ;;      Totals:         0      16       0       0
   876 ;;Total ram usage:       16 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:   14
   879 ;; This function calls:
   880 ;;		_vfprintf
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text1
   887  000F66                     __ptext1:
   888                           	opt callstack 0
   889  000F66                     _sprintf:
   890                           	opt callstack 16
   891                           
   892                           ;incstack = 0
   893  000F66  0EBA               	movlw	low (?_sprintf+4)
   894  000F68  0100               	movlb	0	; () banked
   895  000F6A  6FBE               	movwf	sprintf@ap& (0+255),b
   896  000F6C  0E00               	movlw	high (?_sprintf+4)
   897  000F6E  6FBF               	movwf	(sprintf@ap+1)& (0+255),b
   898  000F70  C0B6  F0C0         	movff	sprintf@s,sprintf@f
   899  000F74  C0B7  F0C1         	movff	sprintf@s+1,sprintf@f+1
   900                           
   901                           ; BSR set to: 0
   902  000F78  0E00               	movlw	0
   903  000F7A  6FC3               	movwf	(sprintf@f+3)& (0+255),b
   904  000F7C  0E00               	movlw	0
   905  000F7E  6FC2               	movwf	(sprintf@f+2)& (0+255),b
   906                           
   907                           ; BSR set to: 0
   908  000F80  0E00               	movlw	0
   909  000F82  6FC5               	movwf	(sprintf@f+5)& (0+255),b
   910  000F84  0E00               	movlw	0
   911  000F86  6FC4               	movwf	(sprintf@f+4)& (0+255),b
   912                           
   913                           ; BSR set to: 0
   914  000F88  0EC0               	movlw	low sprintf@f
   915  000F8A  6FAE               	movwf	vfprintf@fp& (0+255),b
   916  000F8C  0E00               	movlw	high sprintf@f
   917  000F8E  6FAF               	movwf	(vfprintf@fp+1)& (0+255),b
   918  000F90  C0B8  F0B0         	movff	sprintf@fmt,vfprintf@fmt
   919  000F94  C0B9  F0B1         	movff	sprintf@fmt+1,vfprintf@fmt+1
   920  000F98  0EBE               	movlw	low sprintf@ap
   921  000F9A  6FB2               	movwf	vfprintf@ap& (0+255),b
   922  000F9C  0E00               	movlw	high sprintf@ap
   923  000F9E  6FB3               	movwf	(vfprintf@ap+1)& (0+255),b
   924  000FA0  EC88  F007         	call	_vfprintf	;wreg free
   925  000FA4  0100               	movlb	0	; () banked
   926  000FA6  51C2               	movf	(sprintf@f+2)& (0+255),w,b
   927  000FA8  25B6               	addwf	sprintf@s& (0+255),w,b
   928  000FAA  6ED9               	movwf	fsr2l,c
   929  000FAC  51C3               	movf	(sprintf@f+3)& (0+255),w,b
   930  000FAE  21B7               	addwfc	(sprintf@s+1)& (0+255),w,b
   931  000FB0  6EDA               	movwf	fsr2h,c
   932  000FB2  0E00               	movlw	0
   933  000FB4  6EDF               	movwf	indf2,c
   934                           
   935                           ; BSR set to: 0
   936  000FB6  0012               	return		;funcret
   937  000FB8                     __end_of_sprintf:
   938                           	opt callstack 0
   939                           
   940 ;; *************** function _vfprintf *****************
   941 ;; Defined at:
   942 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
   945 ;;		 -> sprintf@f(6), 
   946 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
   947 ;;		 -> STR_2(5), 
   948 ;;  ap              2   82[BANK0 ] PTR PTR void 
   949 ;;		 -> sprintf@ap(2), 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  cfmt            2   84[BANK0 ] PTR unsigned char 
   952 ;;		 -> STR_2(5), 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  2   78[BANK0 ] int 
   955 ;; Registers used:
   956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   962 ;;      Params:         0       6       0       0
   963 ;;      Locals:         0       2       0       0
   964 ;;      Temps:          0       0       0       0
   965 ;;      Totals:         0       8       0       0
   966 ;;Total ram usage:        8 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:   13
   969 ;; This function calls:
   970 ;;		_vfpfcnvrt
   971 ;; This function is called by:
   972 ;;		_sprintf
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text2
   977  000F10                     __ptext2:
   978                           	opt callstack 0
   979  000F10                     _vfprintf:
   980                           	opt callstack 16
   981                           
   982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   983                           
   984                           ; BSR set to: 0
   985                           ;incstack = 0
   986  000F10  C0B0  F0B4         	movff	vfprintf@fmt,vfprintf@cfmt
   987  000F14  C0B1  F0B5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   988                           
   989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   990  000F18  0E00               	movlw	0
   991  000F1A  0100               	movlb	0	; () banked
   992  000F1C  6FED               	movwf	(_nout+1)& (0+255),b
   993  000F1E  0E00               	movlw	0
   994  000F20  6FEC               	movwf	_nout& (0+255),b
   995                           
   996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   997  000F22  D013               	goto	l2291
   998  000F24                     l2289:
   999                           
  1000                           ; BSR set to: 0
  1001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1002  000F24  C0AE  F09C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1003  000F28  C0AF  F09D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1004  000F2C  0EB4               	movlw	low vfprintf@cfmt
  1005  000F2E  6F9E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1006  000F30  0E00               	movlw	high vfprintf@cfmt
  1007  000F32  6F9F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1008  000F34  C0B2  F0A0         	movff	vfprintf@ap,vfpfcnvrt@ap
  1009  000F38  C0B3  F0A1         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1010  000F3C  EC7D  F002         	call	_vfpfcnvrt	;wreg free
  1011  000F40  0100               	movlb	0	; () banked
  1012  000F42  519C               	movf	?_vfpfcnvrt& (0+255),w,b
  1013  000F44  27EC               	addwf	_nout& (0+255),f,b
  1014  000F46  519D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1015  000F48  23ED               	addwfc	(_nout+1)& (0+255),f,b
  1016  000F4A                     l2291:
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1020  000F4A  C0B4  FFF6         	movff	vfprintf@cfmt,tblptrl
  1021  000F4E  C0B5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1022  000F52                     	if	0	;tblptru may be non-zero
  1023  000F52                     	endif
  1024  000F52                     	if	0	;tblptru may be non-zero
  1025  000F52                     	endif
  1026  000F52  0008               	tblrd		*
  1027  000F54  50F5               	movf	tablat,w,c
  1028  000F56  0900               	iorlw	0
  1029  000F58  A4D8               	btfss	status,2,c
  1030  000F5A  D7E4               	goto	l2289
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1034  000F5C  C0EC  F0AE         	movff	_nout,?_vfprintf
  1035  000F60  C0ED  F0AF         	movff	_nout+1,?_vfprintf+1
  1036                           
  1037                           ; BSR set to: 0
  1038  000F64  0012               	return		;funcret
  1039  000F66                     __end_of_vfprintf:
  1040                           	opt callstack 0
  1041                           
  1042 ;; *************** function _vfpfcnvrt *****************
  1043 ;; Defined at:
  1044 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
  1047 ;;		 -> sprintf@f(6), 
  1048 ;;  fmt             2   62[BANK0 ] PTR PTR unsigned char 
  1049 ;;		 -> vfprintf@cfmt(2), 
  1050 ;;  ap              2   64[BANK0 ] PTR PTR void 
  1051 ;;		 -> sprintf@ap(2), 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  llu             8   70[BANK0 ] unsigned long long 
  1054 ;;  ll              8    0        long long 
  1055 ;;  f               4    0        long long 
  1056 ;;  vp              3    0        PTR void 
  1057 ;;  ct              3    0        unsigned char [3]
  1058 ;;  cp              3    0        PTR unsigned char 
  1059 ;;  i               2    0        int 
  1060 ;;  done            2    0        int 
  1061 ;;  c               1    0        unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  2   60[BANK0 ] int 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1071 ;;      Params:         0       6       0       0
  1072 ;;      Locals:         0       8       0       0
  1073 ;;      Temps:          0       4       0       0
  1074 ;;      Totals:         0      18       0       0
  1075 ;;Total ram usage:       18 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:   12
  1078 ;; This function calls:
  1079 ;;		_fputc
  1080 ;;		_utoa
  1081 ;; This function is called by:
  1082 ;;		_vfprintf
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text3
  1087  0004FA                     __ptext3:
  1088                           	opt callstack 0
  1089  0004FA                     _vfpfcnvrt:
  1090                           	opt callstack 16
  1091                           
  1092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;incstack = 0
  1096  0004FA  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1097  0004FE  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1098  000502  CFDE FFF6          	movff	postinc2,tblptrl
  1099  000506  CFDD FFF7          	movff	postdec2,tblptrh
  1100  00050A                     	if	0	;tblptru may be non-zero
  1101  00050A                     	endif
  1102  00050A                     	if	0	;tblptru may be non-zero
  1103  00050A                     	endif
  1104  00050A  0008               	tblrd		*
  1105  00050C  50F5               	movf	tablat,w,c
  1106  00050E  0A25               	xorlw	37
  1107  000510  A4D8               	btfss	status,2,c
  1108  000512  D08F               	goto	l2225
  1109                           
  1110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1111  000514  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1112  000518  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1113  00051C  2ADE               	incf	postinc2,f,c
  1114  00051E  0E00               	movlw	0
  1115  000520  22DD               	addwfc	postdec2,f,c
  1116                           
  1117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1118  000522  0E00               	movlw	0
  1119  000524  0100               	movlb	0	; () banked
  1120  000526  6FEF               	movwf	(_width+1)& (0+255),b
  1121  000528  0E00               	movlw	0
  1122  00052A  6FEE               	movwf	_width& (0+255),b
  1123  00052C  C0EE  F0F2         	movff	_width,_flags
  1124  000530  C0EF  F0F3         	movff	_width+1,_flags+1
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1128  000534  69F0               	setf	_prec& (0+255),b
  1129  000536  69F1               	setf	(_prec+1)& (0+255),b
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1133  000538  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1134  00053C  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1135  000540  CFDE FFF6          	movff	postinc2,tblptrl
  1136  000544  CFDD FFF7          	movff	postdec2,tblptrh
  1137  000548                     	if	0	;tblptru may be non-zero
  1138  000548                     	endif
  1139  000548                     	if	0	;tblptru may be non-zero
  1140  000548                     	endif
  1141  000548  0008               	tblrd		*
  1142  00054A  50F5               	movf	tablat,w,c
  1143  00054C  0A75               	xorlw	117
  1144  00054E  A4D8               	btfss	status,2,c
  1145  000550  D040               	goto	l2209
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1149  000552  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1150  000556  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1151  00055A  2ADE               	incf	postinc2,f,c
  1152  00055C  0E00               	movlw	0
  1153  00055E  22DD               	addwfc	postdec2,f,c
  1154                           
  1155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1156  000560  C0A0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1157  000564  C0A1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1158  000568  CFDF F0A2          	movff	indf2,??_vfpfcnvrt
  1159  00056C  0E02               	movlw	2
  1160  00056E  26DE               	addwf	postinc2,f,c
  1161  000570  CFDF F0A3          	movff	indf2,??_vfpfcnvrt+1
  1162  000574  0E00               	movlw	0
  1163  000576  22DD               	addwfc	postdec2,f,c
  1164  000578  C0A2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1165  00057C  C0A3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1166  000580  CFDE F0A4          	movff	postinc2,??_vfpfcnvrt+2
  1167  000584  CFDD F0A5          	movff	postdec2,??_vfpfcnvrt+3
  1168  000588  C0A4  F0A6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1169  00058C  C0A5  F0A7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1170  000590  6BA8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1171  000592  6BA9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1172  000594  6BAA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1173  000596  6BAB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1174  000598  6BAC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1175  00059A  6BAD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1179  00059C  C09C  F07C         	movff	vfpfcnvrt@fp,utoa@fp
  1180  0005A0  C09D  F07D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1181  0005A4  C0A6  F07E         	movff	vfpfcnvrt@llu,utoa@d
  1182  0005A8  C0A7  F07F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1183  0005AC  C0A8  F080         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1184  0005B0  C0A9  F081         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1185  0005B4  C0AA  F082         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1186  0005B8  C0AB  F083         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1187  0005BC  C0AC  F084         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1188  0005C0  C0AD  F085         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1189  0005C4  ECA3  F001         	call	_utoa	;wreg free
  1190  0005C8  C07C  F09C         	movff	?_utoa,?_vfpfcnvrt
  1191  0005CC  C07D  F09D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1192  0005D0  0012               	return	
  1193  0005D2                     l2209:
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1197  0005D2  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1198  0005D6  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1199  0005DA  CFDE FFF6          	movff	postinc2,tblptrl
  1200  0005DE  CFDD FFF7          	movff	postdec2,tblptrh
  1201  0005E2                     	if	0	;tblptru may be non-zero
  1202  0005E2                     	endif
  1203  0005E2                     	if	0	;tblptru may be non-zero
  1204  0005E2                     	endif
  1205  0005E2  0008               	tblrd		*
  1206  0005E4  50F5               	movf	tablat,w,c
  1207  0005E6  0A25               	xorlw	37
  1208  0005E8  A4D8               	btfss	status,2,c
  1209  0005EA  D017               	goto	l2219
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1213  0005EC  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1214  0005F0  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1215  0005F4  2ADE               	incf	postinc2,f,c
  1216  0005F6  0E00               	movlw	0
  1217  0005F8  22DD               	addwfc	postdec2,f,c
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1221  0005FA  0E00               	movlw	0
  1222  0005FC  6F62               	movwf	(fputc@c+1)& (0+255),b
  1223  0005FE  0E25               	movlw	37
  1224  000600  6F61               	movwf	fputc@c& (0+255),b
  1225  000602  C09C  F063         	movff	vfpfcnvrt@fp,fputc@fp
  1226  000606  C09D  F064         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1227  00060A  EC85  F005         	call	_fputc	;wreg free
  1228  00060E                     l2215:
  1229                           
  1230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1231  00060E  0E00               	movlw	0
  1232  000610  0100               	movlb	0	; () banked
  1233  000612  6F9D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1234  000614  0E01               	movlw	1
  1235  000616  6F9C               	movwf	?_vfpfcnvrt& (0+255),b
  1236  000618  0012               	return	
  1237  00061A                     l2219:
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1241  00061A  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1242  00061E  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1243  000622  2ADE               	incf	postinc2,f,c
  1244  000624  0E00               	movlw	0
  1245  000626  22DD               	addwfc	postdec2,f,c
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1249  000628  0E00               	movlw	0
  1250  00062A  6F9D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1251  00062C  0E00               	movlw	0
  1252  00062E  6F9C               	movwf	?_vfpfcnvrt& (0+255),b
  1253  000630  0012               	return	
  1254  000632                     l2225:
  1255                           
  1256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1257  000632  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1258  000636  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1259  00063A  CFDE FFF6          	movff	postinc2,tblptrl
  1260  00063E  CFDD FFF7          	movff	postdec2,tblptrh
  1261  000642                     	if	0	;tblptru may be non-zero
  1262  000642                     	endif
  1263  000642                     	if	0	;tblptru may be non-zero
  1264  000642                     	endif
  1265  000642  0008               	tblrd		*
  1266  000644  50F5               	movf	tablat,w,c
  1267  000646  0100               	movlb	0	; () banked
  1268  000648  6F61               	movwf	fputc@c& (0+255),b
  1269  00064A  6B62               	clrf	(fputc@c+1)& (0+255),b
  1270  00064C  C09C  F063         	movff	vfpfcnvrt@fp,fputc@fp
  1271  000650  C09D  F064         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1272  000654  EC85  F005         	call	_fputc	;wreg free
  1273                           
  1274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1275  000658  C09E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1276  00065C  C09F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1277  000660  2ADE               	incf	postinc2,f,c
  1278  000662  0E00               	movlw	0
  1279  000664  22DD               	addwfc	postdec2,f,c
  1280  000666  D7D3               	goto	l2215
  1281  000668                     __end_of_vfpfcnvrt:
  1282                           	opt callstack 0
  1283                           
  1284 ;; *************** function _utoa *****************
  1285 ;; Defined at:
  1286 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  1289 ;;		 -> sprintf@f(6), 
  1290 ;;  d               8   30[BANK0 ] unsigned long long 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  n               8   50[BANK0 ] unsigned long long 
  1293 ;;  i               2   58[BANK0 ] int 
  1294 ;;  w               2   48[BANK0 ] int 
  1295 ;;  p               2   46[BANK0 ] int 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  2   28[BANK0 ] int 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1305 ;;      Params:         0      10       0       0
  1306 ;;      Locals:         0      14       0       0
  1307 ;;      Temps:          0       8       0       0
  1308 ;;      Totals:         0      32       0       0
  1309 ;;Total ram usage:       32 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:   11
  1312 ;; This function calls:
  1313 ;;		___lodiv
  1314 ;;		___lomod
  1315 ;;		_pad
  1316 ;; This function is called by:
  1317 ;;		_vfpfcnvrt
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text4
  1322  000346                     __ptext4:
  1323                           	opt callstack 0
  1324  000346                     _utoa:
  1325                           	opt callstack 16
  1326                           
  1327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1328                           
  1329                           ;incstack = 0
  1330  000346  0100               	movlb	0	; () banked
  1331  000348  AFF1               	btfss	(_prec+1)& (0+255),7,b
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1335  00034A  93F2               	bcf	_flags& (0+255),1,b
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1339  00034C  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  1340  00034E  D005               	goto	u1720
  1341  000350  51F1               	movf	(_prec+1)& (0+255),w,b
  1342  000352  E108               	bnz	l287
  1343  000354  05F0               	decf	_prec& (0+255),w,b
  1344  000356  B0D8               	btfsc	status,0,c
  1345  000358  D005               	goto	l287
  1346  00035A                     u1720:
  1347                           
  1348                           ; BSR set to: 0
  1349  00035A  0E00               	movlw	0
  1350  00035C  6F8F               	movwf	(utoa@p+1)& (0+255),b
  1351  00035E  0E01               	movlw	1
  1352  000360  6F8E               	movwf	utoa@p& (0+255),b
  1353  000362  D004               	goto	l289
  1354  000364                     l287:
  1355                           
  1356                           ; BSR set to: 0
  1357  000364  C0F0  F08E         	movff	_prec,utoa@p
  1358  000368  C0F1  F08F         	movff	_prec+1,utoa@p+1
  1359  00036C                     l289:
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1363  00036C  C0EE  F090         	movff	_width,utoa@w
  1364  000370  C0EF  F091         	movff	_width+1,utoa@w+1
  1365                           
  1366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1367  000374  C07E  F092         	movff	utoa@d,utoa@n
  1368  000378  C07F  F093         	movff	utoa@d+1,utoa@n+1
  1369  00037C  C080  F094         	movff	utoa@d+2,utoa@n+2
  1370  000380  C081  F095         	movff	utoa@d+3,utoa@n+3
  1371  000384  C082  F096         	movff	utoa@d+4,utoa@n+4
  1372  000388  C083  F097         	movff	utoa@d+5,utoa@n+5
  1373  00038C  C084  F098         	movff	utoa@d+6,utoa@n+6
  1374  000390  C085  F099         	movff	utoa@d+7,utoa@n+7
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1378  000394  0E00               	movlw	0
  1379  000396  6F9B               	movwf	(utoa@i+1)& (0+255),b
  1380  000398  0E1F               	movlw	31
  1381  00039A  6F9A               	movwf	utoa@i& (0+255),b
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1385  00039C  0E00               	movlw	0
  1386  00039E  0101               	movlb	1	; () banked
  1387  0003A0  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1388                           
  1389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1390  0003A2  D077               	goto	l2171
  1391  0003A4                     l2161:
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1395  0003A4  079A               	decf	utoa@i& (0+255),f,b
  1396  0003A6  A0D8               	btfss	status,0,c
  1397  0003A8  079B               	decf	(utoa@i+1)& (0+255),f,b
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1401  0003AA  0E00               	movlw	low _dbuf
  1402  0003AC  259A               	addwf	utoa@i& (0+255),w,b
  1403  0003AE  6ED9               	movwf	fsr2l,c
  1404  0003B0  0E01               	movlw	high _dbuf
  1405  0003B2  219B               	addwfc	(utoa@i+1)& (0+255),w,b
  1406  0003B4  6EDA               	movwf	fsr2h,c
  1407  0003B6  C092  F061         	movff	utoa@n,___lomod@dividend
  1408  0003BA  C093  F062         	movff	utoa@n+1,___lomod@dividend+1
  1409  0003BE  C094  F063         	movff	utoa@n+2,___lomod@dividend+2
  1410  0003C2  C095  F064         	movff	utoa@n+3,___lomod@dividend+3
  1411  0003C6  C096  F065         	movff	utoa@n+4,___lomod@dividend+4
  1412  0003CA  C097  F066         	movff	utoa@n+5,___lomod@dividend+5
  1413  0003CE  C098  F067         	movff	utoa@n+6,___lomod@dividend+6
  1414  0003D2  C099  F068         	movff	utoa@n+7,___lomod@dividend+7
  1415  0003D6  0E0A               	movlw	10
  1416  0003D8  6F69               	movwf	___lomod@divisor& (0+255),b
  1417  0003DA  0E00               	movlw	0
  1418  0003DC  6F6A               	movwf	(___lomod@divisor+1)& (0+255),b
  1419  0003DE  0E00               	movlw	0
  1420  0003E0  6F6B               	movwf	(___lomod@divisor+2)& (0+255),b
  1421  0003E2  0E00               	movlw	0
  1422  0003E4  6F6C               	movwf	(___lomod@divisor+3)& (0+255),b
  1423  0003E6  0E00               	movlw	0
  1424  0003E8  6F6D               	movwf	(___lomod@divisor+4)& (0+255),b
  1425  0003EA  0E00               	movlw	0
  1426  0003EC  6F6E               	movwf	(___lomod@divisor+5)& (0+255),b
  1427  0003EE  0E00               	movlw	0
  1428  0003F0  6F6F               	movwf	(___lomod@divisor+6)& (0+255),b
  1429  0003F2  0E00               	movlw	0
  1430  0003F4  6F70               	movwf	(___lomod@divisor+7)& (0+255),b
  1431  0003F6  EC2D  F005         	call	___lomod	;wreg free
  1432  0003FA  C061  F086         	movff	?___lomod,??_utoa
  1433  0003FE  C062  F087         	movff	?___lomod+1,??_utoa+1
  1434  000402  C063  F088         	movff	?___lomod+2,??_utoa+2
  1435  000406  C064  F089         	movff	?___lomod+3,??_utoa+3
  1436  00040A  C065  F08A         	movff	?___lomod+4,??_utoa+4
  1437  00040E  C066  F08B         	movff	?___lomod+5,??_utoa+5
  1438  000412  C067  F08C         	movff	?___lomod+6,??_utoa+6
  1439  000416  C068  F08D         	movff	?___lomod+7,??_utoa+7
  1440  00041A  0100               	movlb	0	; () banked
  1441  00041C  5186               	movf	??_utoa& (0+255),w,b
  1442  00041E  0F30               	addlw	48
  1443  000420  6EDF               	movwf	indf2,c
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1447  000422  078E               	decf	utoa@p& (0+255),f,b
  1448  000424  A0D8               	btfss	status,0,c
  1449  000426  078F               	decf	(utoa@p+1)& (0+255),f,b
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1453  000428  0790               	decf	utoa@w& (0+255),f,b
  1454  00042A  A0D8               	btfss	status,0,c
  1455  00042C  0791               	decf	(utoa@w+1)& (0+255),f,b
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1459  00042E  C092  F061         	movff	utoa@n,___lodiv@dividend
  1460  000432  C093  F062         	movff	utoa@n+1,___lodiv@dividend+1
  1461  000436  C094  F063         	movff	utoa@n+2,___lodiv@dividend+2
  1462  00043A  C095  F064         	movff	utoa@n+3,___lodiv@dividend+3
  1463  00043E  C096  F065         	movff	utoa@n+4,___lodiv@dividend+4
  1464  000442  C097  F066         	movff	utoa@n+5,___lodiv@dividend+5
  1465  000446  C098  F067         	movff	utoa@n+6,___lodiv@dividend+6
  1466  00044A  C099  F068         	movff	utoa@n+7,___lodiv@dividend+7
  1467  00044E  0E0A               	movlw	10
  1468  000450  6F69               	movwf	___lodiv@divisor& (0+255),b
  1469  000452  0E00               	movlw	0
  1470  000454  6F6A               	movwf	(___lodiv@divisor+1)& (0+255),b
  1471  000456  0E00               	movlw	0
  1472  000458  6F6B               	movwf	(___lodiv@divisor+2)& (0+255),b
  1473  00045A  0E00               	movlw	0
  1474  00045C  6F6C               	movwf	(___lodiv@divisor+3)& (0+255),b
  1475  00045E  0E00               	movlw	0
  1476  000460  6F6D               	movwf	(___lodiv@divisor+4)& (0+255),b
  1477  000462  0E00               	movlw	0
  1478  000464  6F6E               	movwf	(___lodiv@divisor+5)& (0+255),b
  1479  000466  0E00               	movlw	0
  1480  000468  6F6F               	movwf	(___lodiv@divisor+6)& (0+255),b
  1481  00046A  0E00               	movlw	0
  1482  00046C  6F70               	movwf	(___lodiv@divisor+7)& (0+255),b
  1483  00046E  ECC5  F004         	call	___lodiv	;wreg free
  1484  000472  C061  F092         	movff	?___lodiv,utoa@n
  1485  000476  C062  F093         	movff	?___lodiv+1,utoa@n+1
  1486  00047A  C063  F094         	movff	?___lodiv+2,utoa@n+2
  1487  00047E  C064  F095         	movff	?___lodiv+3,utoa@n+3
  1488  000482  C065  F096         	movff	?___lodiv+4,utoa@n+4
  1489  000486  C066  F097         	movff	?___lodiv+5,utoa@n+5
  1490  00048A  C067  F098         	movff	?___lodiv+6,utoa@n+6
  1491  00048E  C068  F099         	movff	?___lodiv+7,utoa@n+7
  1492  000492                     l2171:
  1493                           
  1494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1495  000492  0100               	movlb	0	; () banked
  1496  000494  519A               	movf	utoa@i& (0+255),w,b
  1497  000496  119B               	iorwf	(utoa@i+1)& (0+255),w,b
  1498  000498  B4D8               	btfsc	status,2,c
  1499  00049A  D01A               	goto	u1770
  1500                           
  1501                           ; BSR set to: 0
  1502  00049C  5192               	movf	utoa@n& (0+255),w,b
  1503  00049E  1193               	iorwf	(utoa@n+1)& (0+255),w,b
  1504  0004A0  1194               	iorwf	(utoa@n+2)& (0+255),w,b
  1505  0004A2  1195               	iorwf	(utoa@n+3)& (0+255),w,b
  1506  0004A4  1196               	iorwf	(utoa@n+4)& (0+255),w,b
  1507  0004A6  1197               	iorwf	(utoa@n+5)& (0+255),w,b
  1508  0004A8  1198               	iorwf	(utoa@n+6)& (0+255),w,b
  1509  0004AA  1199               	iorwf	(utoa@n+7)& (0+255),w,b
  1510  0004AC  A4D8               	btfss	status,2,c
  1511  0004AE  D77A               	goto	l2161
  1512                           
  1513                           ; BSR set to: 0
  1514  0004B0  BF8F               	btfsc	(utoa@p+1)& (0+255),7,b
  1515  0004B2  D005               	goto	u1750
  1516  0004B4  518F               	movf	(utoa@p+1)& (0+255),w,b
  1517  0004B6  E102               	bnz	u1751
  1518  0004B8  058E               	decf	utoa@p& (0+255),w,b
  1519  0004BA  B0D8               	btfsc	status,0,c
  1520  0004BC                     u1751:
  1521  0004BC  D773               	goto	l2161
  1522  0004BE                     u1750:
  1523                           
  1524                           ; BSR set to: 0
  1525  0004BE  BF91               	btfsc	(utoa@w+1)& (0+255),7,b
  1526  0004C0  D007               	goto	u1770
  1527  0004C2  5191               	movf	(utoa@w+1)& (0+255),w,b
  1528  0004C4  E103               	bnz	u1760
  1529  0004C6  0590               	decf	utoa@w& (0+255),w,b
  1530  0004C8  A0D8               	btfss	status,0,c
  1531  0004CA  D002               	goto	u1770
  1532  0004CC                     u1760:
  1533                           
  1534                           ; BSR set to: 0
  1535  0004CC  B3F2               	btfsc	_flags& (0+255),1,b
  1536  0004CE  D76A               	goto	l2161
  1537  0004D0                     u1770:
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1541  0004D0  C07C  F071         	movff	utoa@fp,pad@fp
  1542  0004D4  C07D  F072         	movff	utoa@fp+1,pad@fp+1
  1543  0004D8  0E00               	movlw	low _dbuf
  1544  0004DA  259A               	addwf	utoa@i& (0+255),w,b
  1545  0004DC  6F73               	movwf	pad@buf& (0+255),b
  1546  0004DE  0E01               	movlw	high _dbuf
  1547  0004E0  219B               	addwfc	(utoa@i+1)& (0+255),w,b
  1548  0004E2  6F74               	movwf	(pad@buf+1)& (0+255),b
  1549  0004E4  C090  F075         	movff	utoa@w,pad@p
  1550  0004E8  C091  F076         	movff	utoa@w+1,pad@p+1
  1551  0004EC  ECD6  F005         	call	_pad	;wreg free
  1552  0004F0  C071  F07C         	movff	?_pad,?_utoa
  1553  0004F4  C072  F07D         	movff	?_pad+1,?_utoa+1
  1554  0004F8  0012               	return		;funcret
  1555  0004FA                     __end_of_utoa:
  1556                           	opt callstack 0
  1557                           
  1558 ;; *************** function _pad *****************
  1559 ;; Defined at:
  1560 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  1563 ;;		 -> sprintf@f(6), 
  1564 ;;  buf             2   19[BANK0 ] PTR unsigned char 
  1565 ;;		 -> dbuf(32), 
  1566 ;;  p               2   21[BANK0 ] int 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  w               2   26[BANK0 ] int 
  1569 ;;  i               2   24[BANK0 ] int 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  2   17[BANK0 ] int 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1579 ;;      Params:         0       6       0       0
  1580 ;;      Locals:         0       4       0       0
  1581 ;;      Temps:          0       1       0       0
  1582 ;;      Totals:         0      11       0       0
  1583 ;;Total ram usage:       11 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:   10
  1586 ;; This function calls:
  1587 ;;		_fputc
  1588 ;;		_fputs
  1589 ;;		_strlen
  1590 ;; This function is called by:
  1591 ;;		_utoa
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text5
  1596  000BAC                     __ptext5:
  1597                           	opt callstack 0
  1598  000BAC                     _pad:
  1599                           	opt callstack 16
  1600                           
  1601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1602                           
  1603                           ;incstack = 0
  1604  000BAC  0100               	movlb	0	; () banked
  1605  000BAE  A1F2               	btfss	_flags& (0+255),0,b
  1606  000BB0  D00A               	goto	l2087
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1610  000BB2  C073  F06A         	movff	pad@buf,fputs@s
  1611  000BB6  C074  F06B         	movff	pad@buf+1,fputs@s+1
  1612  000BBA  C071  F06C         	movff	pad@fp,fputs@fp
  1613  000BBE  C072  F06D         	movff	pad@fp+1,fputs@fp+1
  1614  000BC2  ECDC  F007         	call	_fputs	;wreg free
  1615  000BC6                     l2087:
  1616                           
  1617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1618  000BC6  0100               	movlb	0	; () banked
  1619  000BC8  BF76               	btfsc	(pad@p+1)& (0+255),7,b
  1620  000BCA  D005               	goto	l2091
  1621                           
  1622                           ; BSR set to: 0
  1623  000BCC  C075  F07A         	movff	pad@p,pad@w
  1624  000BD0  C076  F07B         	movff	pad@p+1,pad@w+1
  1625  000BD4  D004               	goto	l277
  1626  000BD6                     l2091:
  1627                           
  1628                           ; BSR set to: 0
  1629  000BD6  0E00               	movlw	0
  1630  000BD8  6F7B               	movwf	(pad@w+1)& (0+255),b
  1631  000BDA  0E00               	movlw	0
  1632  000BDC  6F7A               	movwf	pad@w& (0+255),b
  1633  000BDE                     l277:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1637  000BDE  0E00               	movlw	0
  1638  000BE0  6F79               	movwf	(pad@i+1)& (0+255),b
  1639  000BE2  0E00               	movlw	0
  1640  000BE4  6F78               	movwf	pad@i& (0+255),b
  1641                           
  1642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1643  000BE6  D00D               	goto	l2097
  1644  000BE8                     l2093:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1648  000BE8  0E00               	movlw	0
  1649  000BEA  6F62               	movwf	(fputc@c+1)& (0+255),b
  1650  000BEC  0E20               	movlw	32
  1651  000BEE  6F61               	movwf	fputc@c& (0+255),b
  1652  000BF0  C071  F063         	movff	pad@fp,fputc@fp
  1653  000BF4  C072  F064         	movff	pad@fp+1,fputc@fp+1
  1654  000BF8  EC85  F005         	call	_fputc	;wreg free
  1655                           
  1656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1657  000BFC  0100               	movlb	0	; () banked
  1658  000BFE  4B78               	infsnz	pad@i& (0+255),f,b
  1659  000C00  2B79               	incf	(pad@i+1)& (0+255),f,b
  1660  000C02                     l2097:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1664  000C02  517A               	movf	pad@w& (0+255),w,b
  1665  000C04  5D78               	subwf	pad@i& (0+255),w,b
  1666  000C06  5179               	movf	(pad@i+1)& (0+255),w,b
  1667  000C08  0A80               	xorlw	128
  1668  000C0A  6F77               	movwf	??_pad& (0+255),b
  1669  000C0C  517B               	movf	(pad@w+1)& (0+255),w,b
  1670  000C0E  0A80               	xorlw	128
  1671  000C10  5977               	subwfb	??_pad& (0+255),w,b
  1672  000C12  A0D8               	btfss	status,0,c
  1673  000C14  D7E9               	goto	l2093
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1677  000C16  B1F2               	btfsc	_flags& (0+255),0,b
  1678  000C18  D00A               	goto	l2101
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1682  000C1A  C073  F06A         	movff	pad@buf,fputs@s
  1683  000C1E  C074  F06B         	movff	pad@buf+1,fputs@s+1
  1684  000C22  C071  F06C         	movff	pad@fp,fputs@fp
  1685  000C26  C072  F06D         	movff	pad@fp+1,fputs@fp+1
  1686  000C2A  ECDC  F007         	call	_fputs	;wreg free
  1687  000C2E                     l2101:
  1688                           
  1689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1690  000C2E  C073  F061         	movff	pad@buf,strlen@s
  1691  000C32  C074  F062         	movff	pad@buf+1,strlen@s+1
  1692  000C36  EC61  F008         	call	_strlen	;wreg free
  1693  000C3A  0100               	movlb	0	; () banked
  1694  000C3C  517A               	movf	pad@w& (0+255),w,b
  1695  000C3E  2561               	addwf	?_strlen& (0+255),w,b
  1696  000C40  6F71               	movwf	?_pad& (0+255),b
  1697  000C42  517B               	movf	(pad@w+1)& (0+255),w,b
  1698  000C44  2162               	addwfc	(?_strlen+1)& (0+255),w,b
  1699  000C46  6F72               	movwf	(?_pad+1)& (0+255),b
  1700                           
  1701                           ; BSR set to: 0
  1702  000C48  0012               	return		;funcret
  1703  000C4A                     __end_of_pad:
  1704                           	opt callstack 0
  1705                           
  1706 ;; *************** function _strlen *****************
  1707 ;; Defined at:
  1708 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  s               2    1[BANK0 ] PTR const unsigned char 
  1711 ;;		 -> dbuf(32), 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  a               2    3[BANK0 ] PTR const unsigned char 
  1714 ;;		 -> dbuf(32), 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  2    1[BANK0 ] unsigned int 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1724 ;;      Params:         0       2       0       0
  1725 ;;      Locals:         0       2       0       0
  1726 ;;      Temps:          0       0       0       0
  1727 ;;      Totals:         0       4       0       0
  1728 ;;Total ram usage:        4 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    7
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_pad
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text6
  1739  0010C2                     __ptext6:
  1740                           	opt callstack 0
  1741  0010C2                     _strlen:
  1742                           	opt callstack 18
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;incstack = 0
  1746  0010C2  C061  F063         	movff	strlen@s,strlen@a
  1747  0010C6  C062  F064         	movff	strlen@s+1,strlen@a+1
  1748  0010CA  D003               	goto	l2071
  1749  0010CC                     l2069:
  1750  0010CC  0100               	movlb	0	; () banked
  1751  0010CE  4B61               	infsnz	strlen@s& (0+255),f,b
  1752  0010D0  2B62               	incf	(strlen@s+1)& (0+255),f,b
  1753  0010D2                     l2071:
  1754  0010D2  C061  FFD9         	movff	strlen@s,fsr2l
  1755  0010D6  C062  FFDA         	movff	strlen@s+1,fsr2h
  1756  0010DA  50DF               	movf	indf2,w,c
  1757  0010DC  A4D8               	btfss	status,2,c
  1758  0010DE  D7F6               	goto	l2069
  1759  0010E0  0100               	movlb	0	; () banked
  1760  0010E2  5163               	movf	strlen@a& (0+255),w,b
  1761  0010E4  5D61               	subwf	strlen@s& (0+255),w,b
  1762  0010E6  6F61               	movwf	?_strlen& (0+255),b
  1763  0010E8  5164               	movf	(strlen@a+1)& (0+255),w,b
  1764  0010EA  5962               	subwfb	(strlen@s+1)& (0+255),w,b
  1765  0010EC  6F62               	movwf	(?_strlen+1)& (0+255),b
  1766                           
  1767                           ; BSR set to: 0
  1768  0010EE  0012               	return		;funcret
  1769  0010F0                     __end_of_strlen:
  1770                           	opt callstack 0
  1771                           
  1772 ;; *************** function _fputs *****************
  1773 ;; Defined at:
  1774 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  s               2   10[BANK0 ] PTR const unsigned char 
  1777 ;;		 -> dbuf(32), 
  1778 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  1779 ;;		 -> sprintf@f(6), 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  i               2   15[BANK0 ] int 
  1782 ;;  c               1   14[BANK0 ] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  2   10[BANK0 ] int 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1792 ;;      Params:         0       4       0       0
  1793 ;;      Locals:         0       3       0       0
  1794 ;;      Temps:          0       0       0       0
  1795 ;;      Totals:         0       7       0       0
  1796 ;;Total ram usage:        7 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    9
  1799 ;; This function calls:
  1800 ;;		_fputc
  1801 ;; This function is called by:
  1802 ;;		_pad
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text7
  1807  000FB8                     __ptext7:
  1808                           	opt callstack 0
  1809  000FB8                     _fputs:
  1810                           	opt callstack 16
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;incstack = 0
  1814  000FB8  0E00               	movlw	0
  1815  000FBA  0100               	movlb	0	; () banked
  1816  000FBC  6F70               	movwf	(fputs@i+1)& (0+255),b
  1817  000FBE  0E00               	movlw	0
  1818  000FC0  6F6F               	movwf	fputs@i& (0+255),b
  1819  000FC2  D00C               	goto	l2065
  1820  000FC4                     l2061:
  1821                           
  1822                           ; BSR set to: 0
  1823  000FC4  C06E  F061         	movff	fputs@c,fputc@c
  1824  000FC8  6B62               	clrf	(fputc@c+1)& (0+255),b
  1825  000FCA  C06C  F063         	movff	fputs@fp,fputc@fp
  1826  000FCE  C06D  F064         	movff	fputs@fp+1,fputc@fp+1
  1827  000FD2  EC85  F005         	call	_fputc	;wreg free
  1828  000FD6  0100               	movlb	0	; () banked
  1829  000FD8  4B6F               	infsnz	fputs@i& (0+255),f,b
  1830  000FDA  2B70               	incf	(fputs@i+1)& (0+255),f,b
  1831  000FDC                     l2065:
  1832                           
  1833                           ; BSR set to: 0
  1834  000FDC  516F               	movf	fputs@i& (0+255),w,b
  1835  000FDE  256A               	addwf	fputs@s& (0+255),w,b
  1836  000FE0  6ED9               	movwf	fsr2l,c
  1837  000FE2  5170               	movf	(fputs@i+1)& (0+255),w,b
  1838  000FE4  216B               	addwfc	(fputs@s+1)& (0+255),w,b
  1839  000FE6  6EDA               	movwf	fsr2h,c
  1840  000FE8  50DF               	movf	indf2,w,c
  1841  000FEA  6F6E               	movwf	fputs@c& (0+255),b
  1842  000FEC  516E               	movf	fputs@c& (0+255),w,b
  1843  000FEE  B4D8               	btfsc	status,2,c
  1844  000FF0  0012               	return	
  1845  000FF2  D7E8               	goto	l2061
  1846  000FF4                     __end_of_fputs:
  1847                           	opt callstack 0
  1848                           
  1849 ;; *************** function _fputc *****************
  1850 ;; Defined at:
  1851 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  c               2    1[BANK0 ] int 
  1854 ;;  fp              2    3[BANK0 ] PTR struct _IO_FILE
  1855 ;;		 -> sprintf@f(6), 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2    1[BANK0 ] int 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1867 ;;      Params:         0       4       0       0
  1868 ;;      Locals:         0       0       0       0
  1869 ;;      Temps:          0       5       0       0
  1870 ;;      Totals:         0       9       0       0
  1871 ;;Total ram usage:        9 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    8
  1874 ;; This function calls:
  1875 ;;		_putch
  1876 ;; This function is called by:
  1877 ;;		_pad
  1878 ;;		_vfpfcnvrt
  1879 ;;		_fputs
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text8
  1884  000B0A                     __ptext8:
  1885                           	opt callstack 0
  1886  000B0A                     _fputc:
  1887                           	opt callstack 16
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;incstack = 0
  1891  000B0A  0100               	movlb	0	; () banked
  1892  000B0C  5163               	movf	fputc@fp& (0+255),w,b
  1893  000B0E  1164               	iorwf	(fputc@fp+1)& (0+255),w,b
  1894  000B10  B4D8               	btfsc	status,2,c
  1895  000B12  D004               	goto	u1550
  1896                           
  1897                           ; BSR set to: 0
  1898  000B14  5163               	movf	fputc@fp& (0+255),w,b
  1899  000B16  1164               	iorwf	(fputc@fp+1)& (0+255),w,b
  1900  000B18  A4D8               	btfss	status,2,c
  1901  000B1A  D004               	goto	l2051
  1902  000B1C                     u1550:
  1903                           
  1904                           ; BSR set to: 0
  1905  000B1C  5161               	movf	fputc@c& (0+255),w,b
  1906  000B1E  ECE4  F008         	call	_putch
  1907  000B22  0012               	return	
  1908  000B24                     l2051:
  1909                           
  1910                           ; BSR set to: 0
  1911  000B24  EE20 F004          	lfsr	2,4
  1912  000B28  5163               	movf	fputc@fp& (0+255),w,b
  1913  000B2A  26D9               	addwf	fsr2l,f,c
  1914  000B2C  5164               	movf	(fputc@fp+1)& (0+255),w,b
  1915  000B2E  22DA               	addwfc	fsr2h,f,c
  1916  000B30  50DE               	movf	postinc2,w,c
  1917  000B32  10DE               	iorwf	postinc2,w,c
  1918  000B34  B4D8               	btfsc	status,2,c
  1919  000B36  D016               	goto	u1570
  1920                           
  1921                           ; BSR set to: 0
  1922  000B38  EE20 F004          	lfsr	2,4
  1923  000B3C  5163               	movf	fputc@fp& (0+255),w,b
  1924  000B3E  26D9               	addwf	fsr2l,f,c
  1925  000B40  5164               	movf	(fputc@fp+1)& (0+255),w,b
  1926  000B42  22DA               	addwfc	fsr2h,f,c
  1927  000B44  EE10 F002          	lfsr	1,2
  1928  000B48  5163               	movf	fputc@fp& (0+255),w,b
  1929  000B4A  26E1               	addwf	fsr1l,f,c
  1930  000B4C  5164               	movf	(fputc@fp+1)& (0+255),w,b
  1931  000B4E  22E2               	addwfc	fsr1h,f,c
  1932  000B50  50DE               	movf	postinc2,w,c
  1933  000B52  5CE6               	subwf	postinc1,w,c
  1934  000B54  50E6               	movf	postinc1,w,c
  1935  000B56  0A80               	xorlw	128
  1936  000B58  6F69               	movwf	(??_fputc+4)& (0+255),b
  1937  000B5A  50DE               	movf	postinc2,w,c
  1938  000B5C  0A80               	xorlw	128
  1939  000B5E  5969               	subwfb	(??_fputc+4)& (0+255),w,b
  1940  000B60  B0D8               	btfsc	status,0,c
  1941  000B62  0012               	return	
  1942  000B64                     u1570:
  1943                           
  1944                           ; BSR set to: 0
  1945  000B64  EE20 F002          	lfsr	2,2
  1946  000B68  5163               	movf	fputc@fp& (0+255),w,b
  1947  000B6A  26D9               	addwf	fsr2l,f,c
  1948  000B6C  5164               	movf	(fputc@fp+1)& (0+255),w,b
  1949  000B6E  22DA               	addwfc	fsr2h,f,c
  1950  000B70  CFDE F065          	movff	postinc2,??_fputc
  1951  000B74  CFDD F066          	movff	postdec2,??_fputc+1
  1952  000B78  C063  FFD9         	movff	fputc@fp,fsr2l
  1953  000B7C  C064  FFDA         	movff	fputc@fp+1,fsr2h
  1954  000B80  CFDE F067          	movff	postinc2,??_fputc+2
  1955  000B84  CFDD F068          	movff	postdec2,??_fputc+3
  1956  000B88  5165               	movf	??_fputc& (0+255),w,b
  1957  000B8A  2567               	addwf	(??_fputc+2)& (0+255),w,b
  1958  000B8C  6ED9               	movwf	fsr2l,c
  1959  000B8E  5166               	movf	(??_fputc+1)& (0+255),w,b
  1960  000B90  2168               	addwfc	(??_fputc+3)& (0+255),w,b
  1961  000B92  6EDA               	movwf	fsr2h,c
  1962  000B94  C061  FFDF         	movff	fputc@c,indf2
  1963  000B98  EE20 F002          	lfsr	2,2
  1964  000B9C  5163               	movf	fputc@fp& (0+255),w,b
  1965  000B9E  26D9               	addwf	fsr2l,f,c
  1966  000BA0  5164               	movf	(fputc@fp+1)& (0+255),w,b
  1967  000BA2  22DA               	addwfc	fsr2h,f,c
  1968  000BA4  2ADE               	incf	postinc2,f,c
  1969  000BA6  0E00               	movlw	0
  1970  000BA8  22DD               	addwfc	postdec2,f,c
  1971  000BAA  0012               	return		;funcret
  1972  000BAC                     __end_of_fputc:
  1973                           	opt callstack 0
  1974                           
  1975 ;; *************** function _putch *****************
  1976 ;; Defined at:
  1977 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  c               1    wreg     unsigned char 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  c               1    0[COMRAM] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1991 ;;      Params:         0       0       0       0
  1992 ;;      Locals:         0       0       0       0
  1993 ;;      Temps:          0       0       0       0
  1994 ;;      Totals:         0       0       0       0
  1995 ;;Total ram usage:        0 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    7
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_fputc
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text9
  2006  0011C8                     __ptext9:
  2007                           	opt callstack 0
  2008  0011C8                     _putch:
  2009                           	opt callstack 16
  2010                           
  2011                           ;incstack = 0
  2012  0011C8  0012               	return		;funcret
  2013  0011CA                     __end_of_putch:
  2014                           	opt callstack 0
  2015                           
  2016 ;; *************** function ___lomod *****************
  2017 ;; Defined at:
  2018 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  dividend        8    1[BANK0 ] unsigned long long 
  2021 ;;  divisor         8    9[BANK0 ] unsigned long long 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  counter         1   17[BANK0 ] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  8    1[BANK0 ] unsigned long long 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2033 ;;      Params:         0      16       0       0
  2034 ;;      Locals:         0       1       0       0
  2035 ;;      Temps:          0       0       0       0
  2036 ;;      Totals:         0      17       0       0
  2037 ;;Total ram usage:       17 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    7
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_utoa
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text10
  2048  000A5A                     __ptext10:
  2049                           	opt callstack 0
  2050  000A5A                     ___lomod:
  2051                           	opt callstack 19
  2052                           
  2053                           ;incstack = 0
  2054  000A5A  0100               	movlb	0	; () banked
  2055  000A5C  5169               	movf	___lomod@divisor& (0+255),w,b
  2056  000A5E  116A               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  2057  000A60  116B               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  2058  000A62  116C               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  2059  000A64  116D               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  2060  000A66  116E               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  2061  000A68  116F               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  2062  000A6A  1170               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  2063  000A6C  B4D8               	btfsc	status,2,c
  2064  000A6E  D03C               	goto	l760
  2065                           
  2066                           ; BSR set to: 0
  2067  000A70  0E01               	movlw	1
  2068  000A72  6F71               	movwf	___lomod@counter& (0+255),b
  2069  000A74  D00A               	goto	l2133
  2070  000A76                     l2131:
  2071                           
  2072                           ; BSR set to: 0
  2073  000A76  90D8               	bcf	status,0,c
  2074  000A78  3769               	rlcf	___lomod@divisor& (0+255),f,b
  2075  000A7A  376A               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  2076  000A7C  376B               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  2077  000A7E  376C               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  2078  000A80  376D               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  2079  000A82  376E               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  2080  000A84  376F               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  2081  000A86  3770               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  2082  000A88  2B71               	incf	___lomod@counter& (0+255),f,b
  2083  000A8A                     l2133:
  2084                           
  2085                           ; BSR set to: 0
  2086  000A8A  AF70               	btfss	(___lomod@divisor+7)& (0+255),7,b
  2087  000A8C  D7F4               	goto	l2131
  2088  000A8E                     u1690:
  2089                           
  2090                           ; BSR set to: 0
  2091  000A8E  5169               	movf	___lomod@divisor& (0+255),w,b
  2092  000A90  5D61               	subwf	___lomod@dividend& (0+255),w,b
  2093  000A92  516A               	movf	(___lomod@divisor+1)& (0+255),w,b
  2094  000A94  5962               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  2095  000A96  516B               	movf	(___lomod@divisor+2)& (0+255),w,b
  2096  000A98  5963               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  2097  000A9A  516C               	movf	(___lomod@divisor+3)& (0+255),w,b
  2098  000A9C  5964               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  2099  000A9E  516D               	movf	(___lomod@divisor+4)& (0+255),w,b
  2100  000AA0  5965               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  2101  000AA2  516E               	movf	(___lomod@divisor+5)& (0+255),w,b
  2102  000AA4  5966               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  2103  000AA6  516F               	movf	(___lomod@divisor+6)& (0+255),w,b
  2104  000AA8  5967               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  2105  000AAA  5170               	movf	(___lomod@divisor+7)& (0+255),w,b
  2106  000AAC  5968               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  2107  000AAE  A0D8               	btfss	status,0,c
  2108  000AB0  D010               	goto	l2139
  2109                           
  2110                           ; BSR set to: 0
  2111  000AB2  5169               	movf	___lomod@divisor& (0+255),w,b
  2112  000AB4  5F61               	subwf	___lomod@dividend& (0+255),f,b
  2113  000AB6  516A               	movf	(___lomod@divisor+1)& (0+255),w,b
  2114  000AB8  5B62               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  2115  000ABA  516B               	movf	(___lomod@divisor+2)& (0+255),w,b
  2116  000ABC  5B63               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  2117  000ABE  516C               	movf	(___lomod@divisor+3)& (0+255),w,b
  2118  000AC0  5B64               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  2119  000AC2  516D               	movf	(___lomod@divisor+4)& (0+255),w,b
  2120  000AC4  5B65               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  2121  000AC6  516E               	movf	(___lomod@divisor+5)& (0+255),w,b
  2122  000AC8  5B66               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  2123  000ACA  516F               	movf	(___lomod@divisor+6)& (0+255),w,b
  2124  000ACC  5B67               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  2125  000ACE  5170               	movf	(___lomod@divisor+7)& (0+255),w,b
  2126  000AD0  5B68               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  2127  000AD2                     l2139:
  2128                           
  2129                           ; BSR set to: 0
  2130  000AD2  90D8               	bcf	status,0,c
  2131  000AD4  3370               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  2132  000AD6  336F               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  2133  000AD8  336E               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  2134  000ADA  336D               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  2135  000ADC  336C               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  2136  000ADE  336B               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  2137  000AE0  336A               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  2138  000AE2  3369               	rrcf	___lomod@divisor& (0+255),f,b
  2139                           
  2140                           ; BSR set to: 0
  2141  000AE4  2F71               	decfsz	___lomod@counter& (0+255),f,b
  2142  000AE6  D7D3               	goto	u1690
  2143  000AE8                     l760:
  2144                           
  2145                           ; BSR set to: 0
  2146  000AE8  C061  F061         	movff	___lomod@dividend,?___lomod
  2147  000AEC  C062  F062         	movff	___lomod@dividend+1,?___lomod+1
  2148  000AF0  C063  F063         	movff	___lomod@dividend+2,?___lomod+2
  2149  000AF4  C064  F064         	movff	___lomod@dividend+3,?___lomod+3
  2150  000AF8  C065  F065         	movff	___lomod@dividend+4,?___lomod+4
  2151  000AFC  C066  F066         	movff	___lomod@dividend+5,?___lomod+5
  2152  000B00  C067  F067         	movff	___lomod@dividend+6,?___lomod+6
  2153  000B04  C068  F068         	movff	___lomod@dividend+7,?___lomod+7
  2154                           
  2155                           ; BSR set to: 0
  2156  000B08  0012               	return		;funcret
  2157  000B0A                     __end_of___lomod:
  2158                           	opt callstack 0
  2159                           
  2160 ;; *************** function ___lodiv *****************
  2161 ;; Defined at:
  2162 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  dividend        8    1[BANK0 ] unsigned long long 
  2165 ;;  divisor         8    9[BANK0 ] unsigned long long 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  quotient        8   17[BANK0 ] unsigned long long 
  2168 ;;  counter         1   25[BANK0 ] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  8    1[BANK0 ] unsigned long long 
  2171 ;; Registers used:
  2172 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2178 ;;      Params:         0      16       0       0
  2179 ;;      Locals:         0       9       0       0
  2180 ;;      Temps:          0       0       0       0
  2181 ;;      Totals:         0      25       0       0
  2182 ;;Total ram usage:       25 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    7
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_utoa
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text11
  2193  00098A                     __ptext11:
  2194                           	opt callstack 0
  2195  00098A                     ___lodiv:
  2196                           	opt callstack 19
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;incstack = 0
  2200  00098A  EE20  F071         	lfsr	2,___lodiv@quotient
  2201  00098E  0E07               	movlw	7
  2202  000990                     u1641:
  2203  000990  6ADE               	clrf	postinc2,c
  2204  000992  06E8               	decf	wreg,f,c
  2205  000994  E2FD               	bc	u1641
  2206  000996  0100               	movlb	0	; () banked
  2207  000998  5169               	movf	___lodiv@divisor& (0+255),w,b
  2208  00099A  116A               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  2209  00099C  116B               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  2210  00099E  116C               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  2211  0009A0  116D               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  2212  0009A2  116E               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  2213  0009A4  116F               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  2214  0009A6  1170               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  2215  0009A8  B4D8               	btfsc	status,2,c
  2216  0009AA  D046               	goto	l750
  2217                           
  2218                           ; BSR set to: 0
  2219  0009AC  0E01               	movlw	1
  2220  0009AE  6F79               	movwf	___lodiv@counter& (0+255),b
  2221  0009B0  D00A               	goto	l2113
  2222  0009B2                     l2111:
  2223                           
  2224                           ; BSR set to: 0
  2225  0009B2  90D8               	bcf	status,0,c
  2226  0009B4  3769               	rlcf	___lodiv@divisor& (0+255),f,b
  2227  0009B6  376A               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  2228  0009B8  376B               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  2229  0009BA  376C               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  2230  0009BC  376D               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  2231  0009BE  376E               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  2232  0009C0  376F               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  2233  0009C2  3770               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  2234  0009C4  2B79               	incf	___lodiv@counter& (0+255),f,b
  2235  0009C6                     l2113:
  2236                           
  2237                           ; BSR set to: 0
  2238  0009C6  AF70               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  2239  0009C8  D7F4               	goto	l2111
  2240  0009CA                     u1660:
  2241                           
  2242                           ; BSR set to: 0
  2243  0009CA  90D8               	bcf	status,0,c
  2244  0009CC  3771               	rlcf	___lodiv@quotient& (0+255),f,b
  2245  0009CE  3772               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  2246  0009D0  3773               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  2247  0009D2  3774               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  2248  0009D4  3775               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  2249  0009D6  3776               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  2250  0009D8  3777               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  2251  0009DA  3778               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  2252                           
  2253                           ; BSR set to: 0
  2254  0009DC  5169               	movf	___lodiv@divisor& (0+255),w,b
  2255  0009DE  5D61               	subwf	___lodiv@dividend& (0+255),w,b
  2256  0009E0  516A               	movf	(___lodiv@divisor+1)& (0+255),w,b
  2257  0009E2  5962               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  2258  0009E4  516B               	movf	(___lodiv@divisor+2)& (0+255),w,b
  2259  0009E6  5963               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  2260  0009E8  516C               	movf	(___lodiv@divisor+3)& (0+255),w,b
  2261  0009EA  5964               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  2262  0009EC  516D               	movf	(___lodiv@divisor+4)& (0+255),w,b
  2263  0009EE  5965               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  2264  0009F0  516E               	movf	(___lodiv@divisor+5)& (0+255),w,b
  2265  0009F2  5966               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  2266  0009F4  516F               	movf	(___lodiv@divisor+6)& (0+255),w,b
  2267  0009F6  5967               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  2268  0009F8  5170               	movf	(___lodiv@divisor+7)& (0+255),w,b
  2269  0009FA  5968               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  2270  0009FC  A0D8               	btfss	status,0,c
  2271  0009FE  D011               	goto	l2123
  2272                           
  2273                           ; BSR set to: 0
  2274  000A00  5169               	movf	___lodiv@divisor& (0+255),w,b
  2275  000A02  5F61               	subwf	___lodiv@dividend& (0+255),f,b
  2276  000A04  516A               	movf	(___lodiv@divisor+1)& (0+255),w,b
  2277  000A06  5B62               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  2278  000A08  516B               	movf	(___lodiv@divisor+2)& (0+255),w,b
  2279  000A0A  5B63               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  2280  000A0C  516C               	movf	(___lodiv@divisor+3)& (0+255),w,b
  2281  000A0E  5B64               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  2282  000A10  516D               	movf	(___lodiv@divisor+4)& (0+255),w,b
  2283  000A12  5B65               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  2284  000A14  516E               	movf	(___lodiv@divisor+5)& (0+255),w,b
  2285  000A16  5B66               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  2286  000A18  516F               	movf	(___lodiv@divisor+6)& (0+255),w,b
  2287  000A1A  5B67               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  2288  000A1C  5170               	movf	(___lodiv@divisor+7)& (0+255),w,b
  2289  000A1E  5B68               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  2290                           
  2291                           ; BSR set to: 0
  2292  000A20  8171               	bsf	___lodiv@quotient& (0+255),0,b
  2293  000A22                     l2123:
  2294                           
  2295                           ; BSR set to: 0
  2296  000A22  90D8               	bcf	status,0,c
  2297  000A24  3370               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  2298  000A26  336F               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  2299  000A28  336E               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  2300  000A2A  336D               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  2301  000A2C  336C               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  2302  000A2E  336B               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  2303  000A30  336A               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  2304  000A32  3369               	rrcf	___lodiv@divisor& (0+255),f,b
  2305                           
  2306                           ; BSR set to: 0
  2307  000A34  2F79               	decfsz	___lodiv@counter& (0+255),f,b
  2308  000A36  D7C9               	goto	u1660
  2309  000A38                     l750:
  2310                           
  2311                           ; BSR set to: 0
  2312  000A38  C071  F061         	movff	___lodiv@quotient,?___lodiv
  2313  000A3C  C072  F062         	movff	___lodiv@quotient+1,?___lodiv+1
  2314  000A40  C073  F063         	movff	___lodiv@quotient+2,?___lodiv+2
  2315  000A44  C074  F064         	movff	___lodiv@quotient+3,?___lodiv+3
  2316  000A48  C075  F065         	movff	___lodiv@quotient+4,?___lodiv+4
  2317  000A4C  C076  F066         	movff	___lodiv@quotient+5,?___lodiv+5
  2318  000A50  C077  F067         	movff	___lodiv@quotient+6,?___lodiv+6
  2319  000A54  C078  F068         	movff	___lodiv@quotient+7,?___lodiv+7
  2320                           
  2321                           ; BSR set to: 0
  2322  000A58  0012               	return		;funcret
  2323  000A5A                     __end_of___lodiv:
  2324                           	opt callstack 0
  2325                           
  2326 ;; *************** function _setup *****************
  2327 ;; Defined at:
  2328 ;;		line 34 in file "main.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2342 ;;      Params:         0       0       0       0
  2343 ;;      Locals:         0       0       0       0
  2344 ;;      Temps:          0       0       0       0
  2345 ;;      Totals:         0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:   11
  2349 ;; This function calls:
  2350 ;;		_init_LCD
  2351 ;;		_init_RFID
  2352 ;;		_init_sensors
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text12
  2359  00113E                     __ptext12:
  2360                           	opt callstack 0
  2361  00113E                     _setup:
  2362                           	opt callstack 19
  2363                           
  2364                           ;main.c: 37:     OSCCON = 0x72;
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;incstack = 0
  2368  00113E  0E72               	movlw	114
  2369  001140  6ED3               	movwf	4051,c	;volatile
  2370  001142                     l45:
  2371  001142  A4D3               	btfss	4051,2,c	;volatile
  2372  001144  D7FE               	goto	l45
  2373                           
  2374                           ;main.c: 39:     INTCONbits.GIEH = 1;
  2375  001146  8EF2               	bsf	4082,7,c	;volatile
  2376                           
  2377                           ;main.c: 40:     INTCONbits.GIEL = 1;
  2378  001148  8CF2               	bsf	4082,6,c	;volatile
  2379                           
  2380                           ;main.c: 41:     RCONbits.IPEN=1;
  2381  00114A  8ED0               	bsf	4048,7,c	;volatile
  2382                           
  2383                           ;main.c: 44:     init_LCD();
  2384  00114C  EC58  F004         	call	_init_LCD	;wreg free
  2385                           
  2386                           ;main.c: 45:     init_RFID();
  2387  001150  ECBC  F008         	call	_init_RFID	;wreg free
  2388                           
  2389                           ;main.c: 46:     init_sensors();
  2390  001154  ECAE  F008         	call	_init_sensors	;wreg free
  2391                           
  2392                           ;main.c: 48:     TRISDbits.RD2 = 1;
  2393  001158  8495               	bsf	3989,2,c	;volatile
  2394  00115A  0012               	return		;funcret
  2395  00115C                     __end_of_setup:
  2396                           	opt callstack 0
  2397                           
  2398 ;; *************** function _init_sensors *****************
  2399 ;; Defined at:
  2400 ;;		line 13 in file "signal_processing.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  throwaway       2    0        int 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2414 ;;      Params:         0       0       0       0
  2415 ;;      Locals:         0       2       0       0
  2416 ;;      Temps:          0       0       0       0
  2417 ;;      Totals:         0       2       0       0
  2418 ;;Total ram usage:        2 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    7
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_setup
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text13
  2429  00115C                     __ptext13:
  2430                           	opt callstack 0
  2431  00115C                     _init_sensors:
  2432                           	opt callstack 22
  2433                           
  2434                           ;signal_processing.c: 16:     T5CON =0b00011001;
  2435                           
  2436                           ;incstack = 0
  2437  00115C  0E19               	movlw	25
  2438  00115E  6EB7               	movwf	4023,c	;volatile
  2439                           
  2440                           ;signal_processing.c: 17:     TRISAbits.RA2 = 1;
  2441  001160  8492               	bsf	3986,2,c	;volatile
  2442                           
  2443                           ;signal_processing.c: 21:     ANSEL0 =0;
  2444  001162  0E00               	movlw	0
  2445  001164  6EB8               	movwf	4024,c	;volatile
  2446                           
  2447                           ;signal_processing.c: 22:     ANSEL1 =0;
  2448  001166  0E00               	movlw	0
  2449  001168  6EB9               	movwf	4025,c	;volatile
  2450                           
  2451                           ;signal_processing.c: 24:     DFLTCON = 0b00011000;
  2452  00116A  0E18               	movlw	24
  2453  00116C  6E60               	movwf	3936,c	;volatile
  2454                           
  2455                           ;signal_processing.c: 25:     CAP1CON = 0b01000110;
  2456  00116E  0E46               	movlw	70
  2457  001170  6E63               	movwf	3939,c	;volatile
  2458  001172  5069               	movf	3945,w,c	;volatile
  2459  001174  5068               	movf	3944,w,c	;volatile
  2460  001176  0012               	return		;funcret
  2461  001178                     __end_of_init_sensors:
  2462                           	opt callstack 0
  2463                           
  2464 ;; *************** function _init_RFID *****************
  2465 ;; Defined at:
  2466 ;;		line 13 in file "RFID.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2480 ;;      Params:         0       0       0       0
  2481 ;;      Locals:         0       0       0       0
  2482 ;;      Temps:          0       0       0       0
  2483 ;;      Totals:         0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    7
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_setup
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text14
  2495  001178                     __ptext14:
  2496                           	opt callstack 0
  2497  001178                     _init_RFID:
  2498                           	opt callstack 22
  2499                           
  2500                           ;RFID.c: 16:     TRISCbits.RC7 = 1;
  2501                           
  2502                           ;incstack = 0
  2503  001178  8E94               	bsf	3988,7,c	;volatile
  2504                           
  2505                           ;RFID.c: 19:     SPBRG = 203;
  2506  00117A  0ECB               	movlw	203
  2507  00117C  6EAF               	movwf	4015,c	;volatile
  2508                           
  2509                           ;RFID.c: 20:     SPBRGH = 0;
  2510  00117E  0E00               	movlw	0
  2511  001180  6EB0               	movwf	4016,c	;volatile
  2512                           
  2513                           ;RFID.c: 22:     BAUDCONbits.BRG16=1;
  2514  001182  86AA               	bsf	4010,3,c	;volatile
  2515                           
  2516                           ;RFID.c: 23:     TXSTAbits.BRGH = 1;
  2517  001184  84AC               	bsf	4012,2,c	;volatile
  2518                           
  2519                           ;RFID.c: 24:     RCSTAbits.CREN = 1;
  2520  001186  88AB               	bsf	4011,4,c	;volatile
  2521                           
  2522                           ;RFID.c: 25:     RCSTAbits.SPEN = 1;
  2523  001188  8EAB               	bsf	4011,7,c	;volatile
  2524                           
  2525                           ;RFID.c: 26:     TXSTAbits.TXEN = 1;
  2526  00118A  8AAC               	bsf	4012,5,c	;volatile
  2527                           
  2528                           ;RFID.c: 28:     PIE1bits.RC1IE = 1;
  2529  00118C  8A9D               	bsf	3997,5,c	;volatile
  2530                           
  2531                           ;RFID.c: 29:     IPR1bits.RC1IP = 1;
  2532  00118E  8A9F               	bsf	3999,5,c	;volatile
  2533  001190  0012               	return		;funcret
  2534  001192                     __end_of_init_RFID:
  2535                           	opt callstack 0
  2536                           
  2537 ;; *************** function _init_LCD *****************
  2538 ;; Defined at:
  2539 ;;		line 56 in file "LCDIO.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2553 ;;      Params:         0       0       0       0
  2554 ;;      Locals:         0       0       0       0
  2555 ;;      Temps:          0       1       0       0
  2556 ;;      Totals:         0       1       0       0
  2557 ;;Total ram usage:        1 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:   10
  2560 ;; This function calls:
  2561 ;;		_LCDout
  2562 ;;		_SendLCD
  2563 ;; This function is called by:
  2564 ;;		_setup
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text15
  2569  0008B0                     __ptext15:
  2570                           	opt callstack 0
  2571  0008B0                     _init_LCD:
  2572                           	opt callstack 19
  2573                           
  2574                           ;LCDIO.c: 59:  TRISCbits.RC0 = 0;
  2575                           
  2576                           ;incstack = 0
  2577  0008B0  9094               	bcf	3988,0,c	;volatile
  2578                           
  2579                           ;LCDIO.c: 60:  TRISAbits.RA7 = 0;
  2580  0008B2  9E92               	bcf	3986,7,c	;volatile
  2581                           
  2582                           ;LCDIO.c: 61:  TRISCbits.RC3 = 0;
  2583  0008B4  9694               	bcf	3988,3,c	;volatile
  2584                           
  2585                           ;LCDIO.c: 62:  TRISDbits.RD0 = 0;
  2586  0008B6  9095               	bcf	3989,0,c	;volatile
  2587                           
  2588                           ;LCDIO.c: 63:  TRISDbits.RD1 = 0;
  2589  0008B8  9295               	bcf	3989,1,c	;volatile
  2590                           
  2591                           ;LCDIO.c: 64:  TRISAbits.RA6 = 0;
  2592  0008BA  9C92               	bcf	3986,6,c	;volatile
  2593                           
  2594                           ;LCDIO.c: 67:  LATDbits.LATD0 = 0;
  2595  0008BC  908C               	bcf	3980,0,c	;volatile
  2596                           
  2597                           ;LCDIO.c: 68:  LATDbits.LATD1 = 0;
  2598  0008BE  928C               	bcf	3980,1,c	;volatile
  2599                           
  2600                           ;LCDIO.c: 69:  LATCbits.LATC3 = 0;
  2601  0008C0  968B               	bcf	3979,3,c	;volatile
  2602                           
  2603                           ;LCDIO.c: 70:  LATCbits.LATC0 = 0;
  2604  0008C2  908B               	bcf	3979,0,c	;volatile
  2605                           
  2606                           ;LCDIO.c: 71:  LATAbits.LATA6 = 0;
  2607  0008C4  9C89               	bcf	3977,6,c	;volatile
  2608                           
  2609                           ;LCDIO.c: 72:  LATAbits.LATA7 = 0;
  2610  0008C6  9E89               	bcf	3977,7,c	;volatile
  2611                           
  2612                           ;LCDIO.c: 75:  _delay((unsigned long)((15)*(8000000/4000.0)));
  2613  0008C8  0E27               	movlw	39
  2614  0008CA  0100               	movlb	0	; () banked
  2615  0008CC  6F65               	movwf	??_init_LCD& (0+255),b
  2616  0008CE  0EF5               	movlw	245
  2617  0008D0                     u1967:
  2618  0008D0  2EE8               	decfsz	wreg,f,c
  2619  0008D2  D7FE               	bra	u1967
  2620  0008D4  2F65               	decfsz	??_init_LCD& (0+255),f,b
  2621  0008D6  D7FC               	bra	u1967
  2622                           
  2623                           ;LCDIO.c: 76:  LCDout(0b0011);
  2624  0008D8  0E03               	movlw	3
  2625  0008DA  ECAE  F006         	call	_LCDout
  2626                           
  2627                           ;LCDIO.c: 77:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2628  0008DE  0E0D               	movlw	13
  2629  0008E0  0100               	movlb	0	; () banked
  2630  0008E2  6F65               	movwf	??_init_LCD& (0+255),b
  2631  0008E4  0EFB               	movlw	251
  2632  0008E6                     u1977:
  2633  0008E6  2EE8               	decfsz	wreg,f,c
  2634  0008E8  D7FE               	bra	u1977
  2635  0008EA  2F65               	decfsz	??_init_LCD& (0+255),f,b
  2636  0008EC  D7FC               	bra	u1977
  2637  0008EE  D000               	nop2	
  2638                           
  2639                           ;LCDIO.c: 78:  LCDout(0b0011);
  2640  0008F0  0E03               	movlw	3
  2641  0008F2  ECAE  F006         	call	_LCDout
  2642                           
  2643                           ;LCDIO.c: 79:  _delay((unsigned long)((200)*(8000000/4000000.0)));
  2644  0008F6  0E85               	movlw	133
  2645  0008F8                     u1987:
  2646  0008F8  2EE8               	decfsz	wreg,f,c
  2647  0008FA  D7FE               	bra	u1987
  2648  0008FC  F000               	nop	
  2649                           
  2650                           ;LCDIO.c: 80:  LCDout(0b0011);
  2651  0008FE  0E03               	movlw	3
  2652  000900  ECAE  F006         	call	_LCDout
  2653                           
  2654                           ;LCDIO.c: 81:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2655  000904  0E21               	movlw	33
  2656  000906                     u1997:
  2657  000906  2EE8               	decfsz	wreg,f,c
  2658  000908  D7FE               	bra	u1997
  2659  00090A  F000               	nop	
  2660                           
  2661                           ;LCDIO.c: 82:  LCDout(0b0010);
  2662  00090C  0E02               	movlw	2
  2663  00090E  ECAE  F006         	call	_LCDout
  2664                           
  2665                           ;LCDIO.c: 83:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2666  000912  0E21               	movlw	33
  2667  000914                     u2007:
  2668  000914  2EE8               	decfsz	wreg,f,c
  2669  000916  D7FE               	bra	u2007
  2670  000918  F000               	nop	
  2671                           
  2672                           ;LCDIO.c: 86:  SendLCD(0b00101000,0);
  2673  00091A  0E00               	movlw	0
  2674  00091C  0100               	movlb	0	; () banked
  2675  00091E  6F63               	movwf	SendLCD@type& (0+255),b
  2676  000920  0E28               	movlw	40
  2677  000922  ECFA  F007         	call	_SendLCD
  2678                           
  2679                           ;LCDIO.c: 87:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2680  000926  0E21               	movlw	33
  2681  000928                     u2017:
  2682  000928  2EE8               	decfsz	wreg,f,c
  2683  00092A  D7FE               	bra	u2017
  2684  00092C  F000               	nop	
  2685                           
  2686                           ;LCDIO.c: 90:  SendLCD(0b00001000,0);
  2687  00092E  0E00               	movlw	0
  2688  000930  0100               	movlb	0	; () banked
  2689  000932  6F63               	movwf	SendLCD@type& (0+255),b
  2690  000934  0E08               	movlw	8
  2691  000936  ECFA  F007         	call	_SendLCD
  2692                           
  2693                           ;LCDIO.c: 91:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2694  00093A  0E21               	movlw	33
  2695  00093C                     u2027:
  2696  00093C  2EE8               	decfsz	wreg,f,c
  2697  00093E  D7FE               	bra	u2027
  2698  000940  F000               	nop	
  2699                           
  2700                           ;LCDIO.c: 94:  SendLCD(0b00000001,0);
  2701  000942  0E00               	movlw	0
  2702  000944  0100               	movlb	0	; () banked
  2703  000946  6F63               	movwf	SendLCD@type& (0+255),b
  2704  000948  0E01               	movlw	1
  2705  00094A  ECFA  F007         	call	_SendLCD
  2706                           
  2707                           ;LCDIO.c: 95:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2708  00094E  0E0D               	movlw	13
  2709  000950  0100               	movlb	0	; () banked
  2710  000952  6F65               	movwf	??_init_LCD& (0+255),b
  2711  000954  0EFB               	movlw	251
  2712  000956                     u2037:
  2713  000956  2EE8               	decfsz	wreg,f,c
  2714  000958  D7FE               	bra	u2037
  2715  00095A  2F65               	decfsz	??_init_LCD& (0+255),f,b
  2716  00095C  D7FC               	bra	u2037
  2717  00095E  D000               	nop2	
  2718                           
  2719                           ;LCDIO.c: 98:  SendLCD(0b00000110,0);
  2720  000960  0E00               	movlw	0
  2721  000962  0100               	movlb	0	; () banked
  2722  000964  6F63               	movwf	SendLCD@type& (0+255),b
  2723  000966  0E06               	movlw	6
  2724  000968  ECFA  F007         	call	_SendLCD
  2725                           
  2726                           ;LCDIO.c: 99:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2727  00096C  0E21               	movlw	33
  2728  00096E                     u2047:
  2729  00096E  2EE8               	decfsz	wreg,f,c
  2730  000970  D7FE               	bra	u2047
  2731  000972  F000               	nop	
  2732                           
  2733                           ;LCDIO.c: 102:  SendLCD(0b00001100,0);
  2734  000974  0E00               	movlw	0
  2735  000976  0100               	movlb	0	; () banked
  2736  000978  6F63               	movwf	SendLCD@type& (0+255),b
  2737  00097A  0E0C               	movlw	12
  2738  00097C  ECFA  F007         	call	_SendLCD
  2739                           
  2740                           ;LCDIO.c: 103:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2741  000980  0E21               	movlw	33
  2742  000982                     u2057:
  2743  000982  2EE8               	decfsz	wreg,f,c
  2744  000984  D7FE               	bra	u2057
  2745  000986  F000               	nop	
  2746  000988  0012               	return		;funcret
  2747  00098A                     __end_of_init_LCD:
  2748                           	opt callstack 0
  2749                           
  2750 ;; *************** function _SetLine *****************
  2751 ;; Defined at:
  2752 ;;		line 107 in file "LCDIO.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  line            1    wreg     unsigned char 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  line            1    5[BANK0 ] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2766 ;;      Params:         0       0       0       0
  2767 ;;      Locals:         0       1       0       0
  2768 ;;      Temps:          0       0       0       0
  2769 ;;      Totals:         0       1       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:   10
  2773 ;; This function calls:
  2774 ;;		_SendLCD
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text16
  2781  00102C                     __ptext16:
  2782                           	opt callstack 0
  2783  00102C                     _SetLine:
  2784                           	opt callstack 20
  2785                           
  2786                           ;incstack = 0
  2787                           ;SetLine@line stored from wreg
  2788  00102C  0100               	movlb	0	; () banked
  2789  00102E  6F65               	movwf	SetLine@line& (0+255),b
  2790                           
  2791                           ;LCDIO.c: 109:     if(line == 1){
  2792  001030  0100               	movlb	0	; () banked
  2793  001032  0565               	decf	SetLine@line& (0+255),w,b
  2794  001034  A4D8               	btfss	status,2,c
  2795  001036  D005               	goto	l2311
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;LCDIO.c: 110:         SendLCD(0x80,0);
  2799  001038  0E00               	movlw	0
  2800  00103A  6F63               	movwf	SendLCD@type& (0+255),b
  2801  00103C  0E80               	movlw	128
  2802  00103E  ECFA  F007         	call	_SendLCD
  2803  001042                     l2311:
  2804                           
  2805                           ;LCDIO.c: 113:     if(line == 2){
  2806  001042  0E02               	movlw	2
  2807  001044  0100               	movlb	0	; () banked
  2808  001046  1965               	xorwf	SetLine@line& (0+255),w,b
  2809  001048  A4D8               	btfss	status,2,c
  2810  00104A  D005               	goto	l2315
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;LCDIO.c: 114:         SendLCD(0xC0,0);
  2814  00104C  0E00               	movlw	0
  2815  00104E  6F63               	movwf	SendLCD@type& (0+255),b
  2816  001050  0EC0               	movlw	192
  2817  001052  ECFA  F007         	call	_SendLCD
  2818  001056                     l2315:
  2819                           
  2820                           ;LCDIO.c: 116:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2821  001056  0E21               	movlw	33
  2822  001058                     u2067:
  2823  001058  2EE8               	decfsz	wreg,f,c
  2824  00105A  D7FE               	bra	u2067
  2825  00105C  F000               	nop	
  2826  00105E  0012               	return		;funcret
  2827  001060                     __end_of_SetLine:
  2828                           	opt callstack 0
  2829                           
  2830 ;; *************** function _LCD_String *****************
  2831 ;; Defined at:
  2832 ;;		line 119 in file "LCDIO.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  string          2    5[BANK0 ] PTR unsigned char 
  2835 ;;		 -> STR_5(16), STR_4(16), STR_3(16), main@temp(32), 
  2836 ;;		 -> STR_1(15), 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2848 ;;      Params:         0       2       0       0
  2849 ;;      Locals:         0       0       0       0
  2850 ;;      Temps:          0       0       0       0
  2851 ;;      Totals:         0       2       0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:   10
  2855 ;; This function calls:
  2856 ;;		_SendLCD
  2857 ;; This function is called by:
  2858 ;;		_main
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text17
  2863  000E50                     __ptext17:
  2864                           	opt callstack 0
  2865  000E50                     _LCD_String:
  2866                           	opt callstack 20
  2867                           
  2868                           ;LCDIO.c: 121: while(*string != 0){
  2869                           
  2870                           ;incstack = 0
  2871  000E50  D01C               	goto	l2325
  2872  000E52                     l2319:
  2873                           
  2874                           ;LCDIO.c: 124: SendLCD(*string++,1);
  2875  000E52  0E01               	movlw	1
  2876  000E54  0100               	movlb	0	; () banked
  2877  000E56  6F63               	movwf	SendLCD@type& (0+255),b
  2878  000E58  C065  FFF6         	movff	LCD_String@string,tblptrl
  2879  000E5C  C066  FFF7         	movff	LCD_String@string+1,tblptrh
  2880  000E60  6AF8               	clrf	tblptru,c
  2881  000E62  0E02               	movlw	(high __ramtop+-1)
  2882  000E64  64F7               	cpfsgt	tblptrh,c
  2883  000E66  D003               	bra	u1867
  2884  000E68  0008               	tblrd		*
  2885  000E6A  50F5               	movf	tablat,w,c
  2886  000E6C  D005               	bra	u1860
  2887  000E6E                     u1867:
  2888  000E6E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2889  000E72  CFF7 FFEA          	movff	tblptrh,fsr0h
  2890  000E76  50EF               	movf	indf0,w,c
  2891  000E78                     u1860:
  2892  000E78  ECFA  F007         	call	_SendLCD
  2893  000E7C  0100               	movlb	0	; () banked
  2894  000E7E  4B65               	infsnz	LCD_String@string& (0+255),f,b
  2895  000E80  2B66               	incf	(LCD_String@string+1)& (0+255),f,b
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;LCDIO.c: 125:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  2899  000E82  0E21               	movlw	33
  2900  000E84                     u2077:
  2901  000E84  2EE8               	decfsz	wreg,f,c
  2902  000E86  D7FE               	bra	u2077
  2903  000E88  F000               	nop	
  2904  000E8A                     l2325:
  2905                           
  2906                           ;LCDIO.c: 121: while(*string != 0){
  2907  000E8A  C065  FFF6         	movff	LCD_String@string,tblptrl
  2908  000E8E  C066  FFF7         	movff	LCD_String@string+1,tblptrh
  2909  000E92  6AF8               	clrf	tblptru,c
  2910  000E94  0E02               	movlw	(high __ramtop+-1)
  2911  000E96  64F7               	cpfsgt	tblptrh,c
  2912  000E98  D003               	bra	u1877
  2913  000E9A  0008               	tblrd		*
  2914  000E9C  50F5               	movf	tablat,w,c
  2915  000E9E  D005               	bra	u1870
  2916  000EA0                     u1877:
  2917  000EA0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2918  000EA4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2919  000EA8  50EF               	movf	indf0,w,c
  2920  000EAA                     u1870:
  2921  000EAA  0900               	iorlw	0
  2922  000EAC  B4D8               	btfsc	status,2,c
  2923  000EAE  0012               	return	
  2924  000EB0  D7D0               	goto	l2319
  2925  000EB2                     __end_of_LCD_String:
  2926                           	opt callstack 0
  2927                           
  2928 ;; *************** function _ClearLCD *****************
  2929 ;; Defined at:
  2930 ;;		line 137 in file "LCDIO.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;		None
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2944 ;;      Params:         0       0       0       0
  2945 ;;      Locals:         0       0       0       0
  2946 ;;      Temps:          0       1       0       0
  2947 ;;      Totals:         0       1       0       0
  2948 ;;Total ram usage:        1 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:   10
  2951 ;; This function calls:
  2952 ;;		_SendLCD
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text18
  2959  00111E                     __ptext18:
  2960                           	opt callstack 0
  2961  00111E                     _ClearLCD:
  2962                           	opt callstack 20
  2963                           
  2964                           ;LCDIO.c: 138:     SendLCD(0b00000001,0);
  2965                           
  2966                           ;incstack = 0
  2967  00111E  0E00               	movlw	0
  2968  001120  0100               	movlb	0	; () banked
  2969  001122  6F63               	movwf	SendLCD@type& (0+255),b
  2970  001124  0E01               	movlw	1
  2971  001126  ECFA  F007         	call	_SendLCD
  2972                           
  2973                           ;LCDIO.c: 139:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2974  00112A  0E0D               	movlw	13
  2975  00112C  0100               	movlb	0	; () banked
  2976  00112E  6F65               	movwf	??_ClearLCD& (0+255),b
  2977  001130  0EFB               	movlw	251
  2978  001132                     u2087:
  2979  001132  2EE8               	decfsz	wreg,f,c
  2980  001134  D7FE               	bra	u2087
  2981  001136  2F65               	decfsz	??_ClearLCD& (0+255),f,b
  2982  001138  D7FC               	bra	u2087
  2983  00113A  D000               	nop2	
  2984  00113C  0012               	return		;funcret
  2985  00113E                     __end_of_ClearLCD:
  2986                           	opt callstack 0
  2987                           
  2988 ;; *************** function _SendLCD *****************
  2989 ;; Defined at:
  2990 ;;		line 44 in file "LCDIO.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  Byte            1    wreg     unsigned char 
  2993 ;;  type            1    3[BANK0 ] unsigned char 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  Byte            1    4[BANK0 ] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3005 ;;      Params:         0       1       0       0
  3006 ;;      Locals:         0       1       0       0
  3007 ;;      Temps:          0       0       0       0
  3008 ;;      Totals:         0       2       0       0
  3009 ;;Total ram usage:        2 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    9
  3012 ;; This function calls:
  3013 ;;		_LCDout
  3014 ;; This function is called by:
  3015 ;;		_init_LCD
  3016 ;;		_SetLine
  3017 ;;		_LCD_String
  3018 ;;		_ClearLCD
  3019 ;;		_ShiftLeft
  3020 ;;		_ShiftRight
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text19
  3025  000FF4                     __ptext19:
  3026                           	opt callstack 0
  3027  000FF4                     _SendLCD:
  3028                           	opt callstack 19
  3029                           
  3030                           ;incstack = 0
  3031                           ;SendLCD@Byte stored from wreg
  3032  000FF4  0100               	movlb	0	; () banked
  3033  000FF6  6F64               	movwf	SendLCD@Byte& (0+255),b
  3034                           
  3035                           ;LCDIO.c: 47:  LATAbits.LATA7 = type;
  3036  000FF8  0100               	movlb	0	; () banked
  3037  000FFA  B163               	btfsc	SendLCD@type& (0+255),0,b
  3038  000FFC  D002               	bra	u1785
  3039  000FFE  9E89               	bcf	3977,7,c	;volatile
  3040  001000  D001               	bra	u1786
  3041  001002                     u1785:
  3042  001002  8E89               	bsf	3977,7,c	;volatile
  3043  001004                     u1786:
  3044                           
  3045                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
  3046  001004  0100               	movlb	0	; () banked
  3047  001006  3964               	swapf	SendLCD@Byte& (0+255),w,b
  3048  001008  0B0F               	andlw	15
  3049  00100A  0B0F               	andlw	15
  3050  00100C  ECAE  F006         	call	_LCDout
  3051                           
  3052                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
  3053  001010  0E06               	movlw	6
  3054  001012                     u2097:
  3055  001012  2EE8               	decfsz	wreg,f,c
  3056  001014  D7FE               	bra	u2097
  3057  001016  D000               	nop2	
  3058                           
  3059                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
  3060  001018  0100               	movlb	0	; () banked
  3061  00101A  5164               	movf	SendLCD@Byte& (0+255),w,b
  3062  00101C  0B0F               	andlw	15
  3063  00101E  ECAE  F006         	call	_LCDout
  3064                           
  3065                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  3066  001022  0E21               	movlw	33
  3067  001024                     u2107:
  3068  001024  2EE8               	decfsz	wreg,f,c
  3069  001026  D7FE               	bra	u2107
  3070  001028  F000               	nop	
  3071  00102A  0012               	return		;funcret
  3072  00102C                     __end_of_SendLCD:
  3073                           	opt callstack 0
  3074                           
  3075 ;; *************** function _LCDout *****************
  3076 ;; Defined at:
  3077 ;;		line 31 in file "LCDIO.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  number          1    wreg     unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  number          1    2[BANK0 ] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3091 ;;      Params:         0       0       0       0
  3092 ;;      Locals:         0       1       0       0
  3093 ;;      Temps:          0       1       0       0
  3094 ;;      Totals:         0       2       0       0
  3095 ;;Total ram usage:        2 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    8
  3098 ;; This function calls:
  3099 ;;		_E_TOG
  3100 ;; This function is called by:
  3101 ;;		_SendLCD
  3102 ;;		_init_LCD
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text20
  3107  000D5C                     __ptext20:
  3108                           	opt callstack 0
  3109  000D5C                     _LCDout:
  3110                           	opt callstack 19
  3111                           
  3112                           ;incstack = 0
  3113                           ;LCDout@number stored from wreg
  3114  000D5C  0100               	movlb	0	; () banked
  3115  000D5E  6F62               	movwf	LCDout@number& (0+255),b
  3116                           
  3117                           ;LCDIO.c: 33:  LATCbits.LATC0 = (0b0001 & number);
  3118  000D60  C062  F061         	movff	LCDout@number,??_LCDout
  3119  000D64  0E01               	movlw	1
  3120  000D66  0100               	movlb	0	; () banked
  3121  000D68  1761               	andwf	??_LCDout& (0+255),f,b
  3122  000D6A  508B               	movf	3979,w,c	;volatile
  3123  000D6C  1961               	xorwf	??_LCDout& (0+255),w,b
  3124  000D6E  0BFE               	andlw	-2
  3125  000D70  1961               	xorwf	??_LCDout& (0+255),w,b
  3126  000D72  6E8B               	movwf	3979,c	;volatile
  3127                           
  3128                           ;LCDIO.c: 34:  LATCbits.LATC3 = (0b0010 & number) >> 1;
  3129  000D74  C062  F061         	movff	LCDout@number,??_LCDout
  3130  000D78  90D8               	bcf	status,0,c
  3131  000D7A  3361               	rrcf	??_LCDout& (0+255),f,b
  3132  000D7C  0E01               	movlw	1
  3133  000D7E  1761               	andwf	??_LCDout& (0+255),f,b
  3134  000D80  4761               	rlncf	??_LCDout& (0+255),f,b
  3135  000D82  4761               	rlncf	??_LCDout& (0+255),f,b
  3136  000D84  4761               	rlncf	??_LCDout& (0+255),f,b
  3137  000D86  508B               	movf	3979,w,c	;volatile
  3138  000D88  1961               	xorwf	??_LCDout& (0+255),w,b
  3139  000D8A  0BF7               	andlw	-9
  3140  000D8C  1961               	xorwf	??_LCDout& (0+255),w,b
  3141  000D8E  6E8B               	movwf	3979,c	;volatile
  3142                           
  3143                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
  3144  000D90  C062  F061         	movff	LCDout@number,??_LCDout
  3145  000D94  90D8               	bcf	status,0,c
  3146  000D96  3361               	rrcf	??_LCDout& (0+255),f,b
  3147  000D98  90D8               	bcf	status,0,c
  3148  000D9A  3361               	rrcf	??_LCDout& (0+255),f,b
  3149  000D9C  0E01               	movlw	1
  3150  000D9E  1761               	andwf	??_LCDout& (0+255),f,b
  3151  000DA0  508C               	movf	3980,w,c	;volatile
  3152  000DA2  1961               	xorwf	??_LCDout& (0+255),w,b
  3153  000DA4  0BFE               	andlw	-2
  3154  000DA6  1961               	xorwf	??_LCDout& (0+255),w,b
  3155  000DA8  6E8C               	movwf	3980,c	;volatile
  3156                           
  3157                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
  3158  000DAA  C062  F061         	movff	LCDout@number,??_LCDout
  3159  000DAE  90D8               	bcf	status,0,c
  3160  000DB0  3361               	rrcf	??_LCDout& (0+255),f,b
  3161  000DB2  90D8               	bcf	status,0,c
  3162  000DB4  3361               	rrcf	??_LCDout& (0+255),f,b
  3163  000DB6  90D8               	bcf	status,0,c
  3164  000DB8  3361               	rrcf	??_LCDout& (0+255),f,b
  3165  000DBA  0E01               	movlw	1
  3166  000DBC  1761               	andwf	??_LCDout& (0+255),f,b
  3167  000DBE  4761               	rlncf	??_LCDout& (0+255),f,b
  3168  000DC0  508C               	movf	3980,w,c	;volatile
  3169  000DC2  1961               	xorwf	??_LCDout& (0+255),w,b
  3170  000DC4  0BFD               	andlw	-3
  3171  000DC6  1961               	xorwf	??_LCDout& (0+255),w,b
  3172  000DC8  6E8C               	movwf	3980,c	;volatile
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;LCDIO.c: 39:  E_TOG();
  3176  000DCA  ECD6  F008         	call	_E_TOG	;wreg free
  3177                           
  3178                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
  3179  000DCE  0E03               	movlw	3
  3180  000DD0                     u2117:
  3181  000DD0  2EE8               	decfsz	wreg,f,c
  3182  000DD2  D7FE               	bra	u2117
  3183  000DD4  F000               	nop	
  3184  000DD6  0012               	return		;funcret
  3185  000DD8                     __end_of_LCDout:
  3186                           	opt callstack 0
  3187                           
  3188 ;; *************** function _E_TOG *****************
  3189 ;; Defined at:
  3190 ;;		line 23 in file "LCDIO.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3204 ;;      Params:         0       0       0       0
  3205 ;;      Locals:         0       0       0       0
  3206 ;;      Temps:          0       0       0       0
  3207 ;;      Totals:         0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    7
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_LCDout
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text21
  3219  0011AC                     __ptext21:
  3220                           	opt callstack 0
  3221  0011AC                     _E_TOG:
  3222                           	opt callstack 19
  3223                           
  3224                           ;LCDIO.c: 25: LATAbits.LATA6 = 1;
  3225                           
  3226                           ;incstack = 0
  3227  0011AC  8C89               	bsf	3977,6,c	;volatile
  3228                           
  3229                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
  3230  0011AE  0E03               	movlw	3
  3231  0011B0                     u2127:
  3232  0011B0  2EE8               	decfsz	wreg,f,c
  3233  0011B2  D7FE               	bra	u2127
  3234  0011B4  F000               	nop	
  3235                           
  3236                           ;LCDIO.c: 27: LATAbits.LATA6 = 0;
  3237  0011B6  9C89               	bcf	3977,6,c	;volatile
  3238  0011B8  0012               	return		;funcret
  3239  0011BA                     __end_of_E_TOG:
  3240                           	opt callstack 0
  3241                           
  3242 ;; *************** function _InterruptHandlerLow *****************
  3243 ;; Defined at:
  3244 ;;		line 84 in file "main.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		None
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3258 ;;      Params:         0       0       0       0
  3259 ;;      Locals:         0       0       0       0
  3260 ;;      Temps:          0       1       0       0
  3261 ;;      Totals:         0       1       0       0
  3262 ;;Total ram usage:        1 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    6
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		Interrupt level 1
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	intcodelo
  3273  000018                     __pintcodelo:
  3274                           	opt callstack 0
  3275  000018                     _InterruptHandlerLow:
  3276                           	opt callstack 16
  3277                           
  3278                           ;incstack = 0
  3279  000018  8039               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  3280  00001A  CFE0 F060          	movff	bsr,??_InterruptHandlerLow
  3281  00001E  C060  FFE0         	movff	??_InterruptHandlerLow,bsr
  3282  000022  9039               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  3283  000024  0010               	retfie	
  3284  000026                     __end_of_InterruptHandlerLow:
  3285                           	opt callstack 0
  3286                           
  3287 ;; *************** function _InterruptHandlerHigh *****************
  3288 ;; Defined at:
  3289 ;;		line 52 in file "main.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  throwaway       1    0        unsigned char 
  3294 ;;  RFID_flag       1   41[COMRAM] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3304 ;;      Params:         0       0       0       0
  3305 ;;      Locals:         2       0       0       0
  3306 ;;      Temps:         10       0       0       0
  3307 ;;      Totals:        12       0       0       0
  3308 ;;Total ram usage:       12 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    5
  3311 ;; This function calls:
  3312 ;;		_check_RFID
  3313 ;;		_processRFID
  3314 ;; This function is called by:
  3315 ;;		Interrupt level 2
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	intcode
  3320  000008                     __pintcode:
  3321                           	opt callstack 0
  3322  000008                     _InterruptHandlerHigh:
  3323                           	opt callstack 16
  3324                           
  3325                           ;incstack = 0
  3326  000008  8239               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3327  00000A  EF25  F006         	goto	int_func
  3328                           
  3329                           	psect	intcode_body
  3330  000C4A                     __pintcode_body:
  3331                           	opt callstack 16
  3332  000C4A                     int_func:
  3333                           	opt callstack 16
  3334  000C4A  CFE9 F01F          	movff	fsr0l,??_InterruptHandlerHigh
  3335  000C4E  CFEA F020          	movff	fsr0h,??_InterruptHandlerHigh+1
  3336  000C52  CFE1 F021          	movff	fsr1l,??_InterruptHandlerHigh+2
  3337  000C56  CFE2 F022          	movff	fsr1h,??_InterruptHandlerHigh+3
  3338  000C5A  CFD9 F023          	movff	fsr2l,??_InterruptHandlerHigh+4
  3339  000C5E  CFDA F024          	movff	fsr2h,??_InterruptHandlerHigh+5
  3340  000C62  CFF6 F025          	movff	tblptrl,??_InterruptHandlerHigh+6
  3341  000C66  CFF7 F026          	movff	tblptrh,??_InterruptHandlerHigh+7
  3342  000C6A  CFF8 F027          	movff	tblptru,??_InterruptHandlerHigh+8
  3343  000C6E  CFF5 F028          	movff	tablat,??_InterruptHandlerHigh+9
  3344                           
  3345                           ;main.c: 56:     if((PIR1bits.RCIF) && (robot_mode == 0))
  3346  000C72  AA9E               	btfss	3998,5,c	;volatile
  3347  000C74  D018               	goto	i2l53
  3348  000C76  502C               	movf	_robot_mode,w,c	;volatile
  3349  000C78  A4D8               	btfss	status,2,c
  3350  000C7A  D015               	goto	i2l53
  3351                           
  3352                           ;main.c: 57:     {;main.c: 61:         static char RFIDbuf[12];;main.c: 65:         char
      +                           RFID_flag = processRFID(RFIDbuf, RCREG);
  3353  000C7C  0E2D               	movlw	low InterruptHandlerHigh@RFIDbuf
  3354  000C7E  6E06               	movwf	processRFID@RFIDbuf,c
  3355  000C80  0E00               	movlw	high InterruptHandlerHigh@RFIDbuf
  3356  000C82  6E07               	movwf	processRFID@RFIDbuf+1,c
  3357  000C84  CFAE F008          	movff	4014,processRFID@latestChar	;volatile
  3358  000C88  EC6A  F006         	call	_processRFID	;wreg free
  3359  000C8C  6E2A               	movwf	InterruptHandlerHigh@RFID_flag,c
  3360                           
  3361                           ;main.c: 69:         if(RFID_flag == 1)
  3362  000C8E  042A               	decf	InterruptHandlerHigh@RFID_flag,w,c
  3363  000C90  A4D8               	btfss	status,2,c
  3364  000C92  D00A               	goto	i2l58
  3365                           
  3366                           ;main.c: 70:         {;main.c: 71:             check_RFID(RFIDbuf);
  3367  000C94  0E2D               	movlw	low InterruptHandlerHigh@RFIDbuf
  3368  000C96  6E07               	movwf	check_RFID@dataBuf,c
  3369  000C98  0E00               	movlw	high InterruptHandlerHigh@RFIDbuf
  3370  000C9A  6E08               	movwf	check_RFID@dataBuf+1,c
  3371  000C9C  EC34  F003         	call	_check_RFID	;wreg free
  3372                           
  3373                           ;main.c: 72:             robot_mode = 1;
  3374  000CA0  0E01               	movlw	1
  3375  000CA2  6E2C               	movwf	_robot_mode,c	;volatile
  3376  000CA4  D001               	goto	i2l58
  3377  000CA6                     i2l53:
  3378  000CA6  50AE               	movf	4014,w,c	;volatile
  3379  000CA8                     i2l58:
  3380  000CA8  C028  FFF5         	movff	??_InterruptHandlerHigh+9,tablat
  3381  000CAC  C027  FFF8         	movff	??_InterruptHandlerHigh+8,tblptru
  3382  000CB0  C026  FFF7         	movff	??_InterruptHandlerHigh+7,tblptrh
  3383  000CB4  C025  FFF6         	movff	??_InterruptHandlerHigh+6,tblptrl
  3384  000CB8  C024  FFDA         	movff	??_InterruptHandlerHigh+5,fsr2h
  3385  000CBC  C023  FFD9         	movff	??_InterruptHandlerHigh+4,fsr2l
  3386  000CC0  C022  FFE2         	movff	??_InterruptHandlerHigh+3,fsr1h
  3387  000CC4  C021  FFE1         	movff	??_InterruptHandlerHigh+2,fsr1l
  3388  000CC8  C020  FFEA         	movff	??_InterruptHandlerHigh+1,fsr0h
  3389  000CCC  C01F  FFE9         	movff	??_InterruptHandlerHigh,fsr0l
  3390  000CD0  9239               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3391  000CD2  0011               	retfie		f
  3392  000CD4                     __end_of_InterruptHandlerHigh:
  3393                           	opt callstack 0
  3394                           
  3395 ;; *************** function _processRFID *****************
  3396 ;; Defined at:
  3397 ;;		line 34 in file "RFID.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  RFIDbuf         2    5[COMRAM] PTR unsigned char 
  3400 ;;		 -> InterruptHandlerHigh@RFIDbuf(12), 
  3401 ;;  latestChar      1    7[COMRAM] unsigned char 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  i               1   10[COMRAM] unsigned char 
  3404 ;;  i               2    8[COMRAM] int 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      unsigned char 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3414 ;;      Params:         3       0       0       0
  3415 ;;      Locals:         3       0       0       0
  3416 ;;      Temps:          0       0       0       0
  3417 ;;      Totals:         6       0       0       0
  3418 ;;Total ram usage:        6 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    4
  3421 ;; This function calls:
  3422 ;;		i2_ClearLCD
  3423 ;;		i2_SendLCD
  3424 ;;		i2_SetLine
  3425 ;; This function is called by:
  3426 ;;		_InterruptHandlerHigh
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text24
  3431  000CD4                     __ptext24:
  3432                           	opt callstack 0
  3433  000CD4                     _processRFID:
  3434                           	opt callstack 16
  3435                           
  3436                           ;RFID.c: 34: char processRFID(char RFIDbuf[], char latestChar);RFID.c: 35: {;RFID.c: 39:
      +                               static char position_in_buf;;RFID.c: 42:     if(latestChar == 0x03)
  3437                           
  3438                           ;incstack = 0
  3439  000CD4  0E03               	movlw	3
  3440  000CD6  1808               	xorwf	processRFID@latestChar,w,c
  3441  000CD8  A4D8               	btfss	status,2,c
  3442  000CDA  D020               	goto	i2l1887
  3443                           
  3444                           ;RFID.c: 43:     {;RFID.c: 44:         ClearLCD();
  3445  000CDC  ECC9  F008         	call	i2_ClearLCD	;wreg free
  3446                           
  3447                           ;RFID.c: 45:         SetLine(1);
  3448  000CE0  0E01               	movlw	1
  3449  000CE2  EC78  F008         	call	i2_SetLine
  3450                           
  3451                           ;RFID.c: 46:         for(int i=0;i<10;i++)
  3452  000CE6  0E00               	movlw	0
  3453  000CE8  6E0A               	movwf	processRFID@i+1,c
  3454  000CEA  0E00               	movlw	0
  3455  000CEC  6E09               	movwf	processRFID@i,c
  3456  000CEE                     i2l1875:
  3457                           
  3458                           ;RFID.c: 47:         {;RFID.c: 48:             SendLCD(RFIDbuf[i],1);
  3459  000CEE  0E01               	movlw	1
  3460  000CF0  6E03               	movwf	i2SendLCD@type,c
  3461  000CF2  5009               	movf	processRFID@i,w,c
  3462  000CF4  2406               	addwf	processRFID@RFIDbuf,w,c
  3463  000CF6  6ED9               	movwf	fsr2l,c
  3464  000CF8  500A               	movf	processRFID@i+1,w,c
  3465  000CFA  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  3466  000CFC  6EDA               	movwf	fsr2h,c
  3467  000CFE  50DF               	movf	indf2,w,c
  3468  000D00  EC49  F008         	call	i2_SendLCD
  3469                           
  3470                           ;RFID.c: 49:         }
  3471  000D04  4A09               	infsnz	processRFID@i,f,c
  3472  000D06  2A0A               	incf	processRFID@i+1,f,c
  3473  000D08  BE0A               	btfsc	processRFID@i+1,7,c
  3474  000D0A  D7F1               	goto	i2l1875
  3475  000D0C  500A               	movf	processRFID@i+1,w,c
  3476  000D0E  E104               	bnz	i2u118_40
  3477  000D10  0E0A               	movlw	10
  3478  000D12  5C09               	subwf	processRFID@i,w,c
  3479  000D14  A0D8               	btfss	status,0,c
  3480  000D16  D7EB               	goto	i2l1875
  3481  000D18                     i2u118_40:
  3482                           
  3483                           ;RFID.c: 51:         return 1;
  3484  000D18  0E01               	movlw	1
  3485  000D1A  0012               	return	
  3486  000D1C                     i2l1887:
  3487                           
  3488                           ;RFID.c: 54:     {;RFID.c: 57:        if(latestChar == 0x02)
  3489  000D1C  0E02               	movlw	2
  3490  000D1E  1808               	xorwf	processRFID@latestChar,w,c
  3491  000D20  A4D8               	btfss	status,2,c
  3492  000D22  D012               	goto	i2l1907
  3493                           
  3494                           ;RFID.c: 58:         {;RFID.c: 59:            position_in_buf = 0;
  3495  000D24  0E00               	movlw	0
  3496  000D26  6E2B               	movwf	processRFID@position_in_buf,c
  3497                           
  3498                           ;RFID.c: 60:            for(char i=0 ;i<12 ;i++)
  3499  000D28  0E00               	movlw	0
  3500  000D2A  6E0B               	movwf	processRFID@i_1070,c
  3501  000D2C                     i2l1895:
  3502                           
  3503                           ;RFID.c: 61:            {;RFID.c: 62:                RFIDbuf[i] = 0;
  3504  000D2C  500B               	movf	processRFID@i_1070,w,c
  3505  000D2E  2406               	addwf	processRFID@RFIDbuf,w,c
  3506  000D30  6ED9               	movwf	fsr2l,c
  3507  000D32  0E00               	movlw	0
  3508  000D34  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  3509  000D36  6EDA               	movwf	fsr2h,c
  3510  000D38  0E00               	movlw	0
  3511  000D3A  6EDF               	movwf	indf2,c
  3512                           
  3513                           ;RFID.c: 63:            }
  3514  000D3C  2A0B               	incf	processRFID@i_1070,f,c
  3515  000D3E  0E0B               	movlw	11
  3516  000D40  640B               	cpfsgt	processRFID@i_1070,c
  3517  000D42  D7F4               	goto	i2l1895
  3518  000D44                     i2u120_40:
  3519                           
  3520                           ;RFID.c: 65:            return 0;
  3521  000D44  0E00               	movlw	0
  3522  000D46  0012               	return	
  3523  000D48                     i2l1907:
  3524                           
  3525                           ;RFID.c: 69:         {;RFID.c: 70:             RFIDbuf[position_in_buf] = latestChar;
  3526  000D48  502B               	movf	processRFID@position_in_buf,w,c
  3527  000D4A  2406               	addwf	processRFID@RFIDbuf,w,c
  3528  000D4C  6ED9               	movwf	fsr2l,c
  3529  000D4E  0E00               	movlw	0
  3530  000D50  2007               	addwfc	processRFID@RFIDbuf+1,w,c
  3531  000D52  6EDA               	movwf	fsr2h,c
  3532  000D54  C008  FFDF         	movff	processRFID@latestChar,indf2
  3533                           
  3534                           ;RFID.c: 71:             position_in_buf++;
  3535  000D58  2A2B               	incf	processRFID@position_in_buf,f,c
  3536  000D5A  D7F4               	goto	i2u120_40
  3537  000D5C                     __end_of_processRFID:
  3538                           	opt callstack 0
  3539                           
  3540 ;; *************** function i2_ClearLCD *****************
  3541 ;; Defined at:
  3542 ;;		line 137 in file "LCDIO.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3556 ;;      Params:         0       0       0       0
  3557 ;;      Locals:         0       0       0       0
  3558 ;;      Temps:          1       0       0       0
  3559 ;;      Totals:         1       0       0       0
  3560 ;;Total ram usage:        1 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    3
  3563 ;; This function calls:
  3564 ;;		i2_SendLCD
  3565 ;; This function is called by:
  3566 ;;		_processRFID
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text25
  3571  001192                     __ptext25:
  3572                           	opt callstack 0
  3573  001192                     i2_ClearLCD:
  3574                           	opt callstack 16
  3575                           
  3576                           ;LCDIO.c: 138:     SendLCD(0b00000001,0);
  3577                           
  3578                           ;incstack = 0
  3579  001192  0E00               	movlw	0
  3580  001194  6E03               	movwf	i2SendLCD@type,c
  3581  001196  0E01               	movlw	1
  3582  001198  EC49  F008         	call	i2_SendLCD
  3583                           
  3584                           ;LCDIO.c: 139:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3585  00119C  0E0D               	movlw	13
  3586  00119E  6E05               	movwf	??i2_ClearLCD& (0+255),c
  3587  0011A0  0EFC               	movlw	252
  3588  0011A2                     i2u213_47:
  3589  0011A2  2EE8               	decfsz	wreg,f,c
  3590  0011A4  D7FE               	bra	i2u213_47
  3591  0011A6  2E05               	decfsz	??i2_ClearLCD& (0+255),f,c
  3592  0011A8  D7FC               	bra	i2u213_47
  3593  0011AA  0012               	return		;funcret
  3594  0011AC                     __end_ofi2_ClearLCD:
  3595                           	opt callstack 0
  3596                           
  3597 ;; *************** function _check_RFID *****************
  3598 ;; Defined at:
  3599 ;;		line 79 in file "RFID.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  dataBuf         2    6[COMRAM] PTR unsigned char 
  3602 ;;		 -> InterruptHandlerHigh@RFIDbuf(12), 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  i               2   28[COMRAM] int 
  3605 ;;  hexBuf         12   10[COMRAM] unsigned char [12]
  3606 ;;  checksum        1   27[COMRAM] unsigned char 
  3607 ;;  byte5           1   26[COMRAM] unsigned char 
  3608 ;;  byte4           1   25[COMRAM] unsigned char 
  3609 ;;  byte3           1   24[COMRAM] unsigned char 
  3610 ;;  byte2           1   23[COMRAM] unsigned char 
  3611 ;;  byte1           1   22[COMRAM] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3621 ;;      Params:         2       0       0       0
  3622 ;;      Locals:        20       0       0       0
  3623 ;;      Temps:          2       0       0       0
  3624 ;;      Totals:        24       0       0       0
  3625 ;;Total ram usage:       24 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    4
  3628 ;; This function calls:
  3629 ;;		i2_LCD_String
  3630 ;;		i2_SetLine
  3631 ;; This function is called by:
  3632 ;;		_InterruptHandlerHigh
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text26
  3637  000668                     __ptext26:
  3638                           	opt callstack 0
  3639  000668                     _check_RFID:
  3640                           	opt callstack 16
  3641                           
  3642                           ;RFID.c: 79: void check_RFID(char dataBuf[]);RFID.c: 80: {;RFID.c: 82:     char hexBuf[1
      +                          2];;RFID.c: 84:     for(int i=0; i<12;i++)
  3643                           
  3644                           ;incstack = 0
  3645  000668  0E00               	movlw	0
  3646  00066A  6E1E               	movwf	check_RFID@i+1,c
  3647  00066C  0E00               	movlw	0
  3648  00066E  6E1D               	movwf	check_RFID@i,c
  3649  000670                     i2l1921:
  3650                           
  3651                           ;RFID.c: 85:     {;RFID.c: 86:         if ((dataBuf[i] >= '0') && (dataBuf[i] <= '9'))
  3652  000670  501D               	movf	check_RFID@i,w,c
  3653  000672  2407               	addwf	check_RFID@dataBuf,w,c
  3654  000674  6ED9               	movwf	fsr2l,c
  3655  000676  501E               	movf	check_RFID@i+1,w,c
  3656  000678  2008               	addwfc	check_RFID@dataBuf+1,w,c
  3657  00067A  6EDA               	movwf	fsr2h,c
  3658  00067C  0E2F               	movlw	47
  3659  00067E  64DF               	cpfsgt	indf2,c
  3660  000680  D018               	goto	i2l1927
  3661  000682  501D               	movf	check_RFID@i,w,c
  3662  000684  2407               	addwf	check_RFID@dataBuf,w,c
  3663  000686  6ED9               	movwf	fsr2l,c
  3664  000688  501E               	movf	check_RFID@i+1,w,c
  3665  00068A  2008               	addwfc	check_RFID@dataBuf+1,w,c
  3666  00068C  6EDA               	movwf	fsr2h,c
  3667  00068E  0E3A               	movlw	58
  3668  000690  60DF               	cpfslt	indf2,c
  3669  000692  D00F               	goto	i2l1927
  3670                           
  3671                           ;RFID.c: 87:         {;RFID.c: 88:             hexBuf[i] = dataBuf[i] - '0';
  3672  000694  0E0B               	movlw	low check_RFID@hexBuf
  3673  000696  241D               	addwf	check_RFID@i,w,c
  3674  000698  6ED9               	movwf	fsr2l,c
  3675  00069A  0E00               	movlw	high check_RFID@hexBuf
  3676  00069C  201E               	addwfc	check_RFID@i+1,w,c
  3677  00069E  6EDA               	movwf	fsr2h,c
  3678  0006A0  501D               	movf	check_RFID@i,w,c
  3679  0006A2  2407               	addwf	check_RFID@dataBuf,w,c
  3680  0006A4  6EE1               	movwf	fsr1l,c
  3681  0006A6  501E               	movf	check_RFID@i+1,w,c
  3682  0006A8  2008               	addwfc	check_RFID@dataBuf+1,w,c
  3683  0006AA  6EE2               	movwf	fsr1h,c
  3684  0006AC  50E7               	movf	indf1,w,c
  3685  0006AE  0FD0               	addlw	208
  3686  0006B0  D020               	goto	L1
  3687  0006B2                     i2l1927:
  3688  0006B2  501D               	movf	check_RFID@i,w,c
  3689  0006B4  2407               	addwf	check_RFID@dataBuf,w,c
  3690  0006B6  6ED9               	movwf	fsr2l,c
  3691  0006B8  501E               	movf	check_RFID@i+1,w,c
  3692  0006BA  2008               	addwfc	check_RFID@dataBuf+1,w,c
  3693  0006BC  6EDA               	movwf	fsr2h,c
  3694  0006BE  0E40               	movlw	64
  3695  0006C0  64DF               	cpfsgt	indf2,c
  3696  0006C2  D018               	goto	i2l1933
  3697  0006C4  501D               	movf	check_RFID@i,w,c
  3698  0006C6  2407               	addwf	check_RFID@dataBuf,w,c
  3699  0006C8  6ED9               	movwf	fsr2l,c
  3700  0006CA  501E               	movf	check_RFID@i+1,w,c
  3701  0006CC  2008               	addwfc	check_RFID@dataBuf+1,w,c
  3702  0006CE  6EDA               	movwf	fsr2h,c
  3703  0006D0  0E47               	movlw	71
  3704  0006D2  60DF               	cpfslt	indf2,c
  3705  0006D4  D00F               	goto	i2l1933
  3706                           
  3707                           ;RFID.c: 90:         {;RFID.c: 91:             hexBuf[i] = 10 + dataBuf[i] - 'A';
  3708  0006D6  0E0B               	movlw	low check_RFID@hexBuf
  3709  0006D8  241D               	addwf	check_RFID@i,w,c
  3710  0006DA  6ED9               	movwf	fsr2l,c
  3711  0006DC  0E00               	movlw	high check_RFID@hexBuf
  3712  0006DE  201E               	addwfc	check_RFID@i+1,w,c
  3713  0006E0  6EDA               	movwf	fsr2h,c
  3714  0006E2  501D               	movf	check_RFID@i,w,c
  3715  0006E4  2407               	addwf	check_RFID@dataBuf,w,c
  3716  0006E6  6EE1               	movwf	fsr1l,c
  3717  0006E8  501E               	movf	check_RFID@i+1,w,c
  3718  0006EA  2008               	addwfc	check_RFID@dataBuf+1,w,c
  3719  0006EC  6EE2               	movwf	fsr1h,c
  3720  0006EE  50E7               	movf	indf1,w,c
  3721  0006F0  0FC9               	addlw	201
  3722  0006F2                     L1:
  3723  0006F2  6EDF               	movwf	indf2,c
  3724  0006F4                     i2l1933:
  3725                           
  3726                           ;RFID.c: 93:     }
  3727  0006F4  4A1D               	infsnz	check_RFID@i,f,c
  3728  0006F6  2A1E               	incf	check_RFID@i+1,f,c
  3729  0006F8  BE1E               	btfsc	check_RFID@i+1,7,c
  3730  0006FA  D7BA               	goto	i2l1921
  3731  0006FC  501E               	movf	check_RFID@i+1,w,c
  3732  0006FE  E104               	bnz	i2u125_40
  3733  000700  0E0C               	movlw	12
  3734  000702  5C1D               	subwf	check_RFID@i,w,c
  3735  000704  A0D8               	btfss	status,0,c
  3736  000706  D7B4               	goto	i2l1921
  3737  000708                     i2u125_40:
  3738                           
  3739                           ;RFID.c: 95:     char byte1 = 0x00 | (hexBuf[0] < 1) | hexBuf[1];
  3740  000708  500B               	movf	check_RFID@hexBuf,w,c
  3741  00070A  A4D8               	btfss	status,2,c
  3742  00070C  D002               	goto	i2u126_40
  3743  00070E  0E01               	movlw	1
  3744  000710  D001               	goto	i2u127_40
  3745  000712                     i2u126_40:
  3746  000712  0E00               	movlw	0
  3747  000714                     i2u127_40:
  3748  000714  100C               	iorwf	check_RFID@hexBuf+1,w,c
  3749  000716  6E17               	movwf	check_RFID@byte1,c
  3750                           
  3751                           ;RFID.c: 96:     char byte2 = 0x00 | (hexBuf[2] < 1) | hexBuf[3];
  3752  000718  500D               	movf	check_RFID@hexBuf+2,w,c
  3753  00071A  A4D8               	btfss	status,2,c
  3754  00071C  D002               	goto	i2u128_40
  3755  00071E  0E01               	movlw	1
  3756  000720  D001               	goto	i2u129_40
  3757  000722                     i2u128_40:
  3758  000722  0E00               	movlw	0
  3759  000724                     i2u129_40:
  3760  000724  100E               	iorwf	check_RFID@hexBuf+3,w,c
  3761  000726  6E18               	movwf	check_RFID@byte2,c
  3762                           
  3763                           ;RFID.c: 97:     char byte3 = 0x00 | (hexBuf[4] < 1) | hexBuf[5];
  3764  000728  500F               	movf	check_RFID@hexBuf+4,w,c
  3765  00072A  A4D8               	btfss	status,2,c
  3766  00072C  D002               	goto	i2u130_40
  3767  00072E  0E01               	movlw	1
  3768  000730  D001               	goto	i2u131_40
  3769  000732                     i2u130_40:
  3770  000732  0E00               	movlw	0
  3771  000734                     i2u131_40:
  3772  000734  1010               	iorwf	check_RFID@hexBuf+5,w,c
  3773  000736  6E19               	movwf	check_RFID@byte3,c
  3774                           
  3775                           ;RFID.c: 98:     char byte4 = 0x00 | (hexBuf[6] < 1) | hexBuf[7];
  3776  000738  5011               	movf	check_RFID@hexBuf+6,w,c
  3777  00073A  A4D8               	btfss	status,2,c
  3778  00073C  D002               	goto	i2u132_40
  3779  00073E  0E01               	movlw	1
  3780  000740  D001               	goto	i2u133_40
  3781  000742                     i2u132_40:
  3782  000742  0E00               	movlw	0
  3783  000744                     i2u133_40:
  3784  000744  1012               	iorwf	check_RFID@hexBuf+7,w,c
  3785  000746  6E1A               	movwf	check_RFID@byte4,c
  3786                           
  3787                           ;RFID.c: 99:     char byte5 = 0x00 | (hexBuf[8] < 1) | hexBuf[9];
  3788  000748  5013               	movf	check_RFID@hexBuf+8,w,c
  3789  00074A  A4D8               	btfss	status,2,c
  3790  00074C  D002               	goto	i2u134_40
  3791  00074E  0E01               	movlw	1
  3792  000750  D001               	goto	i2u135_40
  3793  000752                     i2u134_40:
  3794  000752  0E00               	movlw	0
  3795  000754                     i2u135_40:
  3796  000754  1014               	iorwf	check_RFID@hexBuf+9,w,c
  3797  000756  6E1B               	movwf	check_RFID@byte5,c
  3798                           
  3799                           ;RFID.c: 100:     char checksum = 0x00 | (hexBuf[10] < 1) | hexBuf[11];
  3800  000758  5015               	movf	check_RFID@hexBuf+10,w,c
  3801  00075A  A4D8               	btfss	status,2,c
  3802  00075C  D002               	goto	i2u136_40
  3803  00075E  0E01               	movlw	1
  3804  000760  D001               	goto	i2u137_40
  3805  000762                     i2u136_40:
  3806  000762  0E00               	movlw	0
  3807  000764                     i2u137_40:
  3808  000764  1016               	iorwf	check_RFID@hexBuf+11,w,c
  3809  000766  6E1C               	movwf	check_RFID@checksum,c
  3810                           
  3811                           ;RFID.c: 103:     if(byte1^byte2^byte3^byte4^byte5 == checksum)
  3812  000768  5017               	movf	check_RFID@byte1,w,c
  3813  00076A  1818               	xorwf	check_RFID@byte2,w,c
  3814  00076C  1819               	xorwf	check_RFID@byte3,w,c
  3815  00076E  181A               	xorwf	check_RFID@byte4,w,c
  3816  000770  6E09               	movwf	??_check_RFID& (0+255),c
  3817  000772  6A0A               	clrf	(??_check_RFID+1)& (0+255),c
  3818  000774  501C               	movf	check_RFID@checksum,w,c
  3819  000776  181B               	xorwf	check_RFID@byte5,w,c
  3820  000778  A4D8               	btfss	status,2,c
  3821  00077A  D002               	goto	i2u138_40
  3822  00077C  0E01               	movlw	1
  3823  00077E  D001               	goto	i2u139_40
  3824  000780                     i2u138_40:
  3825  000780  0E00               	movlw	0
  3826  000782                     i2u139_40:
  3827  000782  1A09               	xorwf	??_check_RFID,f,c
  3828  000784  0E00               	movlw	0
  3829  000786  1A0A               	xorwf	??_check_RFID+1,f,c
  3830  000788  5009               	movf	??_check_RFID,w,c
  3831  00078A  100A               	iorwf	??_check_RFID+1,w,c
  3832  00078C  B4D8               	btfsc	status,2,c
  3833  00078E  D00A               	goto	i2l1943
  3834                           
  3835                           ;RFID.c: 104:     {;RFID.c: 106:         SetLine(2);
  3836  000790  0E02               	movlw	2
  3837  000792  EC78  F008         	call	i2_SetLine
  3838                           
  3839                           ;RFID.c: 107:         LCD_String("CHECKSUM PASSED");
  3840  000796  0E11               	movlw	low STR_4
  3841  000798  6E05               	movwf	i2LCD_String@string,c
  3842  00079A  0E03               	movlw	high STR_4
  3843  00079C  6E06               	movwf	i2LCD_String@string+1,c
  3844  00079E  EC59  F007         	call	i2_LCD_String	;wreg free
  3845                           
  3846                           ;RFID.c: 108:     }
  3847  0007A2  0012               	return	
  3848  0007A4                     i2l1943:
  3849                           
  3850                           ;RFID.c: 111:         SetLine(2);
  3851  0007A4  0E02               	movlw	2
  3852  0007A6  EC78  F008         	call	i2_SetLine
  3853                           
  3854                           ;RFID.c: 112:         LCD_String("CHECKSUM FAILED");
  3855  0007AA  0E01               	movlw	low STR_5
  3856  0007AC  6E05               	movwf	i2LCD_String@string,c
  3857  0007AE  0E03               	movlw	high STR_5
  3858  0007B0  6E06               	movwf	i2LCD_String@string+1,c
  3859  0007B2  EC59  F007         	call	i2_LCD_String	;wreg free
  3860  0007B6  0012               	return		;funcret
  3861  0007B8                     __end_of_check_RFID:
  3862                           	opt callstack 0
  3863                           
  3864 ;; *************** function i2_SetLine *****************
  3865 ;; Defined at:
  3866 ;;		line 107 in file "LCDIO.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  line            1    wreg     unsigned char 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  line            1    4[COMRAM] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3880 ;;      Params:         0       0       0       0
  3881 ;;      Locals:         1       0       0       0
  3882 ;;      Temps:          0       0       0       0
  3883 ;;      Totals:         1       0       0       0
  3884 ;;Total ram usage:        1 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    3
  3887 ;; This function calls:
  3888 ;;		i2_SendLCD
  3889 ;; This function is called by:
  3890 ;;		_processRFID
  3891 ;;		_check_RFID
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text27
  3896  0010F0                     __ptext27:
  3897                           	opt callstack 0
  3898  0010F0                     i2_SetLine:
  3899                           	opt callstack 16
  3900                           
  3901                           ;incstack = 0
  3902                           ;i2SetLine@line stored from wreg
  3903  0010F0  6E05               	movwf	i2SetLine@line,c
  3904                           
  3905                           ;LCDIO.c: 109:     if(line == 1){
  3906  0010F2  0405               	decf	i2SetLine@line,w,c
  3907  0010F4  A4D8               	btfss	status,2,c
  3908  0010F6  D005               	goto	i2l1835
  3909                           
  3910                           ;LCDIO.c: 110:         SendLCD(0x80,0);
  3911  0010F8  0E00               	movlw	0
  3912  0010FA  6E03               	movwf	i2SendLCD@type,c
  3913  0010FC  0E80               	movlw	128
  3914  0010FE  EC49  F008         	call	i2_SendLCD
  3915  001102                     i2l1835:
  3916                           
  3917                           ;LCDIO.c: 113:     if(line == 2){
  3918  001102  0E02               	movlw	2
  3919  001104  1805               	xorwf	i2SetLine@line,w,c
  3920  001106  A4D8               	btfss	status,2,c
  3921  001108  D005               	goto	i2l1839
  3922                           
  3923                           ;LCDIO.c: 114:         SendLCD(0xC0,0);
  3924  00110A  0E00               	movlw	0
  3925  00110C  6E03               	movwf	i2SendLCD@type,c
  3926  00110E  0EC0               	movlw	192
  3927  001110  EC49  F008         	call	i2_SendLCD
  3928  001114                     i2l1839:
  3929                           
  3930                           ;LCDIO.c: 116:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  3931  001114  0E21               	movlw	33
  3932  001116                     i2u214_47:
  3933  001116  2EE8               	decfsz	wreg,f,c
  3934  001118  D7FE               	bra	i2u214_47
  3935  00111A  F000               	nop	
  3936  00111C  0012               	return		;funcret
  3937  00111E                     __end_ofi2_SetLine:
  3938                           	opt callstack 0
  3939                           
  3940 ;; *************** function i2_LCD_String *****************
  3941 ;; Defined at:
  3942 ;;		line 119 in file "LCDIO.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  string          2    4[COMRAM] PTR unsigned char 
  3945 ;;		 -> STR_5(16), STR_4(16), STR_3(16), main@temp(32), 
  3946 ;;		 -> STR_1(15), 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3958 ;;      Params:         2       0       0       0
  3959 ;;      Locals:         0       0       0       0
  3960 ;;      Temps:          0       0       0       0
  3961 ;;      Totals:         2       0       0       0
  3962 ;;Total ram usage:        2 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    3
  3965 ;; This function calls:
  3966 ;;		i2_SendLCD
  3967 ;; This function is called by:
  3968 ;;		_check_RFID
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text28
  3973  000EB2                     __ptext28:
  3974                           	opt callstack 0
  3975  000EB2                     i2_LCD_String:
  3976                           	opt callstack 16
  3977                           
  3978                           ;LCDIO.c: 121: while(*string != 0){
  3979                           
  3980                           ;incstack = 0
  3981  000EB2  D01A               	goto	i2l1849
  3982  000EB4                     i2l1843:
  3983                           
  3984                           ;LCDIO.c: 124: SendLCD(*string++,1);
  3985  000EB4  0E01               	movlw	1
  3986  000EB6  6E03               	movwf	i2SendLCD@type,c
  3987  000EB8  C005  FFF6         	movff	i2LCD_String@string,tblptrl
  3988  000EBC  C006  FFF7         	movff	i2LCD_String@string+1,tblptrh
  3989  000EC0  6AF8               	clrf	tblptru,c
  3990  000EC2  0E02               	movlw	(high __ramtop+-1)
  3991  000EC4  64F7               	cpfsgt	tblptrh,c
  3992  000EC6  D003               	bra	i2u113_47
  3993  000EC8  0008               	tblrd		*
  3994  000ECA  50F5               	movf	tablat,w,c
  3995  000ECC  D005               	bra	i2u113_40
  3996  000ECE                     i2u113_47:
  3997  000ECE  CFF6 FFE9          	movff	tblptrl,fsr0l
  3998  000ED2  CFF7 FFEA          	movff	tblptrh,fsr0h
  3999  000ED6  50EF               	movf	indf0,w,c
  4000  000ED8                     i2u113_40:
  4001  000ED8  EC49  F008         	call	i2_SendLCD
  4002  000EDC  4A05               	infsnz	i2LCD_String@string,f,c
  4003  000EDE  2A06               	incf	i2LCD_String@string+1,f,c
  4004                           
  4005                           ;LCDIO.c: 125:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  4006  000EE0  0E21               	movlw	33
  4007  000EE2                     i2u215_47:
  4008  000EE2  2EE8               	decfsz	wreg,f,c
  4009  000EE4  D7FE               	bra	i2u215_47
  4010  000EE6  F000               	nop	
  4011  000EE8                     i2l1849:
  4012                           
  4013                           ;LCDIO.c: 121: while(*string != 0){
  4014  000EE8  C005  FFF6         	movff	i2LCD_String@string,tblptrl
  4015  000EEC  C006  FFF7         	movff	i2LCD_String@string+1,tblptrh
  4016  000EF0  6AF8               	clrf	tblptru,c
  4017  000EF2  0E02               	movlw	(high __ramtop+-1)
  4018  000EF4  64F7               	cpfsgt	tblptrh,c
  4019  000EF6  D003               	bra	i2u114_47
  4020  000EF8  0008               	tblrd		*
  4021  000EFA  50F5               	movf	tablat,w,c
  4022  000EFC  D005               	bra	i2u114_40
  4023  000EFE                     i2u114_47:
  4024  000EFE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4025  000F02  CFF7 FFEA          	movff	tblptrh,fsr0h
  4026  000F06  50EF               	movf	indf0,w,c
  4027  000F08                     i2u114_40:
  4028  000F08  0900               	iorlw	0
  4029  000F0A  B4D8               	btfsc	status,2,c
  4030  000F0C  0012               	return	
  4031  000F0E  D7D2               	goto	i2l1843
  4032  000F10                     __end_ofi2_LCD_String:
  4033                           	opt callstack 0
  4034                           
  4035 ;; *************** function i2_SendLCD *****************
  4036 ;; Defined at:
  4037 ;;		line 44 in file "LCDIO.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  Byte            1    wreg     unsigned char 
  4040 ;;  type            1    2[COMRAM] unsigned char 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  Byte            1    3[COMRAM] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4052 ;;      Params:         1       0       0       0
  4053 ;;      Locals:         1       0       0       0
  4054 ;;      Temps:          0       0       0       0
  4055 ;;      Totals:         2       0       0       0
  4056 ;;Total ram usage:        2 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    2
  4059 ;; This function calls:
  4060 ;;		i2_LCDout
  4061 ;; This function is called by:
  4062 ;;		_processRFID
  4063 ;;		i2_SetLine
  4064 ;;		i2_LCD_String
  4065 ;;		i2_ClearLCD
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text29
  4070  001092                     __ptext29:
  4071                           	opt callstack 0
  4072  001092                     i2_SendLCD:
  4073                           	opt callstack 16
  4074                           
  4075                           ;incstack = 0
  4076                           ;i2SendLCD@Byte stored from wreg
  4077  001092  6E04               	movwf	i2SendLCD@Byte,c
  4078                           
  4079                           ;LCDIO.c: 47:  LATAbits.LATA7 = type;
  4080  001094  B003               	btfsc	i2SendLCD@type,0,c
  4081  001096  D002               	bra	i2u109_45
  4082  001098  9E89               	bcf	3977,7,c	;volatile
  4083  00109A  D001               	bra	i2u109_46
  4084  00109C                     i2u109_45:
  4085  00109C  8E89               	bsf	3977,7,c	;volatile
  4086  00109E                     i2u109_46:
  4087                           
  4088                           ;LCDIO.c: 49:  LCDout((0b11110000 & Byte) >> 4);
  4089  00109E  3804               	swapf	i2SendLCD@Byte,w,c
  4090  0010A0  0B0F               	andlw	15
  4091  0010A2  0B0F               	andlw	15
  4092  0010A4  ECEC  F006         	call	i2_LCDout
  4093                           
  4094                           ;LCDIO.c: 50:  _delay((unsigned long)((10)*(8000000/4000000.0)));
  4095  0010A8  0E06               	movlw	6
  4096  0010AA                     i2u216_47:
  4097  0010AA  2EE8               	decfsz	wreg,f,c
  4098  0010AC  D7FE               	bra	i2u216_47
  4099  0010AE  D000               	nop2	
  4100                           
  4101                           ;LCDIO.c: 53:  LCDout(0b00001111 & Byte);
  4102  0010B0  5004               	movf	i2SendLCD@Byte,w,c
  4103  0010B2  0B0F               	andlw	15
  4104  0010B4  ECEC  F006         	call	i2_LCDout
  4105                           
  4106                           ;LCDIO.c: 54:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  4107  0010B8  0E21               	movlw	33
  4108  0010BA                     i2u217_47:
  4109  0010BA  2EE8               	decfsz	wreg,f,c
  4110  0010BC  D7FE               	bra	i2u217_47
  4111  0010BE  F000               	nop	
  4112  0010C0  0012               	return		;funcret
  4113  0010C2                     __end_ofi2_SendLCD:
  4114                           	opt callstack 0
  4115                           
  4116 ;; *************** function i2_LCDout *****************
  4117 ;; Defined at:
  4118 ;;		line 31 in file "LCDIO.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  number          1    wreg     unsigned char 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  number          1    1[COMRAM] unsigned char 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg, status,2, status,0, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4132 ;;      Params:         0       0       0       0
  4133 ;;      Locals:         1       0       0       0
  4134 ;;      Temps:          1       0       0       0
  4135 ;;      Totals:         2       0       0       0
  4136 ;;Total ram usage:        2 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    1
  4139 ;; This function calls:
  4140 ;;		i2_E_TOG
  4141 ;; This function is called by:
  4142 ;;		i2_SendLCD
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text30
  4147  000DD8                     __ptext30:
  4148                           	opt callstack 0
  4149  000DD8                     i2_LCDout:
  4150                           	opt callstack 16
  4151                           
  4152                           ;incstack = 0
  4153                           ;i2LCDout@number stored from wreg
  4154  000DD8  6E02               	movwf	i2LCDout@number,c
  4155                           
  4156                           ;LCDIO.c: 33:  LATCbits.LATC0 = (0b0001 & number);
  4157  000DDA  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  4158  000DDE  0E01               	movlw	1
  4159  000DE0  1601               	andwf	??i2_LCDout,f,c
  4160  000DE2  508B               	movf	3979,w,c	;volatile
  4161  000DE4  1801               	xorwf	??i2_LCDout,w,c
  4162  000DE6  0BFE               	andlw	-2
  4163  000DE8  1801               	xorwf	??i2_LCDout,w,c
  4164  000DEA  6E8B               	movwf	3979,c	;volatile
  4165                           
  4166                           ;LCDIO.c: 34:  LATCbits.LATC3 = (0b0010 & number) >> 1;
  4167  000DEC  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  4168  000DF0  90D8               	bcf	status,0,c
  4169  000DF2  3201               	rrcf	??i2_LCDout,f,c
  4170  000DF4  0E01               	movlw	1
  4171  000DF6  1601               	andwf	??i2_LCDout,f,c
  4172  000DF8  4601               	rlncf	??i2_LCDout,f,c
  4173  000DFA  4601               	rlncf	??i2_LCDout,f,c
  4174  000DFC  4601               	rlncf	??i2_LCDout,f,c
  4175  000DFE  508B               	movf	3979,w,c	;volatile
  4176  000E00  1801               	xorwf	??i2_LCDout,w,c
  4177  000E02  0BF7               	andlw	-9
  4178  000E04  1801               	xorwf	??i2_LCDout,w,c
  4179  000E06  6E8B               	movwf	3979,c	;volatile
  4180                           
  4181                           ;LCDIO.c: 35:  LATDbits.LATD0 = (0b0100 & number) >> 2;
  4182  000E08  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  4183  000E0C  90D8               	bcf	status,0,c
  4184  000E0E  3201               	rrcf	??i2_LCDout,f,c
  4185  000E10  90D8               	bcf	status,0,c
  4186  000E12  3201               	rrcf	??i2_LCDout,f,c
  4187  000E14  0E01               	movlw	1
  4188  000E16  1601               	andwf	??i2_LCDout,f,c
  4189  000E18  508C               	movf	3980,w,c	;volatile
  4190  000E1A  1801               	xorwf	??i2_LCDout,w,c
  4191  000E1C  0BFE               	andlw	-2
  4192  000E1E  1801               	xorwf	??i2_LCDout,w,c
  4193  000E20  6E8C               	movwf	3980,c	;volatile
  4194                           
  4195                           ;LCDIO.c: 36:  LATDbits.LATD1 = (0b1000 & number) >> 3;
  4196  000E22  C002  F001         	movff	i2LCDout@number,??i2_LCDout
  4197  000E26  90D8               	bcf	status,0,c
  4198  000E28  3201               	rrcf	??i2_LCDout,f,c
  4199  000E2A  90D8               	bcf	status,0,c
  4200  000E2C  3201               	rrcf	??i2_LCDout,f,c
  4201  000E2E  90D8               	bcf	status,0,c
  4202  000E30  3201               	rrcf	??i2_LCDout,f,c
  4203  000E32  0E01               	movlw	1
  4204  000E34  1601               	andwf	??i2_LCDout,f,c
  4205  000E36  4601               	rlncf	??i2_LCDout,f,c
  4206  000E38  508C               	movf	3980,w,c	;volatile
  4207  000E3A  1801               	xorwf	??i2_LCDout,w,c
  4208  000E3C  0BFD               	andlw	-3
  4209  000E3E  1801               	xorwf	??i2_LCDout,w,c
  4210  000E40  6E8C               	movwf	3980,c	;volatile
  4211                           
  4212                           ;LCDIO.c: 39:  E_TOG();
  4213  000E42  ECDD  F008         	call	i2_E_TOG	;wreg free
  4214                           
  4215                           ;LCDIO.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
  4216  000E46  0E03               	movlw	3
  4217  000E48                     i2u218_47:
  4218  000E48  2EE8               	decfsz	wreg,f,c
  4219  000E4A  D7FE               	bra	i2u218_47
  4220  000E4C  F000               	nop	
  4221  000E4E  0012               	return		;funcret
  4222  000E50                     __end_ofi2_LCDout:
  4223                           	opt callstack 0
  4224                           
  4225 ;; *************** function i2_E_TOG *****************
  4226 ;; Defined at:
  4227 ;;		line 23 in file "LCDIO.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4241 ;;      Params:         0       0       0       0
  4242 ;;      Locals:         0       0       0       0
  4243 ;;      Temps:          0       0       0       0
  4244 ;;      Totals:         0       0       0       0
  4245 ;;Total ram usage:        0 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		i2_LCDout
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text31
  4255  0011BA                     __ptext31:
  4256                           	opt callstack 0
  4257  0011BA                     i2_E_TOG:
  4258                           	opt callstack 16
  4259                           
  4260                           ;LCDIO.c: 25: LATAbits.LATA6 = 1;
  4261                           
  4262                           ;incstack = 0
  4263  0011BA  8C89               	bsf	3977,6,c	;volatile
  4264                           
  4265                           ;LCDIO.c: 26: _delay((unsigned long)((5)*(8000000/4000000.0)));
  4266  0011BC  0E03               	movlw	3
  4267  0011BE                     i2u219_47:
  4268  0011BE  2EE8               	decfsz	wreg,f,c
  4269  0011C0  D7FE               	bra	i2u219_47
  4270  0011C2  F000               	nop	
  4271                           
  4272                           ;LCDIO.c: 27: LATAbits.LATA6 = 0;
  4273  0011C4  9C89               	bcf	3977,6,c	;volatile
  4274  0011C6  0012               	return		;funcret
  4275  0011C8                     __end_ofi2_E_TOG:
  4276                           	opt callstack 0
  4277                           
  4278                           	psect	rparam
  4279  0000                     
  4280                           	psect	temp
  4281  000039                     btemp:
  4282                           	opt callstack 0
  4283  000039                     	ds	1
  4284  0000                     int$flags	set	btemp
  4285  0000                     wtemp8	set	btemp+1
  4286  0000                     ttemp5	set	btemp+1
  4287  0000                     ttemp6	set	btemp+4
  4288  0000                     ttemp7	set	btemp+8
  4289                           tosu	equ	0xFFF
  4290                           tosh	equ	0xFFE
  4291                           tosl	equ	0xFFD
  4292                           stkptr	equ	0xFFC
  4293                           pclatu	equ	0xFFB
  4294                           pclath	equ	0xFFA
  4295                           pcl	equ	0xFF9
  4296                           tblptru	equ	0xFF8
  4297                           tblptrh	equ	0xFF7
  4298                           tblptrl	equ	0xFF6
  4299                           tablat	equ	0xFF5
  4300                           prodh	equ	0xFF4
  4301                           prodl	equ	0xFF3
  4302                           indf0	equ	0xFEF
  4303                           postinc0	equ	0xFEE
  4304                           postdec0	equ	0xFED
  4305                           preinc0	equ	0xFEC
  4306                           plusw0	equ	0xFEB
  4307                           fsr0h	equ	0xFEA
  4308                           fsr0l	equ	0xFE9
  4309                           wreg	equ	0xFE8
  4310                           indf1	equ	0xFE7
  4311                           postinc1	equ	0xFE6
  4312                           postdec1	equ	0xFE5
  4313                           preinc1	equ	0xFE4
  4314                           plusw1	equ	0xFE3
  4315                           fsr1h	equ	0xFE2
  4316                           fsr1l	equ	0xFE1
  4317                           bsr	equ	0xFE0
  4318                           indf2	equ	0xFDF
  4319                           postinc2	equ	0xFDE
  4320                           postdec2	equ	0xFDD
  4321                           preinc2	equ	0xFDC
  4322                           plusw2	equ	0xFDB
  4323                           fsr2h	equ	0xFDA
  4324                           fsr2l	equ	0xFD9
  4325                           status	equ	0xFD8


Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      56
    BANK0           160    140     148
    BANK1           256      0      32
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> main@temp(BANK0[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@temp(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1613_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@temp(BANK0[32]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@temp(BANK0[32]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    check_RFID@dataBuf	PTR unsigned char  size(2) Largest target is 12
		 -> InterruptHandlerHigh@RFIDbuf(COMRAM[12]), 

    processRFID@RFIDbuf	PTR unsigned char  size(2) Largest target is 12
		 -> InterruptHandlerHigh@RFIDbuf(COMRAM[12]), 

    LCD_String@string	PTR unsigned char  size(2) Largest target is 32
		 -> STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), main@temp(BANK0[32]), 
		 -> STR_1(CODE[15]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stopMotor@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorFullSpeed@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    S413DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S413DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_check_RFID
    _processRFID->i2_ClearLCD
    _processRFID->i2_SetLine
    i2_ClearLCD->i2_SendLCD
    _check_RFID->i2_LCD_String
    i2_SetLine->i2_SendLCD
    i2_LCD_String->i2_SendLCD
    i2_SendLCD->i2_LCDout

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _setup->_init_LCD
    _init_LCD->_SendLCD
    _SetLine->_SendLCD
    _LCD_String->_SendLCD
    _ClearLCD->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   13399
                                            102 BANK0     38    38      0
                           _ClearLCD
                         _LCD_String
                            _SetLine
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7529
                                             86 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7043
                                             78 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    6573
                                             60 BANK0     18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4829
                                             28 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             17 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              1 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             10 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              1 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              1 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              1 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1389
                           _init_LCD
                          _init_RFID
                       _init_sensors
 ---------------------------------------------------------------------------------
 (2) _init_sensors                                         2     2      0       3
                                              1 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _init_RFID                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_LCD                                             1     1      0    1386
                                              5 BANK0      1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _SetLine                                              1     1      0    1324
                                              5 BANK0      1     1      0
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           2     0      2    1707
                                              5 BANK0      2     0      2
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _ClearLCD                                             1     1      0    1262
                                              5 BANK0      1     1      0
                            _SendLCD
 ---------------------------------------------------------------------------------
 (3) _SendLCD                                              2     1      1    1262
                                              3 BANK0      2     1      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (4) _LCDout                                               2     2      0     124
                                              1 BANK0      2     2      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (5) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptHandlerLow                                  1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               12    12      0    2940
                                             30 COMRAM    12    12      0
                         _check_RFID
                        _processRFID
 ---------------------------------------------------------------------------------
 (11) _processRFID                                         6     3      3    1316
                                              5 COMRAM     6     3      3
                         i2_ClearLCD
                          i2_SendLCD
                          i2_SetLine
 ---------------------------------------------------------------------------------
 (12) i2_ClearLCD                                          1     1      0     284
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (11) _check_RFID                                         24    22      2    1600
                                              6 COMRAM    24    22      2
                       i2_LCD_String
                          i2_SetLine
 ---------------------------------------------------------------------------------
 (12) i2_SetLine                                           1     1      0     328
                                              4 COMRAM     1     1      0
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (12) i2_LCD_String                                        2     0      2     381
                                              4 COMRAM     2     0      2
                          i2_SendLCD
 ---------------------------------------------------------------------------------
 (13) i2_SendLCD                                           2     1      1     284
                                              2 COMRAM     2     1      1
                           i2_LCDout
 ---------------------------------------------------------------------------------
 (14) i2_LCDout                                            2     2      0      88
                                              0 COMRAM     2     2      0
                            i2_E_TOG
 ---------------------------------------------------------------------------------
 (15) i2_E_TOG                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCD
       _LCDout
         _E_TOG
   _LCD_String
     _SendLCD
       _LCDout
         _E_TOG
   _SetLine
     _SendLCD
       _LCDout
         _E_TOG
   _setup
     _init_LCD
       _LCDout
         _E_TOG
       _SendLCD
         _LCDout
           _E_TOG
     _init_RFID
     _init_sensors
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 _InterruptHandlerLow (ROOT)

 _InterruptHandlerHigh (ROOT)
   _check_RFID
     i2_LCD_String
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
   _processRFID
     i2_ClearLCD
       i2_SendLCD
         i2_LCDout
           i2_E_TOG
     i2_SendLCD
       i2_LCDout
         i2_E_TOG
     i2_SetLine
       i2_SendLCD
         i2_LCDout
           i2_E_TOG

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8C      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      38       1       59.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EC       3        0.0%
DATA                 0      0      EC      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Feb 25 12:04:41 2020

                           l45 1142                             bsr 000FE0                    ?_LCD_String 0065  
                          l277 0BDE                            l287 0364                            l289 036C  
                          l750 0A38                            l760 0AE8                            _pad 0BAC  
                          wreg 000FE8                   processRFID@i 0009                   __CFG_LVP$OFF 000000  
                         l2101 0C2E                           l2111 09B2                           l2113 09C6  
                         l2123 0A22                           l2131 0A76                           l2051 0B24  
                         l2133 0A8A                           l2061 0FC4                           l2311 1042  
                         l2071 10D2                           l2215 060E                           l2065 0FDC  
                         l2161 03A4                           l2209 05D2                           l2225 0632  
                         l2315 1056                           l2139 0AD2                           l2091 0BD6  
                         l2171 0492                           l2219 061A                           l2325 0E8A  
                         l2069 10CC                           l2093 0BE8                           l2341 07BE  
                         l2319 0E52                           l2087 0BC6                           l2097 0C02  
                         l2361 0846                           l2291 0F4A                           l2363 084E  
                         l2381 08A2                           l2373 086A                           l2357 083A  
                         l2359 0842                           l2289 0F24                           ?_pad 0071  
                         STR_1 0331                           STR_2 0340                           STR_3 0321  
                         STR_4 0311                           STR_5 0301                           u2007 0914  
                         u2017 0928                           u2107 1024                           u2027 093C  
                         u2117 0DD0                           u2037 0956                           _LATB 000F8A  
                         u2127 11B0                           u2047 096E                           u2057 0982  
                         u2067 1058                           u2077 0E84                           u1550 0B1C  
                         u2087 1132                           u1720 035A                           u2097 1012  
                         u1641 0990                           u1570 0B64                           u1660 09CA  
                         u1750 04BE                           u1910 089A                           u1751 04BC  
                         u1760 04CC                           u1920 08A6                           u1690 0A8E  
                         u1770 04D0                           u1860 0E78                           u1870 0EAA  
                         u1785 1002                           u1786 1004                           u1867 0E6E  
                         u1947 082C                           u1877 0EA0                           u1957 0876  
                         u1967 08D0                           u1977 08E6                           u1987 08F8  
                         u1997 0906                           i2l53 0CA6                           i2l58 0CA8  
              __end_ofi2_E_TOG 11C8                           _dbuf 0100                           _main 07B8  
                         _prec 00F0                           _nout 00EC                           pad@i 0078  
                         pad@p 0075                           fsr0h 000FEA                           fsr1h 000FE2  
                         indf0 000FEF                           fsr2h 000FDA                           fsr0l 000FE9  
                         indf1 000FE7                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 007A                           fsr2l 000FD9                           btemp 0039  
                         _utoa 0346                           start 0026                   ___param_bank 000000  
            processRFID@i_1070 000B                __end_of_SendLCD 102C                          ??_pad 0077  
              __end_of_SetLine 1060                          ?_main 0001                          ?_utoa 007C  
              __end_of___lodiv 0A5A                __end_of___lomod 0B0A                          _T5CON 000FB7  
                        _RCREG 000FAE                          _E_TOG 11AC                   vfpfcnvrt@fmt 009E  
                 vfpfcnvrt@llu 00A6               __end_ofi2_LCDout 0E50                          _SPBRG 000FAF  
                  ?i2_ClearLCD 0001                   main@raw_data 00E8                          _flags 00F2  
                        _fputc 0B0A                          _fputs 0FB8                          _setup 113E  
                        pad@fp 0071                          _width 00EE                          _putch 11C8  
                        main@i 00EA             __size_ofi2_SendLCD 0030                          tablat 000FF5  
           __size_ofi2_SetLine 002E             processRFID@RFIDbuf 0006                          ttemp5 003A  
                        ttemp6 003D                          ttemp7 0041                          utoa@d 007E  
                        utoa@i 009A                          utoa@n 0092                          utoa@p 008E  
                        utoa@w 0090                          status 000FD8                          wtemp8 003A  
          __size_of_LCD_String 0062                __end_of_sprintf 0FB8               __end_of_ClearLCD 113E  
             ___lodiv@dividend 0061                 __CFG_MCLRE$OFF 000000                __initialization 1060  
                 __end_of_main 08B0                   __end_of_utoa 04FA                 __CFG_OSC$IRCIO 000000  
             LCD_String@string 0065                         ??_main 00C6                         ??_utoa 0086  
                __activetblptr 000002                         ?_E_TOG 0001               ___lodiv@quotient 0071  
                    ??i2_E_TOG 0001                         ?_fputc 0061                         ?_fputs 006A  
                       ?_setup 0001                         _ANSEL0 000FB8                         _ANSEL1 000FB9  
                       ?_putch 0001                         i2l1921 0670                         i2l1843 0EB4  
                       i2l1835 1102                         i2l1907 0D48                         i2l1933 06F4  
                       i2l1839 1114                         i2l1943 07A4                         i2l1927 06B2  
                       i2l1849 0EE8                         i2l1875 0CEE                         i2l1895 0D2C  
                       i2l1887 0D1C                         _LCDout 0D5C                    SendLCD@Byte 0064  
                       _OSCCON 000FD3                         _PTCON0 000F7F                         _PTCON1 000F7E  
                       _SPBRGH 000FB0                         _PTPERH 000F7A                         _PTPERL 000F7B  
                  SendLCD@type 0063                      ??_SendLCD 0064                  ?_init_sensors 0001  
                    ??_SetLine 0065            __size_ofi2_ClearLCD 001A                   vfprintf@cfmt 00B4  
                    ??___lodiv 0071                      ??___lomod 0071               __end_of_init_LCD 098A  
                       clear_0 1066                         clear_1 1072                         clear_2 107E  
            __end_ofi2_SendLCD 10C2                  ?i2_LCD_String 0005              __end_ofi2_SetLine 111E  
                       pad@buf 0073                         _strlen 10C2                         fputc@c 0061  
                       fputs@c 006E                         fputs@i 006F                         fputs@s 006A  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                         putch@c 0001               __end_of_vfprintf 0F66  
                       utoa@fp 007C                      ??_sprintf 00BC                   ?_processRFID 0006  
                   __accesstop 0060        __end_of__initialization 1084                  ___rparam_used 000001  
               ??_init_sensors 0061                    SetLine@line 0065                  __end_of_E_TOG 11BA  
                    ?i2_LCDout 0001                 __pcstackCOMRAM 0001                  __end_of_fputc 0BAC  
                __end_of_fputs 0FF4                  __end_of_setup 115C                  __end_of_putch 11CA  
               ??i2_LCD_String 0007                   ??_LCD_String 0067                        ??_E_TOG 0061  
__size_of_InterruptHandlerHigh 0CCC                      ?_ClearLCD 0001    __end_of_InterruptHandlerLow 0026  
                      ??_fputc 0065                     _check_RFID 0668                        ??_fputs 006E  
                      ??_setup 0066                        ??_putch 0061                     __pbssBANK0 00EC  
                   __pbssBANK1 0100                        ?_LCDout 0001             __size_of_init_RFID 001A  
           __end_of_LCD_String 0EB2                     ??i2_LCDout 0001                        _CAP1CON 000F63  
                      _DFLTCON 000F60                        ?_strlen 0061                   ??i2_ClearLCD 0005  
                   ??_ClearLCD 0065             __size_of_vfpfcnvrt 016E                        i2_E_TOG 11BA  
                      _PWMCON0 000F6F                        _PWMCON1 000F6E               ___lomod@dividend 0061  
                    ?_init_LCD 0001                __size_of_LCDout 007C                        _SendLCD 0FF4  
                      __Hparam 0000                        _SetLine 102C                        __Lparam 0000  
           __end_ofi2_ClearLCD 11AC          processRFID@latestChar 0008                        ___lodiv 098A  
                      ___lomod 0A5A                      ?_vfprintf 00AE                   __psmallconst 0300  
                      __pcinit 1060                        __ramtop 0300                        __ptext0 07B8  
                      __ptext1 0F66                        __ptext2 0F10                        __ptext3 04FA  
                      __ptext4 0346                        __ptext5 0BAC                        __ptext6 10C2  
                      __ptext7 0FB8                        __ptext8 0B0A                        __ptext9 11C8  
            __end_of_init_RFID 1192               check_RFID@hexBuf 000B                __size_of_strlen 002E  
                 __size_of_pad 009E           __end_of_init_sensors 1178                   LCDout@number 0062  
                  ?_check_RFID 0007                        _sprintf 0F66                 __pintcode_body 0C4A  
         end_of_initialization 1084                     ??_init_LCD 0065           __end_ofi2_LCD_String 0F10  
         __size_of_processRFID 0088                        fputc@fp 0063                  __Lmediumconst 0000  
                      int_func 0C4A                        fputs@fp 006C              __end_of_vfpfcnvrt 0668  
                    _RCSTAbits 000FAB                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     ??_vfprintf 00B4  
                      strlen@a 0063                        strlen@s 0061                     _robot_mode 002C  
                    _PORTDbits 000F83                      i2_SendLCD 1092                      i2_SetLine 10F0  
           i2LCD_String@string 0005                      _TRISAbits 000F92                      _TRISCbits 000F94  
                    _TRISDbits 000F95                 __end_of_LCDout 0DD8                      _TXSTAbits 000FAC  
            __size_ofi2_LCDout 0078            __size_of_check_RFID 0150                    vfpfcnvrt@ap 00A0  
                  vfpfcnvrt@fp 009C                    _BAUDCONbits 000FAA                 __end_of_strlen 10F0  
                   ?i2_SendLCD 0003            start_initialization 1060                ___lodiv@divisor 0069  
                   ?i2_SetLine 0001                ___lodiv@counter 0079                    __end_of_pad 0C4A  
            __size_of_ClearLCD 0020                       ??_LCDout 0061  InterruptHandlerHigh@RFID_flag 002A  
 __end_of_InterruptHandlerHigh 0CD4                    vfprintf@fmt 00B0          __size_of_init_sensors 001C  
                     ??_strlen 0063                    __pbssCOMRAM 002B                  __pcstackBANK0 0060  
                     ?i2_E_TOG 0001          __size_ofi2_LCD_String 005E                 i2LCDout@number 0002  
 __size_of_InterruptHandlerLow 000E              __size_of_init_LCD 00DA                       ?_SendLCD 0063  
                     ?_SetLine 0001                   _init_sensors 115C                      __pintcode 0008  
                     ?___lodiv 0061                       ?___lomod 0061             check_RFID@checksum 001C  
                  __pintcodelo 0018                   i2_LCD_String 0EB2              __size_of_vfprintf 0056  
                     _CAP1BUFH 000F69                       _CAP1BUFL 000F68                ___lomod@divisor 0069  
                  __smallconst 0300                ___lomod@counter 0071                 __size_of_E_TOG 000E  
                  ??i2_SendLCD 0004                    ??i2_SetLine 0005                      _init_RFID 1178  
                 ??_check_RFID 0009                       ?_sprintf 00B6                 __size_of_fputc 00A2  
               __size_of_fputs 003C                 __size_of_setup 001E                 __size_of_putch 0002  
              check_RFID@byte1 0017                check_RFID@byte2 0018                check_RFID@byte3 0019  
              check_RFID@byte4 001A                check_RFID@byte5 001B                       _LATAbits 000F89  
                     _LATCbits 000F8B                       _LATDbits 000F8C                       _IPR1bits 000F9F  
                     _PIE1bits 000F9D                       i2u120_40 0D44                       i2u113_40 0ED8  
                     i2u113_47 0ECE                       i2u114_40 0F08                       i2u130_40 0732  
                     i2u114_47 0EFE                       i2u131_40 0734                       i2u132_40 0742  
                     i2u133_40 0744                       i2u125_40 0708                       i2u109_45 109C  
                     i2u109_46 109E                       i2u213_47 11A2                       i2u134_40 0752  
                     i2u126_40 0712                       i2u118_40 0D18                       i2u214_47 1116  
                     i2u135_40 0754                       i2u127_40 0714                       i2u215_47 0EE2  
                     i2u136_40 0762                       i2u128_40 0722                       i2u216_47 10AA  
                     i2u137_40 0764                       i2u129_40 0724                       i2u217_47 10BA  
                     i2u138_40 0780                       i2u218_47 0E48                       i2u139_40 0782  
                     i2u219_47 11BE                       _PIR1bits 000F9E                       i2_LCDout 0DD8  
                     _RCONbits 000FD0                      _vfpfcnvrt 04FA             __end_of_check_RFID 07B8  
         _InterruptHandlerHigh 0008                       _ClearLCD 111E                     ?_init_RFID 0001  
             __size_ofi2_E_TOG 000E                  ??_processRFID 0009                  i2SendLCD@Byte 0004  
                i2SendLCD@type 0003                    check_RFID@i 001D                       __Hrparam 0000  
             __size_of_SendLCD 0038                     vfprintf@ap 00B2                       __Lrparam 0000  
                   vfprintf@fp 00AE               __size_of_SetLine 0034               __size_of___lodiv 00D0  
             __size_of___lomod 00B0                     ?_vfpfcnvrt 009C          ?_InterruptHandlerHigh 0001  
                   sprintf@fmt 00B8              check_RFID@dataBuf 0007                       __ptext10 0A5A  
                     __ptext11 098A                       __ptext20 0D5C                       __ptext12 113E  
                     __ptext21 11AC                       __ptext13 115C                       __ptext30 0DD8  
                     __ptext14 1178                       __ptext31 11BA                       __ptext15 08B0  
                     __ptext24 0CD4                       __ptext16 102C                       __ptext25 1192  
                     __ptext17 0E50                       __ptext26 0668                       __ptext18 111E  
                     __ptext27 10F0                       __ptext19 0FF4                       __ptext28 0EB2  
                     __ptext29 1092               __size_of_sprintf 0052                       _init_LCD 08B0  
  InterruptHandlerHigh@RFIDbuf 002D                  __size_of_main 00F8                  __size_of_utoa 01B4  
          __end_of_processRFID 0D5C                  i2SetLine@line 0005                       int$flags 0039  
                     _vfprintf 0F10            _InterruptHandlerLow 0018                       main@temp 00C8  
                   _LCD_String 0E50                     _INTCONbits 000FF2                    ??_init_RFID 0061  
                     intlevel1 0000                       intlevel2 0000                      sprintf@ap 00BE  
         ?_InterruptHandlerLow 0001                     _OSCCONbits 000FD3     processRFID@position_in_buf 002B  
                  ??_vfpfcnvrt 00A2         ??_InterruptHandlerHigh 001F                       sprintf@f 00C0  
                     sprintf@s 00B6                     i2_ClearLCD 1192                    _processRFID 0CD4  
        ??_InterruptHandlerLow 0060  
